






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":32028,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server591319343\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1018

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\AppData\\\\Local\\\\Temp\\\\.arduinoIDE-unsaved2021102-28372-1l3ykkb.b43o\\\\sketch_nov2a\\\\sketch_nov2a.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\AppData\\\\Local\\\\Temp\\\\.arduinoIDE-unsaved2021102-28372-1l3ykkb.b43o\\\\sketch_nov2a\\\\sketch_nov2a.ino\"\nvoid setup();\n#line 6 \"C:\\\\Users\\\\banks\\\\AppData\\\\Local\\\\Temp\\\\.arduinoIDE-unsaved2021102-28372-1l3ykkb.b43o\\\\sketch_nov2a\\\\sketch_nov2a.ino\"\nvoid loop();\n#line 1 \"C:\\\\Users\\\\banks\\\\AppData\\\\Local\\\\Temp\\\\.arduinoIDE-unsaved2021102-28372-1l3ykkb.b43o\\\\sketch_nov2a\\\\sketch_nov2a.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp"},"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp","version":1}}Content-Length: 778

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server591319343/sketch/sketch_nov2a.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}






Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":6952,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server171682939\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 902

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 6 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 778

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":8,"character":43},"end":{"line":8,"character":43}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":30}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":6,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":27}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":27}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":27}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":9,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":27}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":26}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":11,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":26}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":11}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":13,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":13}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":14,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":13}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":10}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 208

{"id":17,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":1,"range":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}}]}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":4}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"context":{"diagnostics":[]}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":19,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 345

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"text":"#include \u003cMultiFuncShield.h\u003e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":20,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'MultiFuncShield.h' file not found","range":{"end":{"character":28,"line":7},"start":{"character":9,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 484

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":28},"end":{"line":7,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":22,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":7,"character":28},"end":{"line":7,"character":28}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'MultiFuncShield.h' file not found","range":{"end":{"character":28,"line":7},"start":{"character":9,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":17}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":26,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 563

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 483

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":28,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'MultiFuncShield.h' file not found","range":{"end":{"character":28,"line":2},"start":{"character":9,"line":2}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":30,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":6},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":18}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":31,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 483

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 482

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":16}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":34,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 483

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":16}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 484

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":28}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'MultiFuncShield.h' file not found"}]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":15}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":1},"end":{"line":11,"character":1}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":2,"character":28},"end":{"line":3,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 220

{"id":40,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}}]}Content-Length: 566

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":5}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":28}},"rangeLength":28,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":41,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":2}},"selectionRange":{"end":{"character":10,"line":2},"start":{"character":5,"line":2}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":6}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 906

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 6 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":7}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":8,"character":6}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":43,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":44,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":1},"end":{"line":15,"character":1}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":1}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":46,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":7,"character":1}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":1}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":8,"character":3}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":49,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 308

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":1}},"text":"#"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 593

{"id":50,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 308

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},"text":"#"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 551

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'v'","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":2,"line":7},"start":{"character":1,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 551

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'v'","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":3,"line":7},"start":{"character":1,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":9}}Content-Length: 593

{"id":51,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":3}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 776

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 6 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nv##oid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 407

{"id":53,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":13},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 407

{"id":54,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":13},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":47},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 592

{"id":55,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":8},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":13},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}}]}
>>>
Content-Length: 642

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'v'"},{"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":3}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 552

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'v'","range":{"end":{"character":1,"line":5},"start":{"character":0,"line":5}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":2,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":11}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":12}}Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":5,"character":0}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 592

{"id":59,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":9},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":61,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":14}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"text":"#"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 593

{"id":62,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":15}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"context":{"diagnostics":[]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":64,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":2,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":16}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":57},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":65,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":3,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":17}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":66,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":4,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":18}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":67,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":5,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":19}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":68,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":6,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":20}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":69,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_invalid_directive","message":"Invalid preprocessing directive","range":{"end":{"character":7,"line":5},"start":{"character":1,"line":5}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":21}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":70,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_expects_filename","message":"Expected \"FILENAME\" or <FILENAME>","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":22}}
>>>
Content-Length: 309

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":71,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_expects_filename","message":"Expected \"FILENAME\" or <FILENAME>","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":23}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"text":"\u003c"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":72,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 583

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected '>'\n\nLibraryTests.ino.cpp:6:10: note: to match this '<'","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"message":"To match this '<'\n\nLibraryTests.ino.cpp:8:1: error: expected '>'","range":{"end":{"character":10,"line":5},"start":{"character":9,"line":5}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":24}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"text":"M"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":65},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":73,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 583

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected '>'\n\nLibraryTests.ino.cpp:6:10: note: to match this '<'","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"message":"To match this '<'\n\nLibraryTests.ino.cpp:8:1: error: expected '>'","range":{"end":{"character":10,"line":5},"start":{"character":9,"line":5}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":25}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[]}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":74,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":75,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 583

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected '>'\n\nLibraryTests.ino.cpp:6:10: note: to match this '<'","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"message":"To match this '<'\n\nLibraryTests.ino.cpp:8:1: error: expected '>'","range":{"end":{"character":10,"line":5},"start":{"character":9,"line":5}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":26}}
>>>
Content-Length: 482

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nLibraryTests.ino.cpp:8:1: error: expected '\u003e'"}]}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":76,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"text":"M"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 593

{"id":77,"jsonrpc":"2.0","result":[{"kind":12,"name":"loop","range":{"end":{"character":11,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":9,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}}]}Content-Length: 583

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected '>'\n\nLibraryTests.ino.cpp:6:10: note: to match this '<'","range":{"end":{"character":4,"line":7},"start":{"character":0,"line":7}},"severity":1,"source":"clang"},{"message":"To match this '<'\n\nLibraryTests.ino.cpp:8:1: error: expected '>'","range":{"end":{"character":10,"line":5},"start":{"character":9,"line":5}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":27}}
>>>
Content-Length: 264

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":5,"character":11},"context":{"triggerKind":1}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 3820

{"id":78,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"math.h>","insertText":"math.h>","insertTextFormat":2,"kind":17,"label":" math.h>","score":8,"sortText":"3f000000math.h>","textEdit":{"newText":"math.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"mm3dnow.h>","insertText":"mm3dnow.h>","insertTextFormat":2,"kind":17,"label":" mm3dnow.h>","score":8,"sortText":"3f000000mm3dnow.h>","textEdit":{"newText":"mm3dnow.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"mm_malloc.h>","insertText":"mm_malloc.h>","insertTextFormat":2,"kind":17,"label":" mm_malloc.h>","score":8,"sortText":"3f000000mm_malloc.h>","textEdit":{"newText":"mm_malloc.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"mmintrin.h>","insertText":"mmintrin.h>","insertTextFormat":2,"kind":17,"label":" mmintrin.h>","score":8,"sortText":"3f000000mmintrin.h>","textEdit":{"newText":"mmintrin.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"module.modulemap>","insertText":"module.modulemap>","insertTextFormat":2,"kind":17,"label":" module.modulemap>","score":8,"sortText":"3f000000module.modulemap>","textEdit":{"newText":"module.modulemap>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"movdirintrin.h>","insertText":"movdirintrin.h>","insertTextFormat":2,"kind":17,"label":" movdirintrin.h>","score":8,"sortText":"3f000000movdirintrin.h>","textEdit":{"newText":"movdirintrin.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"msa.h>","insertText":"msa.h>","insertTextFormat":2,"kind":17,"label":" msa.h>","score":8,"sortText":"3f000000msa.h>","textEdit":{"newText":"msa.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"mwaitxintrin.h>","insertText":"mwaitxintrin.h>","insertTextFormat":2,"kind":17,"label":" mwaitxintrin.h>","score":8,"sortText":"3f000000mwaitxintrin.h>","textEdit":{"newText":"mwaitxintrin.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"__clang_cuda_math.h>","insertText":"__clang_cuda_math.h>","insertTextFormat":2,"kind":17,"label":" __clang_cuda_math.h>","score":4,"sortText":"80000000__clang_cuda_math.h>","textEdit":{"newText":"__clang_cuda_math.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"__clang_cuda_math_forward_declares.h>","insertText":"__clang_cuda_math_forward_declares.h>","insertTextFormat":2,"kind":17,"label":" __clang_cuda_math_forward_declares.h>","score":4,"sortText":"80000000__clang_cuda_math_forward_declares.h>","textEdit":{"newText":"__clang_cuda_math_forward_declares.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"__clang_hip_math.h>","insertText":"__clang_hip_math.h>","insertTextFormat":2,"kind":17,"label":" __clang_hip_math.h>","score":4,"sortText":"80000000__clang_hip_math.h>","textEdit":{"newText":"__clang_hip_math.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"__stddef_max_align_t.h>","insertText":"__stddef_max_align_t.h>","insertTextFormat":2,"kind":17,"label":" __stddef_max_align_t.h>","score":4,"sortText":"80000000__stddef_max_align_t.h>","textEdit":{"newText":"__stddef_max_align_t.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}},{"filterText":"arm_mve.h>","insertText":"arm_mve.h>","insertTextFormat":2,"kind":17,"label":" arm_mve.h>","score":4,"sortText":"80000000arm_mve.h>","textEdit":{"newText":"arm_mve.h>","range":{"end":{"character":11,"line":5},"start":{"character":10,"line":5}}}}]}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[]}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":79,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 544

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":28},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cM\n\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":11}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 405

{"id":80,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":81,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":29}}Content-Length: 405

{"id":82,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":30}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":2,"character":13},"end":{"line":2,"character":13}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":83,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":31}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"context":{"diagnostics":[]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 547

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":32},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMult\n\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":10,"character":39}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":85,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":86,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":13}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":2,"character":10}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":79},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":14}},"context":{"diagnostics":[]}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":89,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 364

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":14}},"rangeLength":14,"text":"#include \u003cMultiFuncShield.h\u003e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"id":90,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}}]}Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":33}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":28},"end":{"line":2,"character":28}},"context":{"diagnostics":[]}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":91,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"context":{"diagnostics":[]}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":92,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 949

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":34},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 8 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":34}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":11}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":93,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":94,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"context":{"diagnostics":[]}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"id":95,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"tweakID":"DefineInline"}],"command":"clangd.applyTweak","title":"Move function body to declaration"},"kind":"refactor","title":"Move function body to declaration"}]}
>>>
Content-Length: 770

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"rangeLength":61,"text":"void setup() {\n  // put your setup code here, to run once:\n  \n  MFS.initialize();    // initialize multi-function shield library\n  \n  MFS.writeLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, OFF);\n  \n  MFS.blinkLeds(LED_3 | LED_4, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, OFF);\n  MFS.writeLeds(LED_ALL, OFF);\n}"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171682939/sketch/LibraryTests.ino.cpp"}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/6","percentage":0}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/6","percentage":16.666666666666668}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/6","percentage":33.333333333333336}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/6","percentage":50}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/6","percentage":66.666666666666671}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/6","percentage":83.333333333333329}}}Content-Length: 779

{"id":96,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":31},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}






Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":6952,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server561090091\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1325

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 22 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  \n  MFS.initialize();    // initialize multi-function shield library\n  \n  MFS.writeLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, OFF);\n  \n  MFS.blinkLeds(LED_3 | LED_4, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, OFF);\n  MFS.writeLeds(LED_ALL, OFF);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":26,"character":1},"end":{"line":26,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 778

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":31},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":31},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":0}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":4,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":16}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `LED_1`  \n\n---\n```cpp\n#define LED_1 1\n```"},"range":{"end":{"character":21,"line":16},"start":{"character":16,"line":16}}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}
<<<
Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":48}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":48}},"rangeLength":48,"text":""}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 778

{"id":7,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":31},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":2}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":29,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 778

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":13}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":13}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 779

{"id":10,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":9},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":11,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":5}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":28,"character":15},"end":{"line":28,"character":15}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":28,"character":15},"end":{"line":29,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 779

{"id":13,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":28,"character":15},"end":{"line":29,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 780

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":16,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":7}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":28,"character":15},"end":{"line":28,"character":15}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 780

{"id":15,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":8}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":16}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 1278

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 22 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  \n  MFS.initialize();    // initialize multi-function shield library\n  \n  MFS.writeLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, OFF);\n  \n  MFS.blinkLeds(LED_3 | LED_4, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, OFF);\n  MFS.writeLeds(LED_ALL, OFF);\n}\n\nvoid loop() { ; }\n\n"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":10,"character":43},"end":{"line":11,"character":0}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 780

{"id":18,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":43}},"context":{"diagnostics":[]}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":19,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":43}},"rangeLength":43,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 780

{"id":20,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":9,"character":14},"end":{"line":10,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 780

{"id":21,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":27},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":9,"character":14},"end":{"line":10,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 780

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":12}}
>>>
Content-Length: 1232

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 20 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 3 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {  \n  MFS.initialize();    // initialize multi-function shield library\n  \n  MFS.writeLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_1 | LED_2, OFF);\n  \n  MFS.blinkLeds(LED_3 | LED_4, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, ON);\n  delay(2000);\n  MFS.blinkLeds(LED_ALL, OFF);\n  MFS.writeLeds(LED_ALL, OFF);\n}\n\nvoid loop() { ; }\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":29},"end":{"line":12,"character":29}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 780

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":10,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":9,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":17,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":35},"end":{"line":14,"character":35}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":29}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":27,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":31},"start":{"character":8,"line":31}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 181

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 189

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}}Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":36},"end":{"line":16,"character":36}},"context":{"diagnostics":[]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":36}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":29,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":27,"character":0}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":36}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":31,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 3178

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":27,"character":0}},"rangeLength":432,"text":"#include \u003cMultiFuncShield.h\u003e\n\n/*\n\nFor more information and help, please visit https://www.cohesivecomputing.co.uk/hackatronics/arduino-multi-function-shield/part-3/\n\nAll our hackatronics projects are free for personal use, and there are many more\nin the pipeline. If you find our projects helpful or useful, please consider making\na small donation to our hackatronics fund using the donate buttons on our web pages.\nThank you.\n\n*/\n\nenum CountDownModeValues\n{\n  COUNTING_STOPPED,\n  COUNTING\n};\n\nbyte countDownMode = COUNTING_STOPPED;\n\nbyte tenths = 0;\nchar seconds = 0;\nchar minutes = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n  byte btn = MFS.getButton();\n  \n  switch (countDownMode)\n  {\n    case COUNTING_STOPPED:\n        if (btn == BUTTON_1_SHORT_RELEASE \u0026\u0026 (minutes + seconds) \u003e 0)\n        {\n          // start the timer\n          countDownMode = COUNTING;\n        }\n        else if (btn == BUTTON_1_LONG_PRESSED)\n        {\n          // reset the timer\n          tenths = 0;\n          seconds = 0;\n          minutes = 0;\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_2_PRESSED || btn == BUTTON_2_LONG_PRESSED)\n        {\n          minutes++;\n          if (minutes \u003e 60)\n          {\n            minutes = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_3_PRESSED || btn == BUTTON_3_LONG_PRESSED)\n        {\n          seconds += 10;\n          if (seconds \u003e= 60)\n          {\n            seconds = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        break;\n        \n    case COUNTING:\n        if (btn == BUTTON_1_SHORT_RELEASE || btn == BUTTON_1_LONG_RELEASE)\n        {\n          // stop the timer\n          countDownMode = COUNTING_STOPPED;\n        }\n        else\n        {\n          // continue counting down\n          tenths++;\n          \n          if (tenths == 10)\n          {\n            tenths = 0;\n            seconds--;\n            \n            if (seconds \u003c 0 \u0026\u0026 minutes \u003e 0)\n            {\n              seconds = 59;\n              minutes--;\n            }\n            \n            if (minutes == 0 \u0026\u0026 seconds == 0)\n            {\n              // timer has reached 0, so sound the alarm\n              MFS.beep(50, 50, 3);  // beep 3 times, 500 milliseconds on / 500 off\n              countDownMode = COUNTING_STOPPED;\n            }\n            \n            MFS.write(minutes*100 + seconds);\n          }\n          delay(100);\n        }\n        break;\n  }\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server561090091/sketch/LibraryTests.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 102

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":32,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":6952,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server550571091\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3618

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n/*\n\nFor more information and help, please visit https://www.cohesivecomputing.co.uk/hackatronics/arduino-multi-function-shield/part-3/\n\nAll our hackatronics projects are free for personal use, and there are many more\nin the pipeline. If you find our projects helpful or useful, please consider making\na small donation to our hackatronics fund using the donate buttons on our web pages.\nThank you.\n\n*/\n\nenum CountDownModeValues\n{\n  COUNTING_STOPPED,\n  COUNTING\n};\n\nbyte countDownMode = COUNTING_STOPPED;\n\nbyte tenths = 0;\nchar seconds = 0;\nchar minutes = 0;\n\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 35 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n  byte btn = MFS.getButton();\n  \n  switch (countDownMode)\n  {\n    case COUNTING_STOPPED:\n        if (btn == BUTTON_1_SHORT_RELEASE \u0026\u0026 (minutes + seconds) \u003e 0)\n        {\n          // start the timer\n          countDownMode = COUNTING;\n        }\n        else if (btn == BUTTON_1_LONG_PRESSED)\n        {\n          // reset the timer\n          tenths = 0;\n          seconds = 0;\n          minutes = 0;\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_2_PRESSED || btn == BUTTON_2_LONG_PRESSED)\n        {\n          minutes++;\n          if (minutes \u003e 60)\n          {\n            minutes = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_3_PRESSED || btn == BUTTON_3_LONG_PRESSED)\n        {\n          seconds += 10;\n          if (seconds \u003e= 60)\n          {\n            seconds = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        break;\n        \n    case COUNTING:\n        if (btn == BUTTON_1_SHORT_RELEASE || btn == BUTTON_1_LONG_RELEASE)\n        {\n          // stop the timer\n          countDownMode = COUNTING_STOPPED;\n        }\n        else\n        {\n          // continue counting down\n          tenths++;\n          \n          if (tenths == 10)\n          {\n            tenths = 0;\n            seconds--;\n            \n            if (seconds \u003c 0 \u0026\u0026 minutes \u003e 0)\n            {\n              seconds = 59;\n              minutes--;\n            }\n            \n            if (minutes == 0 \u0026\u0026 seconds == 0)\n            {\n              // timer has reached 0, so sound the alarm\n              MFS.beep(50, 50, 3);  // beep 3 times, 500 milliseconds on / 500 off\n              countDownMode = COUNTING_STOPPED;\n            }\n            \n            MFS.write(minutes*100 + seconds);\n          }\n          delay(100);\n        }\n        break;\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/31","percentage":0}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/31","percentage":3.225806451612903}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/31","percentage":3.225806451612903}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/31","percentage":6.4516129032258061}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/31","percentage":6.4516129032258061}}}Content-Length: 157

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/31","percentage":9.67741935483871}}}Content-Length: 157

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/31","percentage":9.67741935483871}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/31","percentage":12.903225806451612}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/31","percentage":12.903225806451612}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 2173

{"id":1,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}Content-Length: 2173

{"id":2,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/31","percentage":16.129032258064516}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/31","percentage":16.129032258064516}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/31","percentage":19.35483870967742}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/31","percentage":19.35483870967742}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/31","percentage":22.580645161290324}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/31","percentage":22.580645161290324}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/31","percentage":25.806451612903224}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/31","percentage":25.806451612903224}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/31","percentage":29.032258064516128}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/31","percentage":29.032258064516128}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/31","percentage":32.258064516129032}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/31","percentage":32.258064516129032}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/31","percentage":35.483870967741936}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/31","percentage":35.483870967741936}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/31","percentage":38.70967741935484}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/31","percentage":38.70967741935484}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/31","percentage":41.935483870967744}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/31","percentage":41.935483870967744}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/31","percentage":45.161290322580648}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/31","percentage":45.161290322580648}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/31","percentage":48.387096774193552}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/31","percentage":48.387096774193552}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/31","percentage":51.612903225806448}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/31","percentage":51.612903225806448}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/31","percentage":54.838709677419352}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/31","percentage":54.838709677419352}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/31","percentage":58.064516129032256}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/31","percentage":58.064516129032256}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/31","percentage":61.29032258064516}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/31","percentage":61.29032258064516}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/31","percentage":64.516129032258064}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/31","percentage":64.516129032258064}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/31","percentage":67.741935483870961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/31","percentage":67.741935483870961}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/31","percentage":70.967741935483872}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/31","percentage":70.967741935483872}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/31","percentage":74.193548387096769}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/31","percentage":74.193548387096769}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/31","percentage":77.41935483870968}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/31","percentage":80.645161290322577}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/31","percentage":83.870967741935488}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/31","percentage":87.096774193548384}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/31","percentage":90.322580645161295}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/31","percentage":93.548387096774192}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/31","percentage":96.774193548387103}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":10}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":44,"character":8}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `btn`  \n\n---\nType: `byte`  \nput your main code here, to run repeatedly:  \n\n---\n```cpp\n// In loop\nbyte btn = MFS.getButton()\n```"},"range":{"end":{"character":10,"line":44},"start":{"character":7,"line":44}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":25}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1_SHORT_RELEASE`  \n\n---\n```cpp\n#define BUTTON_1_SHORT_RELEASE (1 | BUTTON_SHORT_RELEASE_IND)\n```"},"range":{"end":{"character":41,"line":49},"start":{"character":19,"line":49}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":29}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"id":6,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1_SHORT_RELEASE`  \n\n---\n```cpp\n#define BUTTON_1_SHORT_RELEASE (1 | BUTTON_SHORT_RELEASE_IND)\n```"},"range":{"end":{"character":41,"line":49},"start":{"character":19,"line":49}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":34,"character":43}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":8,"character":43}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":6,"character":98}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":9,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":6,"character":77}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":6,"character":77}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":6,"character":77},"end":{"line":6,"character":77}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":10}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"id":13,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `COUNTING`  \n\n---\nType: `enum CountDownModeValues`  \nValue = `1`  \n\n---\n```cpp\n// In CountDownModeValues\nCOUNTING\n```"},"range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":83,"character":56}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":14,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1_LONG_RELEASE`  \n\n---\n```cpp\n#define BUTTON_1_LONG_RELEASE (1 | BUTTON_LONG_RELEASE_IND)\n```"},"range":{"end":{"character":73,"line":83},"start":{"character":52,"line":83}}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":91,"character":19},"end":{"line":91,"character":19}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":86,"character":43},"end":{"line":86,"character":43}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":6,"character":14}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":14}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":18,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `COUNTING_STOPPED`  \n\n---\nType: `enum CountDownModeValues`  \nValue = `0`  \n\n---\n```cpp\n// In CountDownModeValues\nCOUNTING_STOPPED\n```"},"range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":23,"character":14}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":6}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"id":20,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":8,"line":37},"start":{"character":2,"line":37}}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":6}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":21,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":37},"start":{"character":2,"line":37}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":37,"character":6},"end":{"line":37,"character":6}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":5}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"id":23,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":8,"line":37},"start":{"character":2,"line":37}}}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":8}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":13}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 326

{"id":25,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":14,"line":37},"start":{"character":9,"line":37}}}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":13}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":26,"jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":120},"start":{"character":9,"line":120}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}]}
>>>
Content-Length: 5704

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include \u003cinttypes.h\u003e\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to \u003e 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE\u003e256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE\u003e256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":19}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":27,"jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":120},"start":{"character":9,"line":120}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}]}
>>>
Content-Length: 5704

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include \u003cinttypes.h\u003e\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to \u003e 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE\u003e256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE\u003e256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":37,"character":19}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":28,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":20,"line":37},"start":{"character":19,"line":37}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":34,"character":57}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":34,"character":57},"end":{"line":34,"character":57}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":33,"character":14}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":31,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":42,"character":26}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":32,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":44,"character":26}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":33,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `getButton`  \n\n---\n→ `byte`  \nPulls a button action from the button queue.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: byte getButton()\n```"},"range":{"end":{"character":26,"line":44},"start":{"character":17,"line":44}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":44,"character":27}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 327

{"id":34,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `getButton`  \n\n---\n→ `byte`  \nPulls a button action from the button queue.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: byte getButton()\n```"},"range":{"end":{"character":28,"line":44},"start":{"character":27,"line":44}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":46,"character":14}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"id":35,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `countDownMode`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\nbyte countDownMode = COUNTING_STOPPED\n```"},"range":{"end":{"character":23,"line":46},"start":{"character":10,"line":46}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":46,"character":15}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 482

{"id":36,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":2,"range":{"end":{"character":23,"line":46},"start":{"character":10,"line":46}}},{"kind":3,"range":{"end":{"character":23,"line":52},"start":{"character":10,"line":52}}},{"kind":3,"range":{"end":{"character":23,"line":86},"start":{"character":10,"line":86}}},{"kind":3,"range":{"end":{"character":27,"line":108},"start":{"character":14,"line":108}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":46,"character":10},"end":{"line":46,"character":23}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":44,"character":9}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":38,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `btn`  \n\n---\nType: `byte`  \nput your main code here, to run repeatedly:  \n\n---\n```cpp\n// In loop\nbyte btn = MFS.getButton()\n```"},"range":{"end":{"character":10,"line":44},"start":{"character":7,"line":44}}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":44,"character":9}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 836

{"id":39,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":44},"start":{"character":7,"line":44}}},{"kind":2,"range":{"end":{"character":15,"line":49},"start":{"character":12,"line":49}}},{"kind":2,"range":{"end":{"character":20,"line":54},"start":{"character":17,"line":54}}},{"kind":2,"range":{"end":{"character":20,"line":62},"start":{"character":17,"line":62}}},{"kind":2,"range":{"end":{"character":47,"line":62},"start":{"character":44,"line":62}}},{"kind":2,"range":{"end":{"character":20,"line":71},"start":{"character":17,"line":71}}},{"kind":2,"range":{"end":{"character":47,"line":71},"start":{"character":44,"line":71}}},{"kind":2,"range":{"end":{"character":15,"line":83},"start":{"character":12,"line":83}}},{"kind":2,"range":{"end":{"character":48,"line":83},"start":{"character":45,"line":83}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":44,"character":7},"end":{"line":44,"character":10}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":31}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":41,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1_SHORT_RELEASE`  \n\n---\n```cpp\n#define BUTTON_1_SHORT_RELEASE (1 | BUTTON_SHORT_RELEASE_IND)\n```"},"range":{"end":{"character":41,"line":49},"start":{"character":19,"line":49}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":32}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":49,"character":32},"end":{"line":49,"character":32}},"context":{"diagnostics":[]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 428

{"id":43,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":32,"line":49},"start":{"character":32,"line":49}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'BUTTON_1_SHORT_RELEASE'"},"kind":"refactor","title":"Expand macro 'BUTTON_1_SHORT_RELEASE'"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":52,"character":31}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":44,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `COUNTING`  \n\n---\nType: `enum CountDownModeValues`  \nValue = `1`  \n\n---\n```cpp\n// In CountDownModeValues\nCOUNTING\n```"},"range":{"end":{"character":34,"line":52},"start":{"character":26,"line":52}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":51,"character":23}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":45,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":52,"character":34}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":46,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `COUNTING`  \n\n---\nType: `enum CountDownModeValues`  \nValue = `1`  \n\n---\n```cpp\n// In CountDownModeValues\nCOUNTING\n```"},"range":{"end":{"character":34,"line":52},"start":{"character":26,"line":52}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":53}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 256

{"id":47,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `minutes`  \n\n---\nType: `char`  \nValue = `0`  \n\n---\n```cpp\nchar minutes = 0\n```"},"range":{"end":{"character":53,"line":49},"start":{"character":46,"line":49}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":50}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 256

{"id":48,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `minutes`  \n\n---\nType: `char`  \nValue = `0`  \n\n---\n```cpp\nchar minutes = 0\n```"},"range":{"end":{"character":53,"line":49},"start":{"character":46,"line":49}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":49,"character":59}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 256

{"id":49,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `seconds`  \n\n---\nType: `char`  \nValue = `0`  \n\n---\n```cpp\nchar seconds = 0\n```"},"range":{"end":{"character":63,"line":49},"start":{"character":56,"line":49}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":52,"character":18}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"id":50,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `countDownMode`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\nbyte countDownMode = COUNTING_STOPPED\n```"},"range":{"end":{"character":23,"line":52},"start":{"character":10,"line":52}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":54,"character":30}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":51,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1_LONG_PRESSED`  \n\n---\n```cpp\n#define BUTTON_1_LONG_PRESSED (1 | BUTTON_LONG_PRESSED_IND)\n```"},"range":{"end":{"character":45,"line":54},"start":{"character":24,"line":54}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":56,"character":28}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":28}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":58,"character":20}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":54,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":60,"character":13}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":55,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":13,"line":60},"start":{"character":10,"line":60}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":60,"character":14}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":56,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":19,"line":60},"start":{"character":14,"line":60}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":60,"character":16}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 482

{"id":57,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":35},"start":{"character":6,"line":35}}},{"kind":1,"range":{"end":{"character":19,"line":60},"start":{"character":14,"line":60}}},{"kind":1,"range":{"end":{"character":19,"line":69},"start":{"character":14,"line":69}}},{"kind":1,"range":{"end":{"character":19,"line":78},"start":{"character":14,"line":78}}},{"kind":1,"range":{"end":{"character":21,"line":111},"start":{"character":16,"line":111}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server550571091/sketch/LibraryTests.ino.cpp"},"position":{"line":60,"character":16}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":59,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 197

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 13263

{"id":60,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":451,"character":14}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"id":61,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":461,"character":18}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 367

{"id":62,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \nPassed as textstring  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":22,"line":461},"start":{"character":11,"line":461}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":36}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":63,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `DISPLAY_OVERFLOW_ERROR`  \n\n---\nType: `const char`  \nValue = `69`  \n\n---\n```cpp\nconst char DISPLAY_OVERFLOW_ERROR = 'E'\n```"},"range":{"end":{"character":43,"line":455},"start":{"character":21,"line":455}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":3}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":64,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":5}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":65,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":5}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 483

{"id":66,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}},{"kind":1,"range":{"end":{"character":9,"line":461},"start":{"character":4,"line":461}}},{"kind":1,"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}},{"kind":1,"range":{"end":{"character":7,"line":499},"start":{"character":2,"line":499}}},{"kind":1,"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":460,"character":12}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"id":67,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":15,"line":460},"start":{"character":4,"line":460}}}}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":5}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":68,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":7}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":69,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":468,"character":14}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":475,"character":11}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"id":71,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":17,"line":475},"start":{"character":6,"line":475}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":475,"character":11}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 759

{"id":72,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}}},{"kind":1,"range":{"end":{"character":15,"line":455},"start":{"character":4,"line":455}}},{"kind":1,"range":{"end":{"character":21,"line":456},"start":{"character":10,"line":456}}},{"kind":1,"range":{"end":{"character":15,"line":460},"start":{"character":4,"line":460}}},{"kind":1,"range":{"end":{"character":22,"line":461},"start":{"character":11,"line":461}}},{"kind":1,"range":{"end":{"character":17,"line":475},"start":{"character":6,"line":475}}},{"kind":1,"range":{"end":{"character":17,"line":480},"start":{"character":6,"line":480}}},{"kind":1,"range":{"end":{"character":22,"line":483},"start":{"character":11,"line":483}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":475,"character":17}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":73,"jsonrpc":"2.0","result":[{"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":451,"character":16}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"id":74,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":39}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":75,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `DISPLAY_OVERFLOW_ERROR`  \n\n---\nType: `const char`  \nValue = `69`  \n\n---\n```cpp\nconst char DISPLAY_OVERFLOW_ERROR = 'E'\n```"},"range":{"end":{"character":43,"line":455},"start":{"character":21,"line":455}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":458,"character":22}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":76,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":28}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":77,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `DISPLAY_OVERFLOW_ERROR`  \n\n---\nType: `const char`  \nValue = `69`  \n\n---\n```cpp\nconst char DISPLAY_OVERFLOW_ERROR = 'E'\n```"},"range":{"end":{"character":43,"line":455},"start":{"character":21,"line":455}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":10}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 427

{"id":78,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":483},"start":{"character":10,"line":483}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":7}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 483

{"id":79,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}},{"kind":1,"range":{"end":{"character":9,"line":461},"start":{"character":4,"line":461}}},{"kind":1,"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}},{"kind":1,"range":{"end":{"character":7,"line":499},"start":{"character":2,"line":499}}},{"kind":1,"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":7}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":80,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":510,"character":14}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":81,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":14,"line":510},"start":{"character":10,"line":510}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":510,"character":13}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":82,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":14,"line":510},"start":{"character":10,"line":510}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":40}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":83,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":33}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":84,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":33,"line":504},"start":{"character":28,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":56}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"id":85,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `rightJustify`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte rightJustify = 0\n```"},"range":{"end":{"character":63,"line":504},"start":{"character":51,"line":504}}}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":3,"character":21}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"id":86,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_SAMPLE_INTERVAL`  \n\n---\n```cpp\n#define BUTTON_SAMPLE_INTERVAL (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\n```"},"range":{"end":{"character":30,"line":3},"start":{"character":8,"line":3}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":27}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":10,"character":51}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":88,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `LED_3_PIN`  \n\n---\n```cpp\n#define LED_3_PIN 11\n```"},"range":{"end":{"character":51,"line":10},"start":{"character":42,"line":10}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":10,"character":41}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"id":89,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `const byte [4]`  \nValue = `{13, 12, 11, 10}`"},"range":{"end":{"character":41,"line":10},"start":{"character":40,"line":10}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":44,"character":18}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":90,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":63,"character":13}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":91,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":58,"character":13}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 253

{"id":92,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buttonBit`  \n\n---\nType: `uint8_t [3]`  \n\n---\n```cpp\nuint8_t buttonBit[3]\n```"},"range":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":3,"character":35}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":93,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":28,"character":10}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":94,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":13,"line":28},"start":{"character":9,"line":28}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":56,"character":11}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":95,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":88,"character":8}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"id":96,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"end":{"character":9,"line":88},"start":{"character":2,"line":88}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":127,"character":33}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":97,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":327,"character":37}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":98,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":333,"character":24}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":99,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":340,"character":17}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":100,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":340},"start":{"character":5,"line":340}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":10}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"id":101,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":15,"line":455},"start":{"character":4,"line":455}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":19}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 368

{"id":102,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \nPassed as textstring  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":21,"line":456},"start":{"character":10,"line":456}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":7}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":103,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":7}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 426

{"id":104,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":7}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 426

{"id":105,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":10}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"id":106,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayText`  \n\n---\nType: `char [5]`  \nValue = `{32, 32, 32, 32, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nchar displayText[5] = {' ', ' ', ' ', ' ', 0}\n```"},"range":{"end":{"character":15,"line":455},"start":{"character":4,"line":455}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":455,"character":10}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 760

{"id":107,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}}},{"kind":1,"range":{"end":{"character":15,"line":455},"start":{"character":4,"line":455}}},{"kind":1,"range":{"end":{"character":21,"line":456},"start":{"character":10,"line":456}}},{"kind":1,"range":{"end":{"character":15,"line":460},"start":{"character":4,"line":460}}},{"kind":1,"range":{"end":{"character":22,"line":461},"start":{"character":11,"line":461}}},{"kind":1,"range":{"end":{"character":17,"line":475},"start":{"character":6,"line":475}}},{"kind":1,"range":{"end":{"character":17,"line":480},"start":{"character":6,"line":480}}},{"kind":1,"range":{"end":{"character":22,"line":483},"start":{"character":11,"line":483}}}]}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":6}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 484

{"id":108,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}},{"kind":1,"range":{"end":{"character":9,"line":461},"start":{"character":4,"line":461}}},{"kind":1,"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}},{"kind":1,"range":{"end":{"character":7,"line":499},"start":{"character":2,"line":499}}},{"kind":1,"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":456,"character":6}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":109,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":34}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":110,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `pBuf`  \n\n---\nType: `byte *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte *pBuf = displayBuf\n```"},"range":{"end":{"character":38,"line":506},"start":{"character":34,"line":506}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":512,"character":17}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":111,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `offset`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte offset = 0\n```"},"range":{"end":{"character":17,"line":512},"start":{"character":16,"line":512}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":518,"character":11}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":112,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayBuf`  \n\n---\nType: `byte [4]`  \nValue = `{0, 0, 0, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte displayBuf[] = {0, 0, 0, 0}\n```"},"range":{"end":{"character":18,"line":518},"start":{"character":8,"line":518}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":518,"character":12}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":113,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayBuf`  \n\n---\nType: `byte [4]`  \nValue = `{0, 0, 0, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte displayBuf[] = {0, 0, 0, 0}\n```"},"range":{"end":{"character":18,"line":518},"start":{"character":8,"line":518}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":518,"character":51}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":114,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":518,"character":49}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":115,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":116,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"id":117,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":1,"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}},{"kind":1,"range":{"end":{"character":43,"line":528},"start":{"character":24,"line":528}}},{"kind":1,"range":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":118,"jsonrpc":"2.0","result":[{"range":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":957,"character":52}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":119,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":118},"jsonrpc":"2.0"}Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":29}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 471

{"id":120,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `SEGMENT_MAP_DIGIT`  \n\n---\nType: `const byte [10]`  \nValue = `{192, 249, 164, 176, 153, 146, 130, 248, 128, 144}`  \nSegment byte maps for numbers 0 to 9  \n\n---\n```cpp\nconst byte SEGMENT_MAP_DIGIT[] = {192, 249, 164, 176, 153,\n                                  146, 130, 248, 128, 144}\n```"},"range":{"end":{"character":36,"line":964},"start":{"character":19,"line":964}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":966,"character":22}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":121,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 196

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 15044

{"id":122,"jsonrpc":"2.0","result":[{"children":[{"kind":8,"name":"userInterrupt","range":{"end":{"character":34,"line":68},"start":{"character":4,"line":68}},"selectionRange":{"end":{"character":24,"line":68},"start":{"character":11,"line":68}}},{"kind":6,"name":"initialize","range":{"end":{"character":21,"line":71},"start":{"character":4,"line":71}},"selectionRange":{"end":{"character":19,"line":71},"start":{"character":9,"line":71}}},{"kind":6,"name":"isrCallBack","range":{"end":{"character":22,"line":74},"start":{"character":4,"line":74}},"selectionRange":{"end":{"character":20,"line":74},"start":{"character":9,"line":74}}},{"kind":6,"name":"setTimer","range":{"end":{"character":45,"line":77},"start":{"character":4,"line":77}},"selectionRange":{"end":{"character":17,"line":77},"start":{"character":9,"line":77}}},{"kind":6,"name":"getTimer","range":{"end":{"character":28,"line":80},"start":{"character":4,"line":80}},"selectionRange":{"end":{"character":26,"line":80},"start":{"character":18,"line":80}}},{"kind":6,"name":"wait","range":{"end":{"character":40,"line":83},"start":{"character":4,"line":83}},"selectionRange":{"end":{"character":13,"line":83},"start":{"character":9,"line":83}}},{"kind":6,"name":"write","range":{"end":{"character":60,"line":86},"start":{"character":4,"line":86}},"selectionRange":{"end":{"character":14,"line":86},"start":{"character":9,"line":86}}},{"kind":6,"name":"write","range":{"end":{"character":27,"line":87},"start":{"character":4,"line":87}},"selectionRange":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}},{"kind":6,"name":"write","range":{"end":{"character":52,"line":88},"start":{"character":4,"line":88}},"selectionRange":{"end":{"character":14,"line":88},"start":{"character":9,"line":88}}},{"kind":6,"name":"manualDisplayRefresh","range":{"end":{"character":31,"line":92},"start":{"character":4,"line":92}},"selectionRange":{"end":{"character":29,"line":92},"start":{"character":9,"line":92}}},{"kind":6,"name":"blinkDisplay","range":{"end":{"character":21,"line":97},"start":{"character":4,"line":95}},"selectionRange":{"end":{"character":21,"line":95},"start":{"character":9,"line":95}}},{"kind":6,"name":"setDisplayBrightness","range":{"end":{"character":41,"line":99},"start":{"character":4,"line":99}},"selectionRange":{"end":{"character":29,"line":99},"start":{"character":9,"line":99}}},{"kind":6,"name":"writeLeds","range":{"end":{"character":20,"line":104},"start":{"character":4,"line":102}},"selectionRange":{"end":{"character":18,"line":102},"start":{"character":9,"line":102}}},{"kind":6,"name":"blinkLeds","range":{"end":{"character":20,"line":109},"start":{"character":4,"line":107}},"selectionRange":{"end":{"character":18,"line":107},"start":{"character":9,"line":107}}},{"kind":6,"name":"beep","range":{"end":{"character":169,"line":112},"start":{"character":4,"line":112}},"selectionRange":{"end":{"character":13,"line":112},"start":{"character":9,"line":112}}},{"kind":6,"name":"setBeepOffPeriod","range":{"end":{"character":49,"line":115},"start":{"character":4,"line":115}},"selectionRange":{"end":{"character":25,"line":115},"start":{"character":9,"line":115}}},{"kind":6,"name":"queueButton","range":{"end":{"character":34,"line":118},"start":{"character":4,"line":118}},"selectionRange":{"end":{"character":20,"line":118},"start":{"character":9,"line":118}}},{"kind":6,"name":"getButton","range":{"end":{"character":20,"line":121},"start":{"character":4,"line":121}},"selectionRange":{"end":{"character":18,"line":121},"start":{"character":9,"line":121}}},{"kind":6,"name":"manualButtonHandler","range":{"end":{"character":30,"line":125},"start":{"character":4,"line":125}},"selectionRange":{"end":{"character":28,"line":125},"start":{"character":9,"line":125}}},{"kind":6,"name":"initPulseInCounter","range":{"end":{"character":29,"line":131},"start":{"character":4,"line":128}},"selectionRange":{"end":{"character":27,"line":128},"start":{"character":9,"line":128}}},{"kind":6,"name":"disablePulseInCounter","range":{"end":{"character":32,"line":133},"start":{"character":4,"line":133}},"selectionRange":{"end":{"character":30,"line":133},"start":{"character":9,"line":133}}},{"kind":6,"name":"getPulseInPeriod","range":{"end":{"character":35,"line":136},"start":{"character":4,"line":136}},"selectionRange":{"end":{"character":33,"line":136},"start":{"character":17,"line":136}}},{"kind":6,"name":"getPulseInTotalCount","range":{"end":{"character":40,"line":139},"start":{"character":4,"line":139}},"selectionRange":{"end":{"character":38,"line":139},"start":{"character":18,"line":139}}},{"kind":6,"name":"resetPulseInTotalCount","range":{"end":{"character":33,"line":142},"start":{"character":4,"line":142}},"selectionRange":{"end":{"character":31,"line":142},"start":{"character":9,"line":142}}},{"kind":6,"name":"setPulseInTimeOut","range":{"end":{"character":48,"line":145},"start":{"character":4,"line":145}},"selectionRange":{"end":{"character":26,"line":145},"start":{"character":9,"line":145}}},{"kind":6,"name":"initSonar","range":{"end":{"character":51,"line":148},"start":{"character":4,"line":148}},"selectionRange":{"end":{"character":18,"line":148},"start":{"character":9,"line":148}}},{"kind":6,"name":"getSonarDataCm","range":{"end":{"character":62,"line":151},"start":{"character":4,"line":151}},"selectionRange":{"end":{"character":31,"line":151},"start":{"character":17,"line":151}}},{"kind":6,"name":"initLM35","range":{"end":{"character":50,"line":154},"start":{"character":4,"line":154}},"selectionRange":{"end":{"character":17,"line":154},"start":{"character":9,"line":154}}},{"kind":6,"name":"getLM35Data","range":{"end":{"character":21,"line":157},"start":{"character":4,"line":157}},"selectionRange":{"end":{"character":19,"line":157},"start":{"character":8,"line":157}}},{"kind":8,"name":"timerReadInProgress","range":{"end":{"character":41,"line":160},"start":{"character":4,"line":160}},"selectionRange":{"end":{"character":37,"line":160},"start":{"character":18,"line":160}}},{"kind":8,"name":"timerWriteInProgress","range":{"end":{"character":42,"line":161},"start":{"character":4,"line":161}},"selectionRange":{"end":{"character":38,"line":161},"start":{"character":18,"line":161}}},{"kind":8,"name":"buttonBuffer","range":{"end":{"character":48,"line":165},"start":{"character":4,"line":165}},"selectionRange":{"end":{"character":30,"line":165},"start":{"character":18,"line":165}}},{"kind":8,"name":"buttonBufferCount","range":{"end":{"character":39,"line":166},"start":{"character":4,"line":166}},"selectionRange":{"end":{"character":35,"line":166},"start":{"character":18,"line":166}}},{"kind":8,"name":"button_write_pos","range":{"end":{"character":38,"line":167},"start":{"character":4,"line":167}},"selectionRange":{"end":{"character":34,"line":167},"start":{"character":18,"line":167}}},{"kind":8,"name":"button_read_pos","range":{"end":{"character":37,"line":168},"start":{"character":4,"line":168}},"selectionRange":{"end":{"character":33,"line":168},"start":{"character":18,"line":168}}},{"kind":8,"name":"buttonSampleIntervalCounter","range":{"end":{"character":47,"line":170},"start":{"character":4,"line":170}},"selectionRange":{"end":{"character":44,"line":170},"start":{"character":17,"line":170}}},{"kind":8,"name":"buttonState","range":{"end":{"character":44,"line":171},"start":{"character":4,"line":171}},"selectionRange":{"end":{"character":20,"line":171},"start":{"character":9,"line":171}}},{"kind":8,"name":"buttonPressTime","range":{"end":{"character":56,"line":172},"start":{"character":4,"line":172}},"selectionRange":{"end":{"character":32,"line":172},"start":{"character":17,"line":172}}},{"kind":8,"name":"timer_volatile","range":{"end":{"character":45,"line":174},"start":{"character":4,"line":174}},"selectionRange":{"end":{"character":41,"line":174},"start":{"character":27,"line":174}}},{"kind":8,"name":"timer_safe","range":{"end":{"character":41,"line":175},"start":{"character":4,"line":175}},"selectionRange":{"end":{"character":37,"line":175},"start":{"character":27,"line":175}}},{"kind":8,"name":"beeperModifyInProgress","range":{"end":{"character":44,"line":177},"start":{"character":4,"line":177}},"selectionRange":{"end":{"character":40,"line":177},"start":{"character":18,"line":177}}},{"kind":8,"name":"beeperState","range":{"end":{"character":32,"line":178},"start":{"character":4,"line":178}},"selectionRange":{"end":{"character":29,"line":178},"start":{"character":18,"line":178}}},{"kind":8,"name":"beeperOnPeriodReloadValue","range":{"end":{"character":54,"line":179},"start":{"character":4,"line":179}},"selectionRange":{"end":{"character":51,"line":179},"start":{"character":26,"line":179}}},{"kind":8,"name":"beeperOffPeriodReloadValue","range":{"end":{"character":55,"line":180},"start":{"character":4,"line":180}},"selectionRange":{"end":{"character":52,"line":180},"start":{"character":26,"line":180}}},{"kind":8,"name":"beeperPeriodCounter","range":{"end":{"character":49,"line":181},"start":{"character":4,"line":181}},"selectionRange":{"end":{"character":45,"line":181},"start":{"character":26,"line":181}}},{"kind":8,"name":"beeperCycleReloadValue","range":{"end":{"character":44,"line":182},"start":{"character":4,"line":182}},"selectionRange":{"end":{"character":40,"line":182},"start":{"character":18,"line":182}}},{"kind":8,"name":"beeperCycleCounter","range":{"end":{"character":39,"line":183},"start":{"character":4,"line":183}},"selectionRange":{"end":{"character":36,"line":183},"start":{"character":18,"line":183}}},{"kind":8,"name":"beeperLoopCycleCounter","range":{"end":{"character":51,"line":184},"start":{"character":4,"line":184}},"selectionRange":{"end":{"character":48,"line":184},"start":{"character":26,"line":184}}},{"kind":8,"name":"beeperLoopDelayPeriodReloadValue","range":{"end":{"character":61,"line":185},"start":{"character":4,"line":185}},"selectionRange":{"end":{"character":58,"line":185},"start":{"character":26,"line":185}}},{"kind":8,"name":"displayIdx","range":{"end":{"character":23,"line":187},"start":{"character":4,"line":187}},"selectionRange":{"end":{"character":19,"line":187},"start":{"character":9,"line":187}}},{"kind":8,"name":"blinkEnabled","range":{"end":{"character":25,"line":188},"start":{"character":4,"line":188}},"selectionRange":{"end":{"character":21,"line":188},"start":{"character":9,"line":188}}},{"kind":8,"name":"blinkState","range":{"end":{"character":23,"line":189},"start":{"character":4,"line":189}},"selectionRange":{"end":{"character":19,"line":189},"start":{"character":9,"line":189}}},{"kind":8,"name":"blinkCounter","range":{"end":{"character":25,"line":190},"start":{"character":4,"line":190}},"selectionRange":{"end":{"character":21,"line":190},"start":{"character":9,"line":190}}},{"kind":8,"name":"ledState","range":{"end":{"character":20,"line":192},"start":{"character":4,"line":192}},"selectionRange":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}},{"kind":8,"name":"ledBlinkEnabled","range":{"end":{"character":27,"line":193},"start":{"character":4,"line":193}},"selectionRange":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}},{"kind":8,"name":"ledOutput","range":{"end":{"character":20,"line":194},"start":{"character":4,"line":194}},"selectionRange":{"end":{"character":18,"line":194},"start":{"character":9,"line":194}}},{"kind":8,"name":"pulseInEnabled","range":{"end":{"character":40,"line":196},"start":{"character":4,"line":196}},"selectionRange":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}},{"kind":8,"name":"pulseInReadInProgress","range":{"end":{"character":42,"line":197},"start":{"character":4,"line":197}},"selectionRange":{"end":{"character":39,"line":197},"start":{"character":18,"line":197}}},{"kind":8,"name":"pulseInWriteInProgress","range":{"end":{"character":43,"line":198},"start":{"character":4,"line":198}},"selectionRange":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}}},{"kind":8,"name":"pulseInTimeOut","range":{"end":{"character":47,"line":200},"start":{"character":4,"line":200}},"selectionRange":{"end":{"character":40,"line":200},"start":{"character":26,"line":200}}},{"kind":8,"name":"pulseInPin","range":{"end":{"character":43,"line":201},"start":{"character":4,"line":201}},"selectionRange":{"end":{"character":28,"line":201},"start":{"character":18,"line":201}}},{"kind":8,"name":"pulseInPeriodCounter","range":{"end":{"character":53,"line":202},"start":{"character":4,"line":202}},"selectionRange":{"end":{"character":46,"line":202},"start":{"character":26,"line":202}}},{"kind":8,"name":"pulseInTrigger","range":{"end":{"character":38,"line":203},"start":{"character":4,"line":203}},"selectionRange":{"end":{"character":32,"line":203},"start":{"character":18,"line":203}}},{"kind":8,"name":"pulseInPeriod_volatile","range":{"end":{"character":51,"line":204},"start":{"character":4,"line":204}},"selectionRange":{"end":{"character":48,"line":204},"start":{"character":26,"line":204}}},{"kind":8,"name":"pulseInPeriod_safe","range":{"end":{"character":47,"line":205},"start":{"character":4,"line":205}},"selectionRange":{"end":{"character":44,"line":205},"start":{"character":26,"line":205}}},{"kind":8,"name":"pulseInState","range":{"end":{"character":33,"line":206},"start":{"character":4,"line":206}},"selectionRange":{"end":{"character":30,"line":206},"start":{"character":18,"line":206}}},{"kind":8,"name":"pulseInTotalCount_volatile","range":{"end":{"character":57,"line":207},"start":{"character":4,"line":207}},"selectionRange":{"end":{"character":53,"line":207},"start":{"character":27,"line":207}}},{"kind":8,"name":"pulseInTotalCount_safe","range":{"end":{"character":53,"line":208},"start":{"character":4,"line":208}},"selectionRange":{"end":{"character":49,"line":208},"start":{"character":27,"line":208}}},{"kind":8,"name":"sonarSmoothingLevel","range":{"end":{"character":49,"line":210},"start":{"character":4,"line":210}},"selectionRange":{"end":{"character":28,"line":210},"start":{"character":9,"line":210}}},{"kind":8,"name":"lm35SmoothingLevel","range":{"end":{"character":48,"line":211},"start":{"character":4,"line":211}},"selectionRange":{"end":{"character":27,"line":211},"start":{"character":9,"line":211}}}],"kind":5,"name":"MultiFuncShield","range":{"end":{"character":1,"line":212},"start":{"character":0,"line":63}},"selectionRange":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}}},{"kind":13,"name":"MFS","range":{"end":{"character":26,"line":214},"start":{"character":0,"line":214}},"selectionRange":{"end":{"character":26,"line":214},"start":{"character":23,"line":214}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":60,"line":217},"start":{"character":0,"line":217}},"selectionRange":{"end":{"character":20,"line":217},"start":{"character":11,"line":217}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":92,"line":220},"start":{"character":0,"line":220}},"selectionRange":{"end":{"character":20,"line":220},"start":{"character":11,"line":220}}}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":37,"character":40}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":123,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":85,"character":20}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":124,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":82,"character":22}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":125,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":82,"character":23}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":126,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":82,"character":12}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":127,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":82,"character":28}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":128,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":85,"character":32}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":129,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":86,"character":59}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":130,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":86,"character":13}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":131,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":14,"line":86},"start":{"character":9,"line":86}}}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":91,"character":51}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":132,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":88,"character":15}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":133,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":88,"character":14}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":134,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":87,"character":12}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":135,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":87,"character":12}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":136,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}}}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":87,"character":10}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":137,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 237

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":87,"character":12}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":138,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}}]}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":87,"character":12}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":139,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":140,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":5}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":141,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":6}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":142,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":6}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 484

{"id":143,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}},{"kind":1,"range":{"end":{"character":9,"line":461},"start":{"character":4,"line":461}}},{"kind":1,"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}},{"kind":1,"range":{"end":{"character":7,"line":499},"start":{"character":2,"line":499}}},{"kind":1,"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":483,"character":6}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":144,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":6}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"id":145,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":503,"character":36}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":146,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":16}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"id":147,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayMemory`  \n\n---\nType: `volatile byte [4]`  \nValue = `{255, 255, 255, 255}`  \n\n---\n```cpp\nvolatile byte displayMemory[4] = {255, 255, 255, 255}\n```"},"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":15}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 942

{"id":148,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":1,"range":{"end":{"character":36,"line":544},"start":{"character":23,"line":544}}},{"kind":1,"range":{"end":{"character":19,"line":550},"start":{"character":6,"line":550}}},{"kind":1,"range":{"end":{"character":19,"line":555},"start":{"character":6,"line":555}}},{"kind":1,"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}},{"kind":1,"range":{"end":{"character":53,"line":659},"start":{"character":40,"line":659}}},{"kind":1,"range":{"end":{"character":51,"line":668},"start":{"character":38,"line":668}}},{"kind":1,"range":{"end":{"character":41,"line":672},"start":{"character":28,"line":672}}},{"kind":1,"range":{"end":{"character":47,"line":907},"start":{"character":34,"line":907}}},{"kind":1,"range":{"end":{"character":39,"line":910},"start":{"character":26,"line":910}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":15}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":149,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":13}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"id":150,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayMemory`  \n\n---\nType: `volatile byte [4]`  \nValue = `{255, 255, 255, 255}`  \n\n---\n```cpp\nvolatile byte displayMemory[4] = {255, 255, 255, 255}\n```"},"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":14}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":151,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":19}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 332

{"id":152,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayMemory`  \n\n---\nType: `volatile byte [4]`  \nValue = `{255, 255, 255, 255}`  \n\n---\n```cpp\nvolatile byte displayMemory[4] = {255, 255, 255, 255}\n```"},"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":19}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 942

{"id":153,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":1,"range":{"end":{"character":36,"line":544},"start":{"character":23,"line":544}}},{"kind":1,"range":{"end":{"character":19,"line":550},"start":{"character":6,"line":550}}},{"kind":1,"range":{"end":{"character":19,"line":555},"start":{"character":6,"line":555}}},{"kind":1,"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}},{"kind":1,"range":{"end":{"character":53,"line":659},"start":{"character":40,"line":659}}},{"kind":1,"range":{"end":{"character":51,"line":668},"start":{"character":38,"line":668}}},{"kind":1,"range":{"end":{"character":41,"line":672},"start":{"character":28,"line":672}}},{"kind":1,"range":{"end":{"character":47,"line":907},"start":{"character":34,"line":907}}},{"kind":1,"range":{"end":{"character":39,"line":910},"start":{"character":26,"line":910}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":20}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":154,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":19,"character":36}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":155,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":23}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"id":156,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `WriteValueToSegment`  \n\n---\n→ `void`  \nParameters:  \n- `byte Segment`\n- `byte Value`\n\nWrite a value to one of the 4 digits of the display  \n\n---\n```cpp\nvoid WriteValueToSegment(byte Segment, byte Value)\n```"},"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":23}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":157,"jsonrpc":"2.0","result":[{"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":21}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 755

{"id":158,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":1,"range":{"end":{"character":21,"line":80},"start":{"character":2,"line":80}}},{"kind":1,"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}},{"kind":1,"range":{"end":{"character":27,"line":663},"start":{"character":8,"line":663}}},{"kind":1,"range":{"end":{"character":25,"line":668},"start":{"character":6,"line":668}}},{"kind":1,"range":{"end":{"character":25,"line":708},"start":{"character":6,"line":708}}},{"kind":1,"range":{"end":{"character":21,"line":907},"start":{"character":2,"line":907}}},{"kind":1,"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":21}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":159,"jsonrpc":"2.0","result":[{"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 234

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1191,"character":22}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":160,"jsonrpc":"2.0","result":[{"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1191,"character":11}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"id":161,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `WriteValueToSegment`  \n\n---\n→ `void`  \nParameters:  \n- `byte Segment`\n- `byte Value`\n\nWrite a value to one of the 4 digits of the display  \n\n---\n```cpp\nvoid WriteValueToSegment(byte Segment, byte Value)\n```"},"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":17}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":162,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1196},"start":{"character":15,"line":1196}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":23}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":163,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":16}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":164,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1196},"start":{"character":15,"line":1196}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":46}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":165,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":46}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":166,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1196,"character":46}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":167,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1202,"character":37}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 367

{"id":168,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `SEGMENT_SELECT`  \n\n---\nType: `const byte [4]`  \nValue = `{241, 242, 244, 248}`  \nByte maps to select digit 1 to 4  \n\n---\n```cpp\nconst byte SEGMENT_SELECT[] = {241, 242, 244, 248}\n```"},"range":{"end":{"character":42,"line":1202},"start":{"character":28,"line":1202}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1223,"character":30}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":169,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 60

{"method":"shutdown","params":null,"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":170,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":1796,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server944867431\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 101

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":1,"jsonrpc":"2.0"}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 3618

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n/*\n\nFor more information and help, please visit https://www.cohesivecomputing.co.uk/hackatronics/arduino-multi-function-shield/part-3/\n\nAll our hackatronics projects are free for personal use, and there are many more\nin the pipeline. If you find our projects helpful or useful, please consider making\na small donation to our hackatronics fund using the donate buttons on our web pages.\nThank you.\n\n*/\n\nenum CountDownModeValues\n{\n  COUNTING_STOPPED,\n  COUNTING\n};\n\nbyte countDownMode = COUNTING_STOPPED;\n\nbyte tenths = 0;\nchar seconds = 0;\nchar minutes = 0;\n\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 35 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n  byte btn = MFS.getButton();\n  \n  switch (countDownMode)\n  {\n    case COUNTING_STOPPED:\n        if (btn == BUTTON_1_SHORT_RELEASE \u0026\u0026 (minutes + seconds) \u003e 0)\n        {\n          // start the timer\n          countDownMode = COUNTING;\n        }\n        else if (btn == BUTTON_1_LONG_PRESSED)\n        {\n          // reset the timer\n          tenths = 0;\n          seconds = 0;\n          minutes = 0;\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_2_PRESSED || btn == BUTTON_2_LONG_PRESSED)\n        {\n          minutes++;\n          if (minutes \u003e 60)\n          {\n            minutes = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_3_PRESSED || btn == BUTTON_3_LONG_PRESSED)\n        {\n          seconds += 10;\n          if (seconds \u003e= 60)\n          {\n            seconds = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        break;\n        \n    case COUNTING:\n        if (btn == BUTTON_1_SHORT_RELEASE || btn == BUTTON_1_LONG_RELEASE)\n        {\n          // stop the timer\n          countDownMode = COUNTING_STOPPED;\n        }\n        else\n        {\n          // continue counting down\n          tenths++;\n          \n          if (tenths == 10)\n          {\n            tenths = 0;\n            seconds--;\n            \n            if (seconds \u003c 0 \u0026\u0026 minutes \u003e 0)\n            {\n              seconds = 59;\n              minutes--;\n            }\n            \n            if (minutes == 0 \u0026\u0026 seconds == 0)\n            {\n              // timer has reached 0, so sound the alarm\n              MFS.beep(50, 50, 3);  // beep 3 times, 500 milliseconds on / 500 off\n              countDownMode = COUNTING_STOPPED;\n            }\n            \n            MFS.write(minutes*100 + seconds);\n          }\n          delay(100);\n        }\n        break;\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server944867431/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 2173

{"id":4,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1215,"character":25}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `ledIdx`  \n\n---\nType: `byte`  \n\n---\n```cpp\n// In writeLed\nbyte ledIdx\n```"},"range":{"end":{"character":27,"line":1215},"start":{"character":21,"line":1215}}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":6,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":34452,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server435482587\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3618

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n/*\n\nFor more information and help, please visit https://www.cohesivecomputing.co.uk/hackatronics/arduino-multi-function-shield/part-3/\n\nAll our hackatronics projects are free for personal use, and there are many more\nin the pipeline. If you find our projects helpful or useful, please consider making\na small donation to our hackatronics fund using the donate buttons on our web pages.\nThank you.\n\n*/\n\nenum CountDownModeValues\n{\n  COUNTING_STOPPED,\n  COUNTING\n};\n\nbyte countDownMode = COUNTING_STOPPED;\n\nbyte tenths = 0;\nchar seconds = 0;\nchar minutes = 0;\n\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 35 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 26 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n  byte btn = MFS.getButton();\n  \n  switch (countDownMode)\n  {\n    case COUNTING_STOPPED:\n        if (btn == BUTTON_1_SHORT_RELEASE \u0026\u0026 (minutes + seconds) \u003e 0)\n        {\n          // start the timer\n          countDownMode = COUNTING;\n        }\n        else if (btn == BUTTON_1_LONG_PRESSED)\n        {\n          // reset the timer\n          tenths = 0;\n          seconds = 0;\n          minutes = 0;\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_2_PRESSED || btn == BUTTON_2_LONG_PRESSED)\n        {\n          minutes++;\n          if (minutes \u003e 60)\n          {\n            minutes = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_3_PRESSED || btn == BUTTON_3_LONG_PRESSED)\n        {\n          seconds += 10;\n          if (seconds \u003e= 60)\n          {\n            seconds = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        break;\n        \n    case COUNTING:\n        if (btn == BUTTON_1_SHORT_RELEASE || btn == BUTTON_1_LONG_RELEASE)\n        {\n          // stop the timer\n          countDownMode = COUNTING_STOPPED;\n        }\n        else\n        {\n          // continue counting down\n          tenths++;\n          \n          if (tenths == 10)\n          {\n            tenths = 0;\n            seconds--;\n            \n            if (seconds \u003c 0 \u0026\u0026 minutes \u003e 0)\n            {\n              seconds = 59;\n              minutes--;\n            }\n            \n            if (minutes == 0 \u0026\u0026 seconds == 0)\n            {\n              // timer has reached 0, so sound the alarm\n              MFS.beep(50, 50, 3);  // beep 3 times, 500 milliseconds on / 500 off\n              countDownMode = COUNTING_STOPPED;\n            }\n            \n            MFS.write(minutes*100 + seconds);\n          }\n          delay(100);\n        }\n        break;\n  }\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}
>>>
Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 2173

{"id":1,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 2173

{"id":4,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":18}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1220},"start":{"character":15,"line":1220}}}}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 2173

{"id":6,"jsonrpc":"2.0","result":[{"children":[{"kind":22,"name":"COUNTING_STOPPED","range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}},"selectionRange":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}},{"kind":22,"name":"COUNTING","range":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":2,"line":18}}}],"kind":10,"name":"CountDownModeValues","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":24,"line":15},"start":{"character":5,"line":15}}},{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":18,"line":21},"start":{"character":5,"line":21}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":23},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":11,"line":23},"start":{"character":5,"line":23}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":12,"line":24},"start":{"character":5,"line":24}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":25},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":12,"line":25},"start":{"character":5,"line":25}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":38},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":10,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}}]}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":8,"character":26}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":17}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"id":8,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `COUNTING_STOPPED`  \n\n---\nType: `enum CountDownModeValues`  \nValue = `0`  \n\n---\n```cpp\n// In CountDownModeValues\nCOUNTING_STOPPED\n```"},"range":{"end":{"character":18,"line":17},"start":{"character":2,"line":17}}}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":19,"character":2}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":19,"character":2}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":19,"character":2}},"rangeLength":462,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 1552

{"id":11,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":18,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":5,"line":8}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":5,"line":9}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":12,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":9,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":102},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}Content-Length: 1378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":37,"line":6},"start":{"character":21,"line":6}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":33},"start":{"character":9,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":37},"start":{"character":26,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":67},"start":{"character":9,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":71},"start":{"character":26,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":93},"start":{"character":30,"line":93}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 1552

{"id":13,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":18,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":11,"line":8},"start":{"character":5,"line":8}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":5,"line":9}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":12,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":9,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":102},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":14,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":18,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}}]}Content-Length: 1378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":37,"line":5},"start":{"character":21,"line":5}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":32},"start":{"character":9,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":36},"start":{"character":26,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":66},"start":{"character":9,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":70},"start":{"character":26,"line":70}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":92},"start":{"character":30,"line":92}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":16,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":18,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":11,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}}]}
>>>
Content-Length: 3143

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\nbyte countDownMode = COUNTING_STOPPED;\n\nbyte tenths = 0;\nchar seconds = 0;\nchar minutes = 0;\n\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 19 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n  byte btn = MFS.getButton();\n  \n  switch (countDownMode)\n  {\n    case COUNTING_STOPPED:\n        if (btn == BUTTON_1_SHORT_RELEASE \u0026\u0026 (minutes + seconds) \u003e 0)\n        {\n          // start the timer\n          countDownMode = COUNTING;\n        }\n        else if (btn == BUTTON_1_LONG_PRESSED)\n        {\n          // reset the timer\n          tenths = 0;\n          seconds = 0;\n          minutes = 0;\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_2_PRESSED || btn == BUTTON_2_LONG_PRESSED)\n        {\n          minutes++;\n          if (minutes \u003e 60)\n          {\n            minutes = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        else if (btn == BUTTON_3_PRESSED || btn == BUTTON_3_LONG_PRESSED)\n        {\n          seconds += 10;\n          if (seconds \u003e= 60)\n          {\n            seconds = 0;\n          }\n          MFS.write(minutes*100 + seconds);\n        }\n        break;\n        \n    case COUNTING:\n        if (btn == BUTTON_1_SHORT_RELEASE || btn == BUTTON_1_LONG_RELEASE)\n        {\n          // stop the timer\n          countDownMode = COUNTING_STOPPED;\n        }\n        else\n        {\n          // continue counting down\n          tenths++;\n          \n          if (tenths == 10)\n          {\n            tenths = 0;\n            seconds--;\n            \n            if (seconds \u003c 0 \u0026\u0026 minutes \u003e 0)\n            {\n              seconds = 59;\n              minutes--;\n            }\n            \n            if (minutes == 0 \u0026\u0026 seconds == 0)\n            {\n              // timer has reached 0, so sound the alarm\n              MFS.beep(50, 50, 3);  // beep 3 times, 500 milliseconds on / 500 off\n              countDownMode = COUNTING_STOPPED;\n            }\n            \n            MFS.write(minutes*100 + seconds);\n          }\n          delay(100);\n        }\n        break;\n  }\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":17,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":18,"line":4},"start":{"character":5,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":18,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":37,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":18,"line":4},"start":{"character":5,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":14},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":19,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":36,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":15},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 1378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":37,"line":4},"start":{"character":21,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":5}}Content-Length: 1743

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'yte'; did you mean 'byte'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:127:17:\nnote: 'byte' declared here","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":36,"line":4},"start":{"character":20,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 1548

{"id":20,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 1545

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'te'","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":35,"line":4},"start":{"character":19,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":7}}Content-Length: 1548

{"id":21,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":16},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":22,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":22,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":15,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 1544

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'e'","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":34,"line":4},"start":{"character":18,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 1548

{"id":23,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":15,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 323

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":17},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":24,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":24,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":14,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":14,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 1548

{"id":25,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":14,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":14,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":18},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":26,"jsonrpc":"2.0","result":[{"kind":13,"name":"countDownMode","range":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":19},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 1580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":14,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":33,"line":4},"start":{"character":17,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":9}}Content-Length: 1547

{"id":27,"jsonrpc":"2.0","result":[{"kind":13,"name":"ountDownMode","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":20},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 1581

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":32,"line":4},"start":{"character":16,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":10}}Content-Length: 3809

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":31,"line":4},"start":{"character":15,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ountDownMode' declared here","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"message":"'ountDownMode' declared here\n\nLibraryTests.ino.cpp:30:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'?","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ountDownMode' declared here","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"message":"'ountDownMode' declared here\n\nLibraryTests.ino.cpp:36:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'?","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ountDownMode' declared here","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"message":"'ountDownMode' declared here\n\nLibraryTests.ino.cpp:70:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'?","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ountDownMode' declared here","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"message":"'ountDownMode' declared here\n\nLibraryTests.ino.cpp:92:15: error: use of undeclared identifier 'countDownMode'; did you mean 'ountDownMode'?","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":11}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":28,"jsonrpc":"2.0"}Content-Length: 1546

{"id":29,"jsonrpc":"2.0","result":[{"kind":13,"name":"untDownMode","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 3793

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":30,"line":4},"start":{"character":14,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'untDownMode' declared here","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"message":"'untDownMode' declared here\n\nLibraryTests.ino.cpp:30:11: error: use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'?","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'untDownMode' declared here","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"message":"'untDownMode' declared here\n\nLibraryTests.ino.cpp:36:11: error: use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'?","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'untDownMode' declared here","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"message":"'untDownMode' declared here\n\nLibraryTests.ino.cpp:70:11: error: use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'?","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'untDownMode' declared here","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"message":"'untDownMode' declared here\n\nLibraryTests.ino.cpp:92:15: error: use of undeclared identifier 'countDownMode'; did you mean 'untDownMode'?","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":12}}Content-Length: 1546

{"id":30,"jsonrpc":"2.0","result":[{"kind":13,"name":"untDownMode","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":21},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":31,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 1545

{"id":31,"jsonrpc":"2.0","result":[{"kind":13,"name":"ntDownMode","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 3777

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":29,"line":4},"start":{"character":13,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ntDownMode' declared here","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"message":"'ntDownMode' declared here\n\nLibraryTests.ino.cpp:30:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'?","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ntDownMode' declared here","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"message":"'ntDownMode' declared here\n\nLibraryTests.ino.cpp:36:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'?","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ntDownMode' declared here","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"message":"'ntDownMode' declared here\n\nLibraryTests.ino.cpp:70:11: error: use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'?","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'ntDownMode' declared here","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"message":"'ntDownMode' declared here\n\nLibraryTests.ino.cpp:92:15: error: use of undeclared identifier 'countDownMode'; did you mean 'ntDownMode'?","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":13}}Content-Length: 1545

{"id":32,"jsonrpc":"2.0","result":[{"kind":13,"name":"ntDownMode","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":22},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":33,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 1542

{"id":33,"jsonrpc":"2.0","result":[{"kind":13,"name":"tDownMode","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 3756

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":28,"line":4},"start":{"character":12,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'tDownMode' declared here","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"message":"'tDownMode' declared here\n\nLibraryTests.ino.cpp:30:11: error: use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'?","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'tDownMode' declared here","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"message":"'tDownMode' declared here\n\nLibraryTests.ino.cpp:36:11: error: use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'?","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'tDownMode' declared here","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"message":"'tDownMode' declared here\n\nLibraryTests.ino.cpp:70:11: error: use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'?","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'tDownMode' declared here","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"message":"'tDownMode' declared here\n\nLibraryTests.ino.cpp:92:15: error: use of undeclared identifier 'countDownMode'; did you mean 'tDownMode'?","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":14}}Content-Length: 1542

{"id":34,"jsonrpc":"2.0","result":[{"kind":13,"name":"tDownMode","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":23},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":35,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 1541

{"id":35,"jsonrpc":"2.0","result":[{"kind":13,"name":"DownMode","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2360

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":27,"line":4},"start":{"character":11,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":15}}Content-Length: 1541

{"id":36,"jsonrpc":"2.0","result":[{"kind":13,"name":"DownMode","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":24},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":37,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 1540

{"id":37,"jsonrpc":"2.0","result":[{"kind":13,"name":"ownMode","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2360

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":26,"line":4},"start":{"character":10,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":16}}Content-Length: 1540

{"id":38,"jsonrpc":"2.0","result":[{"kind":13,"name":"ownMode","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":25},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":39,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 1539

{"id":39,"jsonrpc":"2.0","result":[{"kind":13,"name":"wnMode","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":4},"start":{"character":9,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":17}}Content-Length: 1539

{"id":40,"jsonrpc":"2.0","result":[{"kind":13,"name":"wnMode","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":26},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":41,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 1538

{"id":41,"jsonrpc":"2.0","result":[{"kind":13,"name":"nMode","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":24,"line":4},"start":{"character":8,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":18}}Content-Length: 1538

{"id":42,"jsonrpc":"2.0","result":[{"kind":13,"name":"nMode","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":27},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":43,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 1537

{"id":43,"jsonrpc":"2.0","result":[{"kind":13,"name":"Mode","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":23,"line":4},"start":{"character":7,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":19}}Content-Length: 1537

{"id":44,"jsonrpc":"2.0","result":[{"kind":13,"name":"Mode","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":28},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":45,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 1536

{"id":45,"jsonrpc":"2.0","result":[{"kind":13,"name":"ode","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":22,"line":4},"start":{"character":6,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":20}}Content-Length: 1536

{"id":46,"jsonrpc":"2.0","result":[{"kind":13,"name":"ode","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":29},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":47,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 1535

{"id":47,"jsonrpc":"2.0","result":[{"kind":13,"name":"de","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":21,"line":4},"start":{"character":5,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":21}}Content-Length: 1535

{"id":48,"jsonrpc":"2.0","result":[{"kind":13,"name":"de","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":30},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":49,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 1534

{"id":49,"jsonrpc":"2.0","result":[{"kind":13,"name":"e","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2359

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":20,"line":4},"start":{"character":4,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":22}}Content-Length: 1534

{"id":50,"jsonrpc":"2.0","result":[{"kind":13,"name":"e","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":31},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":51,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 1354

{"id":51,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 1354

{"id":52,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":32},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 1354

{"id":53,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":33},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 2138

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":2,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":23}}Content-Length: 1551

{"id":54,"jsonrpc":"2.0","result":[{"kind":13,"name":"COUNTING_STOPPED","range":{"end":{"character":17,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":55,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":34},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 2138

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":24}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":55,"jsonrpc":"2.0"}Content-Length: 1551

{"id":56,"jsonrpc":"2.0","result":[{"kind":13,"name":"COUNTING_STOPPED","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":57,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":35},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 1572

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":17,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":25}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":57,"jsonrpc":"2.0"}Content-Length: 1550

{"id":58,"jsonrpc":"2.0","result":[{"kind":13,"name":"OUNTING_STOPPED","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":59,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":36},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 1572

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":26}}Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":27}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":59,"jsonrpc":"2.0"}Content-Length: 1549

{"id":60,"jsonrpc":"2.0","result":[{"kind":13,"name":"UNTING_STOPPED","range":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":28}}Content-Length: 1549

{"id":61,"jsonrpc":"2.0","result":[{"kind":13,"name":"UNTING_STOPPED","range":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":37},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":62,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"id":62,"jsonrpc":"2.0","result":[{"kind":13,"name":"NTING_STOPPED","range":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":29}}Content-Length: 1548

{"id":63,"jsonrpc":"2.0","result":[{"kind":13,"name":"NTING_STOPPED","range":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":13,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":38},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":64,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1547

{"id":64,"jsonrpc":"2.0","result":[{"kind":13,"name":"TING_STOPPED","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":30}}Content-Length: 1547

{"id":65,"jsonrpc":"2.0","result":[{"kind":13,"name":"TING_STOPPED","range":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":39},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":66,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 1546

{"id":66,"jsonrpc":"2.0","result":[{"kind":13,"name":"ING_STOPPED","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":31}}Content-Length: 1546

{"id":67,"jsonrpc":"2.0","result":[{"kind":13,"name":"ING_STOPPED","range":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":40},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":68,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 1545

{"id":68,"jsonrpc":"2.0","result":[{"kind":13,"name":"NG_STOPPED","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2165

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":32}}Content-Length: 1545

{"id":69,"jsonrpc":"2.0","result":[{"kind":13,"name":"NG_STOPPED","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":41},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":70,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 1542

{"id":70,"jsonrpc":"2.0","result":[{"kind":13,"name":"G_STOPPED","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":33}}Content-Length: 1542

{"id":71,"jsonrpc":"2.0","result":[{"kind":13,"name":"G_STOPPED","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":42},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":72,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 1541

{"id":72,"jsonrpc":"2.0","result":[{"kind":13,"name":"_STOPPED","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":34}}Content-Length: 1541

{"id":73,"jsonrpc":"2.0","result":[{"kind":13,"name":"_STOPPED","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":43},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":74,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 1540

{"id":74,"jsonrpc":"2.0","result":[{"kind":13,"name":"STOPPED","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":35}}Content-Length: 1540

{"id":75,"jsonrpc":"2.0","result":[{"kind":13,"name":"STOPPED","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":44},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":76,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 1539

{"id":76,"jsonrpc":"2.0","result":[{"kind":13,"name":"TOPPED","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":36}}Content-Length: 1539

{"id":77,"jsonrpc":"2.0","result":[{"kind":13,"name":"TOPPED","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":45},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":78,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 1538

{"id":78,"jsonrpc":"2.0","result":[{"kind":13,"name":"OPPED","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":37}}Content-Length: 1538

{"id":79,"jsonrpc":"2.0","result":[{"kind":13,"name":"OPPED","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":46},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":80,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 1537

{"id":80,"jsonrpc":"2.0","result":[{"kind":13,"name":"PPED","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":38}}Content-Length: 1537

{"id":81,"jsonrpc":"2.0","result":[{"kind":13,"name":"PPED","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":47},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":82,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 1536

{"id":82,"jsonrpc":"2.0","result":[{"kind":13,"name":"PED","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":39}}Content-Length: 1536

{"id":83,"jsonrpc":"2.0","result":[{"kind":13,"name":"PED","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":48},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":84,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 1535

{"id":84,"jsonrpc":"2.0","result":[{"kind":13,"name":"ED","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":40}}Content-Length: 1535

{"id":85,"jsonrpc":"2.0","result":[{"kind":13,"name":"ED","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":49},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":86,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 1534

{"id":86,"jsonrpc":"2.0","result":[{"kind":13,"name":"D","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":41}}Content-Length: 1534

{"id":87,"jsonrpc":"2.0","result":[{"kind":13,"name":"D","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":50},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":88,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 1354

{"id":88,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 1963

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":42}}Content-Length: 1354

{"id":89,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":51},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":90,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 1354

{"id":90,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 1354

{"id":91,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":11,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":12,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":100},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":52},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 1353

{"id":92,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":11,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":12,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":9,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":99},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":53},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 1963

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":35},"start":{"character":26,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":69},"start":{"character":10,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":69},"start":{"character":26,"line":69}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":91},"start":{"character":14,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":91},"start":{"character":30,"line":91}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":31},"start":{"character":9,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":65},"start":{"character":9,"line":65}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":43}}Content-Length: 1349

{"id":93,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":5,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":94,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":54},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 1963

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":28},"start":{"character":10,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":34},"start":{"character":10,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":34},"start":{"character":26,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":68},"start":{"character":10,"line":68}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":68},"start":{"character":26,"line":68}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":90},"start":{"character":14,"line":90}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":90},"start":{"character":30,"line":90}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":30},"start":{"character":9,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":64},"start":{"character":9,"line":64}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":44}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":94,"jsonrpc":"2.0"}Content-Length: 1349

{"id":95,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":14,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":96,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":55},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 1963

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":45}}Content-Length: 2328

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'yte'; did you mean 'byte'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:127:17:\nnote: 'byte' declared here","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":46}}Content-Length: 113

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":96,"jsonrpc":"2.0"}Content-Length: 1347

{"id":97,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 2130

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'te'","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":47}}Content-Length: 1347

{"id":98,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":56},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":99,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 1347

{"id":99,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 2129

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'e'","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":48}}Content-Length: 1348

{"id":100,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":8,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":57},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":101,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 1348

{"id":101,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":7,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1348

{"id":102,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":7,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":58},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 1348

{"id":103,"jsonrpc":"2.0","result":[{"kind":13,"name":"tenths","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":59},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":49}}Content-Length: 1347

{"id":104,"jsonrpc":"2.0","result":[{"kind":13,"name":"enths","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 1347

{"id":105,"jsonrpc":"2.0","result":[{"kind":13,"name":"enths","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":60},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 2164

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":50}}Content-Length: 4220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'enths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'enths' declared here","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"message":"'enths' declared here\n\nLibraryTests.ino.cpp:39:11: error: use of undeclared identifier 'tenths'; did you mean 'enths'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'enths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'enths' declared here","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"message":"'enths' declared here\n\nLibraryTests.ino.cpp:73:11: error: use of undeclared identifier 'tenths'; did you mean 'enths'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'enths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'enths' declared here","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"message":"'enths' declared here\n\nLibraryTests.ino.cpp:75:15: error: use of undeclared identifier 'tenths'; did you mean 'enths'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'enths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'enths' declared here","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"message":"'enths' declared here\n\nLibraryTests.ino.cpp:77:13: error: use of undeclared identifier 'tenths'; did you mean 'enths'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":51}}Content-Length: 1346

{"id":106,"jsonrpc":"2.0","result":[{"kind":13,"name":"nths","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 4204

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'nths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'nths' declared here","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"message":"'nths' declared here\n\nLibraryTests.ino.cpp:39:11: error: use of undeclared identifier 'tenths'; did you mean 'nths'?","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'nths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'nths' declared here","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"message":"'nths' declared here\n\nLibraryTests.ino.cpp:73:11: error: use of undeclared identifier 'tenths'; did you mean 'nths'?","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'nths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'nths' declared here","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"message":"'nths' declared here\n\nLibraryTests.ino.cpp:75:15: error: use of undeclared identifier 'tenths'; did you mean 'nths'?","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'tenths'; did you mean 'nths'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'nths' declared here","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"message":"'nths' declared here\n\nLibraryTests.ino.cpp:77:13: error: use of undeclared identifier 'tenths'; did you mean 'nths'?","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":52}}Content-Length: 1346

{"id":107,"jsonrpc":"2.0","result":[{"kind":13,"name":"nths","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":61},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":108,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 1345

{"id":108,"jsonrpc":"2.0","result":[{"kind":13,"name":"ths","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 2916

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":53}}Content-Length: 1345

{"id":109,"jsonrpc":"2.0","result":[{"kind":13,"name":"ths","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":62},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":110,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 1344

{"id":110,"jsonrpc":"2.0","result":[{"kind":13,"name":"hs","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 2916

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":54}}Content-Length: 1344

{"id":111,"jsonrpc":"2.0","result":[{"kind":13,"name":"hs","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":63},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":112,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 1343

{"id":112,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 2916

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":55}}Content-Length: 1343

{"id":113,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":64},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":114,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 1163

{"id":114,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1163

{"id":115,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":65},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 1163

{"id":116,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":66},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 2890

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":2,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":56}}Content-Length: 1163

{"id":117,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":118,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":67},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 2890

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":57}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":118,"jsonrpc":"2.0"}Content-Length: 1163

{"id":119,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":120,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":68},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 2890

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":2,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":58}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":120,"jsonrpc":"2.0"}Content-Length: 1163

{"id":121,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":122,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":69},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 2890

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":59}}Content-Length: 2715

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":60}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":122,"jsonrpc":"2.0"}Content-Length: 1163

{"id":123,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 1163

{"id":124,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":12,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":9,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":98},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":70},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 1163

{"id":125,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":5,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":71},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 2715

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":33},"start":{"character":10,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":33},"start":{"character":26,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":67},"start":{"character":10,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":67},"start":{"character":26,"line":67}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":72},"start":{"character":10,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":74},"start":{"character":14,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":89},"start":{"character":14,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":89},"start":{"character":30,"line":89}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":29},"start":{"character":9,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":63},"start":{"character":9,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":61}}Content-Length: 1163

{"id":126,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":15,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":11,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":127,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":72},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 2715

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":62}}Content-Length: 2929

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'har'; did you mean 'char'? (fix available)","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":63}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":127,"jsonrpc":"2.0"}Content-Length: 1163

{"id":128,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 2882

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'ar'","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":64}}Content-Length: 1163

{"id":129,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":10,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":10,"line":4},"start":{"character":3,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":73},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":130,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 1161

{"id":130,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 2881

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'r'","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":65}}Content-Length: 1161

{"id":131,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":9,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":9,"line":4},"start":{"character":2,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":74},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":132,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 1161

{"id":132,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":8,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1161

{"id":133,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":8,"line":4},"start":{"character":1,"line":4}},"selectionRange":{"end":{"character":8,"line":4},"start":{"character":1,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":75},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 1161

{"id":134,"jsonrpc":"2.0","result":[{"kind":13,"name":"seconds","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":76},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 2916

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":8,"line":4},"start":{"character":1,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":66}}Content-Length: 1160

{"id":135,"jsonrpc":"2.0","result":[{"kind":13,"name":"econds","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":136,"jsonrpc":"2.0"}Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":77},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 2916

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":27,"line":88},"start":{"character":14,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":46,"line":88},"start":{"character":30,"line":88}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":25,"line":28},"start":{"character":9,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":17,"line":62},"start":{"character":9,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":67}}Content-Length: 5680

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'econds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'econds' declared here","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"message":"'econds' declared here\n\nLibraryTests.ino.cpp:39:11: error: use of undeclared identifier 'seconds'; did you mean 'econds'?","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'econds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'econds' declared here","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"message":"'econds' declared here\n\nLibraryTests.ino.cpp:54:11: error: use of undeclared identifier 'seconds'; did you mean 'econds'?","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'econds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'econds' declared here","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"message":"'econds' declared here\n\nLibraryTests.ino.cpp:55:15: error: use of undeclared identifier 'seconds'; did you mean 'econds'?","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'econds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'econds' declared here","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"message":"'econds' declared here\n\nLibraryTests.ino.cpp:57:13: error: use of undeclared identifier 'seconds'; did you mean 'econds'?","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'econds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'econds' declared here","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"message":"'econds' declared here\n\nLibraryTests.ino.cpp:77:13: error: use of undeclared identifier 'seconds'; did you mean 'econds'?","range":{"end":{"character":6,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":68}}Content-Length: 114

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":136,"jsonrpc":"2.0"}Content-Length: 1159

{"id":137,"jsonrpc":"2.0","result":[{"kind":13,"name":"conds","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 5660

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'conds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'conds' declared here","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"message":"'conds' declared here\n\nLibraryTests.ino.cpp:39:11: error: use of undeclared identifier 'seconds'; did you mean 'conds'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'conds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'conds' declared here","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"message":"'conds' declared here\n\nLibraryTests.ino.cpp:54:11: error: use of undeclared identifier 'seconds'; did you mean 'conds'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'conds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'conds' declared here","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"message":"'conds' declared here\n\nLibraryTests.ino.cpp:55:15: error: use of undeclared identifier 'seconds'; did you mean 'conds'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'conds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'conds' declared here","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"message":"'conds' declared here\n\nLibraryTests.ino.cpp:57:13: error: use of undeclared identifier 'seconds'; did you mean 'conds'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'seconds'; did you mean 'conds'? (fix available)\n\nLibraryTests.ino.cpp:5:1: note: 'conds' declared here","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"message":"'conds' declared here\n\nLibraryTests.ino.cpp:77:13: error: use of undeclared identifier 'seconds'; did you mean 'conds'?","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"severity":3},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":69}}Content-Length: 1159

{"id":138,"jsonrpc":"2.0","result":[{"kind":13,"name":"conds","range":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":5,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":78},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":139,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 1158

{"id":139,"jsonrpc":"2.0","result":[{"kind":13,"name":"onds","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 4025

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":70}}Content-Length: 1158

{"id":140,"jsonrpc":"2.0","result":[{"kind":13,"name":"onds","range":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":4,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":79},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":141,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 1157

{"id":141,"jsonrpc":"2.0","result":[{"kind":13,"name":"nds","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 4025

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":71}}Content-Length: 1157

{"id":142,"jsonrpc":"2.0","result":[{"kind":13,"name":"nds","range":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":3,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":80},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":143,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":143,"jsonrpc":"2.0","result":[{"kind":13,"name":"ds","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 4025

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":72}}Content-Length: 1156

{"id":144,"jsonrpc":"2.0","result":[{"kind":13,"name":"ds","range":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":2,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":81},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":145,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":145,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 4025

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":73}}Content-Length: 1155

{"id":146,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":65}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":148,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":82},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":149,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":150,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":151,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 1155

{"id":153,"jsonrpc":"2.0","result":[{"kind":13,"name":"s","range":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":1,"line":4},"start":{"character":0,"line":4}}},{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":65},"end":{"line":14,"character":65}},"context":{"diagnostics":[]}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":28}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":155,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":87},"jsonrpc":"2.0"}Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":65},"end":{"line":14,"character":65}},"context":{"diagnostics":[]}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":157,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 503

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":1}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":6}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 975

{"id":159,"jsonrpc":"2.0","result":[{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":12,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":97},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 4013

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":29},"start":{"character":56,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":32},"start":{"character":10,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":32},"start":{"character":26,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":40},"start":{"character":34,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":49},"start":{"character":34,"line":49}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":53},"start":{"character":10,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":54},"start":{"character":14,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":56},"start":{"character":12,"line":56}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":58},"start":{"character":34,"line":58}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":66},"start":{"character":10,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":66},"start":{"character":26,"line":66}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":71},"start":{"character":10,"line":71}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":73},"start":{"character":14,"line":73}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":76},"start":{"character":12,"line":76}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":23,"line":78},"start":{"character":16,"line":78}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":74}}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":4,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 971

{"id":160,"jsonrpc":"2.0","result":[{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 971

{"id":161,"jsonrpc":"2.0","result":[{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 4013

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":28},"start":{"character":56,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":31},"start":{"character":10,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":31},"start":{"character":26,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":39},"start":{"character":34,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":48},"start":{"character":34,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":52},"start":{"character":10,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":53},"start":{"character":14,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":55},"start":{"character":12,"line":55}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":57},"start":{"character":34,"line":57}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":65},"start":{"character":10,"line":65}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING_STOPPED'","range":{"end":{"character":42,"line":65},"start":{"character":26,"line":65}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":70},"start":{"character":10,"line":70}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":20,"line":72},"start":{"character":14,"line":72}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":18,"line":74},"start":{"character":12,"line":74}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":75},"start":{"character":12,"line":75}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":23,"line":77},"start":{"character":16,"line":77}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":75}}Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":163,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 971

{"id":164,"jsonrpc":"2.0","result":[{"kind":13,"name":"minutes","range":{"end":{"character":16,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":12,"line":4},"start":{"character":5,"line":4}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":17}},"context":{"diagnostics":[]}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":165,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":17}},"rangeLength":17,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":166,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":10,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 4001

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":53,"line":28},"start":{"character":46,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":28},"start":{"character":56,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":31},"start":{"character":10,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":31},"start":{"character":26,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":36},"start":{"character":10,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":17,"line":38},"start":{"character":10,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":39},"start":{"character":20,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":39},"start":{"character":34,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":21,"line":44},"start":{"character":14,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":19,"line":46},"start":{"character":12,"line":46}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":48},"start":{"character":20,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":48},"start":{"character":34,"line":48}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":52},"start":{"character":10,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":53},"start":{"character":14,"line":53}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":55},"start":{"character":12,"line":55}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":57},"start":{"character":20,"line":57}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":76}}
>>>
Content-Length: 324

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":4,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":167,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":95},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":168,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":95},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":169,"jsonrpc":"2.0","result":[]}Content-Length: 4001

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":53,"line":27},"start":{"character":46,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":63,"line":27},"start":{"character":56,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'countDownMode'","range":{"end":{"character":23,"line":30},"start":{"character":10,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'COUNTING'","range":{"end":{"character":34,"line":30},"start":{"character":26,"line":30}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tenths'","range":{"end":{"character":16,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":36},"start":{"character":10,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":17,"line":37},"start":{"character":10,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":38},"start":{"character":20,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":38},"start":{"character":34,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":17,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":21,"line":43},"start":{"character":14,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":19,"line":45},"start":{"character":12,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":47},"start":{"character":20,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":41,"line":47},"start":{"character":34,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":17,"line":51},"start":{"character":10,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":21,"line":52},"start":{"character":14,"line":52}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'seconds'","range":{"end":{"character":19,"line":54},"start":{"character":12,"line":54}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'minutes'","range":{"end":{"character":27,"line":56},"start":{"character":20,"line":56}},"severity":1,"source":"clang"},{"code":"fatal_too_many_errors","message":"Too many errors emitted, stopping now","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":77}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":171,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":95},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":10}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":172,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":173,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":27}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":174,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":27}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":175,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":22,"character":0}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":176,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":22,"character":1}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":177,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":22,"character":1},"end":{"line":23,"character":2}},"context":{"diagnostics":[]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"id":178,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":2,"line":23},"start":{"character":1,"line":22}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 3907

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":22,"character":1},"end":{"line":94,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":24,"character":10},"end":{"line":24,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'countDownMode'"},{"range":{"start":{"line":27,"character":46},"end":{"line":27,"character":53}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":27,"character":56},"end":{"line":27,"character":63}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'countDownMode'"},{"range":{"start":{"line":30,"character":26},"end":{"line":30,"character":34}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'COUNTING'"},{"range":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tenths'"},{"range":{"start":{"line":36,"character":10},"end":{"line":36,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":38,"character":20},"end":{"line":38,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":38,"character":34},"end":{"line":38,"character":41}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":45,"character":12},"end":{"line":45,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"},{"range":{"start":{"line":47,"character":34},"end":{"line":47,"character":41}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":52,"character":14},"end":{"line":52,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'seconds'"},{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'minutes'"}]}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":179,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":22,"character":1},"end":{"line":94,"character":3}},"rangeLength":1849,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":180,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":78}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":181,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":182,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":79}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":183,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":80}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":20,"character":11}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":184,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":185,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":81}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":2}},"text":"M"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":186,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'M'","range":{"end":{"character":3,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":82}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},"text":"F"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":187,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MF'","range":{"end":{"character":4,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":83}}Content-Length: 783

{"id":188,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":189,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":22}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":84}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":190,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":5}},"context":{"diagnostics":[]}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":192,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":5}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":6},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 9529

{"id":193,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"beep","insertText":"beep()","insertTextFormat":2,"kind":2,"label":" beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1, unsigned int loopDelayPeriod = 0)","score":9.6800003051757812,"sortText":"3ee51eb8beep","textEdit":{"newText":"beep()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"blinkDisplay","insertText":"blinkDisplay(${1:byte digits})","insertTextFormat":2,"kind":2,"label":" blinkDisplay(byte digits, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkDisplay","textEdit":{"newText":"blinkDisplay(${1:byte digits})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"blinkLeds","insertText":"blinkLeds(${1:byte leds})","insertTextFormat":2,"kind":2,"label":" blinkLeds(byte leds, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkLeds","textEdit":{"newText":"blinkLeds(${1:byte leds})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"disablePulseInCounter","insertText":"disablePulseInCounter()","insertTextFormat":2,"kind":2,"label":" disablePulseInCounter()","score":9.6800003051757812,"sortText":"3ee51eb8disablePulseInCounter","textEdit":{"newText":"disablePulseInCounter()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"byte","filterText":"getButton","insertText":"getButton()","insertTextFormat":2,"kind":2,"label":" getButton()","score":9.6800003051757812,"sortText":"3ee51eb8getButton","textEdit":{"newText":"getButton()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"int","filterText":"getLM35Data","insertText":"getLM35Data()","insertTextFormat":2,"kind":2,"label":" getLM35Data()","score":9.6800003051757812,"sortText":"3ee51eb8getLM35Data","textEdit":{"newText":"getLM35Data()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"unsigned int","filterText":"getPulseInPeriod","insertText":"getPulseInPeriod()","insertTextFormat":2,"kind":2,"label":" getPulseInPeriod()","score":9.6800003051757812,"sortText":"3ee51eb8getPulseInPeriod","textEdit":{"newText":"getPulseInPeriod()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"unsigned long","filterText":"getPulseInTotalCount","insertText":"getPulseInTotalCount()","insertTextFormat":2,"kind":2,"label":" getPulseInTotalCount()","score":9.6800003051757812,"sortText":"3ee51eb8getPulseInTotalCount","textEdit":{"newText":"getPulseInTotalCount()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"unsigned int","filterText":"getSonarDataCm","insertText":"getSonarDataCm(${1:byte triggerPin}, ${2:byte echoPin})","insertTextFormat":2,"kind":2,"label":" getSonarDataCm(byte triggerPin, byte echoPin)","score":9.6800003051757812,"sortText":"3ee51eb8getSonarDataCm","textEdit":{"newText":"getSonarDataCm(${1:byte triggerPin}, ${2:byte echoPin})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"unsigned long","filterText":"getTimer","insertText":"getTimer()","insertTextFormat":2,"kind":2,"label":" getTimer()","score":9.6800003051757812,"sortText":"3ee51eb8getTimer","textEdit":{"newText":"getTimer()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"initLM35","insertText":"initLM35()","insertTextFormat":2,"kind":2,"label":" initLM35(byte level = SMOOTHING_MODERATE)","score":9.6800003051757812,"sortText":"3ee51eb8initLM35","textEdit":{"newText":"initLM35()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"initPulseInCounter","insertText":"initPulseInCounter()","insertTextFormat":2,"kind":2,"label":" initPulseInCounter(byte pin = BUTTON_1_PIN, unsigned int timeOut = 3000, byte trigger = LOW)","score":9.6800003051757812,"sortText":"3ee51eb8initPulseInCounter","textEdit":{"newText":"initPulseInCounter()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"initSonar","insertText":"initSonar()","insertTextFormat":2,"kind":2,"label":" initSonar(byte level = SMOOTHING_MODERATE)","score":9.6800003051757812,"sortText":"3ee51eb8initSonar","textEdit":{"newText":"initSonar()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"initialize","insertText":"initialize()","insertTextFormat":2,"kind":2,"label":" initialize()","score":9.6800003051757812,"sortText":"3ee51eb8initialize","textEdit":{"newText":"initialize()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"isrCallBack","insertText":"isrCallBack()","insertTextFormat":2,"kind":2,"label":" isrCallBack()","score":9.6800003051757812,"sortText":"3ee51eb8isrCallBack","textEdit":{"newText":"isrCallBack()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"manualButtonHandler","insertText":"manualButtonHandler()","insertTextFormat":2,"kind":2,"label":" manualButtonHandler()","score":9.6800003051757812,"sortText":"3ee51eb8manualButtonHandler","textEdit":{"newText":"manualButtonHandler()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"manualDisplayRefresh","insertText":"manualDisplayRefresh()","insertTextFormat":2,"kind":2,"label":" manualDisplayRefresh()","score":9.6800003051757812,"sortText":"3ee51eb8manualDisplayRefresh","textEdit":{"newText":"manualDisplayRefresh()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"queueButton","insertText":"queueButton(${1:byte button})","insertTextFormat":2,"kind":2,"label":" queueButton(byte button)","score":9.6800003051757812,"sortText":"3ee51eb8queueButton","textEdit":{"newText":"queueButton(${1:byte button})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"resetPulseInTotalCount","insertText":"resetPulseInTotalCount()","insertTextFormat":2,"kind":2,"label":" resetPulseInTotalCount()","score":9.6800003051757812,"sortText":"3ee51eb8resetPulseInTotalCount","textEdit":{"newText":"resetPulseInTotalCount()","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"setBeepOffPeriod","insertText":"setBeepOffPeriod(${1:unsigned int offPeriod})","insertTextFormat":2,"kind":2,"label":" setBeepOffPeriod(unsigned int offPeriod)","score":9.6800003051757812,"sortText":"3ee51eb8setBeepOffPeriod","textEdit":{"newText":"setBeepOffPeriod(${1:unsigned int offPeriod})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"setDisplayBrightness","insertText":"setDisplayBrightness(${1:byte level})","insertTextFormat":2,"kind":2,"label":" setDisplayBrightness(byte level)","score":9.6800003051757812,"sortText":"3ee51eb8setDisplayBrightness","textEdit":{"newText":"setDisplayBrightness(${1:byte level})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"setPulseInTimeOut","insertText":"setPulseInTimeOut(${1:unsigned int timeOut})","insertTextFormat":2,"kind":2,"label":" setPulseInTimeOut(unsigned int timeOut)","score":9.6800003051757812,"sortText":"3ee51eb8setPulseInTimeOut","textEdit":{"newText":"setPulseInTimeOut(${1:unsigned int timeOut})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"setTimer","insertText":"setTimer(${1:unsigned long thousandths})","insertTextFormat":2,"kind":2,"label":" setTimer(unsigned long thousandths)","score":9.6800003051757812,"sortText":"3ee51eb8setTimer","textEdit":{"newText":"setTimer(${1:unsigned long thousandths})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void (*)()","filterText":"userInterrupt","insertText":"userInterrupt","insertTextFormat":2,"kind":5,"label":" userInterrupt","score":9.6800003051757812,"sortText":"3ee51eb8userInterrupt","textEdit":{"newText":"userInterrupt","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"wait","insertText":"wait(${1:unsigned long thousandths})","insertTextFormat":2,"kind":2,"label":" wait(unsigned long thousandths)","score":9.6800003051757812,"sortText":"3ee51eb8wait","textEdit":{"newText":"wait(${1:unsigned long thousandths})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"[3 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}},{"detail":"void","filterText":"writeLeds","insertText":"writeLeds(${1:byte leds}, ${2:byte lit})","insertTextFormat":2,"kind":2,"label":" writeLeds(byte leds, byte lit)","score":9.6800003051757812,"sortText":"3ee51eb8writeLeds","textEdit":{"newText":"writeLeds(${1:byte leds}, ${2:byte lit})","range":{"end":{"character":6,"line":21},"start":{"character":6,"line":21}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":194,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":22}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":85}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":195,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":6}},"context":{"diagnostics":[]}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":196,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":6}},"text":"blinkDisplay(byte digits)"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":197,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 410

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":23,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":86}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":23}},"severity":1,"code":"unexpected_typedef","source":"clang","message":"Unexpected type name 'byte': expected expression"}]}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":199,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":30}},"rangeLength":11,"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":200,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":22}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":87}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":201,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":202,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":203,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":22}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":88}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":204,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"context":{"diagnostics":[]}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}},"context":{"diagnostics":[]}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":206,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":207,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":89}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":23},"end":{"line":21,"character":23}},"context":{"diagnostics":[]}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":209,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":21}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":210,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":21},"start":{"character":6,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"context":{"diagnostics":[]}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":211,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":21}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":212,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":90}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":213,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":214,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":91}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":140},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":215,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":92}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":22}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 270

{"id":216,"jsonrpc":"2.0","result":{"activeParameter":1,"activeSignature":0,"signatures":[{"documentation":"Blinks the digits on the LED digit display.","label":"blinkDisplay(byte digits, byte enabled = ON) -> void","parameters":[{"label":[13,24]},{"label":[26,43]}]}]}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":217,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":24,"line":21},"start":{"character":23,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":93}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":21,"character":23},"end":{"line":21,"character":23}},"text":"3"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":218,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 581

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_call_too_many_args_at_most","message":"Too many arguments to function call, expected at most 2, have 3\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here","range":{"end":{"character":24,"line":21},"start":{"character":23,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":94}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":24}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":219,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":220,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 676

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":24},"end":{"line":21,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":23},"end":{"line":21,"character":24}},"severity":1,"code":"typecheck_call_too_many_args_at_most","source":"clang","message":"Too many arguments to function call, expected at most 2, have 3\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here"}]}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":221,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":21,"character":23},"end":{"line":21,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":222,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":24,"line":21},"start":{"character":23,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":95}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":23}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":148},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":223,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":96}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":224,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":97}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":21}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":225,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":98}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":226,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 602

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_call_too_few_args_at_least_one","message":"Too few arguments to function call, at least argument 'digits' must be specified\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here","range":{"end":{"character":20,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":99}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":20}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":227,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"bound_member_function","message":"Reference to non-static member function must be called","range":{"end":{"character":18,"line":21},"start":{"character":2,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":100}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":228,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":229,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 513

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":18}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"}]}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":230,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":231,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 603

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_call_too_few_args_at_least_one","message":"Too few arguments to function call, at least argument 'digits' must be specified\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here","range":{"end":{"character":20,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":101}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":19}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 270

{"id":232,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"documentation":"Blinks the digits on the LED digit display.","label":"blinkDisplay(byte digits, byte enabled = ON) -> void","parameters":[{"label":[13,24]},{"label":[26,43]}]}]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":233,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 697

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"severity":1,"code":"typecheck_call_too_few_args_at_least_one","source":"clang","message":"Too few arguments to function call, at least argument 'digits' must be specified\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here"}]}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":19},"context":{"triggerKind":1}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 51920

{"id":235,"jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"filterText":"uint8_t","insertText":"uint8_t","insertTextFormat":2,"kind":8,"label":" uint8_t","score":12.079423904418945,"sortText":"3ebebaaeuint8_t","textEdit":{"newText":"uint8_t","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"void","insertText":"void","insertTextFormat":2,"kind":14,"label":" void","score":12,"sortText":"3ec00000void","textEdit":{"newText":"void","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"loop","insertText":"loop()","insertTextFormat":2,"kind":3,"label":" loop()","score":11.079595565795898,"sortText":"3eceb9faloop","textEdit":{"newText":"loop()","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"MultiFuncShield.h\"`  \nreturns median of 5 data samples."},"filterText":"MedianOf5","insertText":"MedianOf5(${1:int s0}, ${2:int s1}, ${3:int s2}, ${4:int s3}, ${5:int s4})","insertTextFormat":2,"kind":3,"label":" MedianOf5(int s0, int s1, int s2, int s3, int s4)","score":9.2689352035522461,"sortText":"3eebb271MedianOf5","textEdit":{"newText":"MedianOf5(${1:int s0}, ${2:int s1}, ${3:int s2}, ${4:int s3}, ${5:int s4})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"MultiFuncShield.h\"`  \n\\---------------------------------------------------------------------------------------------------- Find the median value, given nine data samples."},"filterText":"MedianOf9","insertText":"MedianOf9(${1:int s0}, ${2:int s1}, ${3:int s2}, ${4:int s3}, ${5:int s4}, ${6:int s5}, ${7:int s6}, ${8:int s7}, ${9:int s8})","insertTextFormat":2,"kind":3,"label":" MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)","score":9.2689352035522461,"sortText":"3eebb271MedianOf9","textEdit":{"newText":"MedianOf9(${1:int s0}, ${2:int s1}, ${3:int s2}, ${4:int s3}, ${5:int s4}, ${6:int s5}, ${7:int s6}, ${8:int s7}, ${9:int s8})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"micros","insertText":"micros()","insertTextFormat":2,"kind":3,"label":" micros()","score":8.6670150756835938,"sortText":"3ef553e8micros","textEdit":{"newText":"micros()","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"kind":3,"label":" strlen(const char *)","score":8.0929594039916992,"sortText":"3efe833dstrlen","textEdit":{"newText":"strlen(${1:const char *})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"_Nonnull","insertText":"_Nonnull","insertTextFormat":2,"kind":14,"label":" _Nonnull","score":8,"sortText":"3f000000_Nonnull","textEdit":{"newText":"_Nonnull","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"_Null_unspecified","insertText":"_Null_unspecified","insertTextFormat":2,"kind":14,"label":" _Null_unspecified","score":8,"sortText":"3f000000_Null_unspecified","textEdit":{"newText":"_Null_unspecified","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"_Nullable","insertText":"_Nullable","insertTextFormat":2,"kind":14,"label":" _Nullable","score":8,"sortText":"3f000000_Nullable","textEdit":{"newText":"_Nullable","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"__FUNCTION__","insertText":"__FUNCTION__","insertTextFormat":2,"kind":14,"label":" __FUNCTION__","score":8,"sortText":"3f000000__FUNCTION__","textEdit":{"newText":"__FUNCTION__","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"__PRETTY_FUNCTION__","insertText":"__PRETTY_FUNCTION__","insertTextFormat":2,"kind":14,"label":" __PRETTY_FUNCTION__","score":8,"sortText":"3f000000__PRETTY_FUNCTION__","textEdit":{"newText":"__PRETTY_FUNCTION__","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"__func__","insertText":"__func__","insertTextFormat":2,"kind":14,"label":" __func__","score":8,"sortText":"3f000000__func__","textEdit":{"newText":"__func__","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","filterText":"alignof","insertText":"alignof(${0:type})","insertTextFormat":2,"kind":15,"label":" alignof(type)","score":8,"sortText":"3f000000alignof","textEdit":{"newText":"alignof(${0:type})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"auto","insertText":"auto","insertTextFormat":2,"kind":14,"label":" auto","score":8,"sortText":"3f000000auto","textEdit":{"newText":"auto","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"bool","insertText":"bool","insertTextFormat":2,"kind":14,"label":" bool","score":8,"sortText":"3f000000bool","textEdit":{"newText":"bool","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"char","insertText":"char","insertTextFormat":2,"kind":14,"label":" char","score":8,"sortText":"3f000000char","textEdit":{"newText":"char","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"char16_t","insertText":"char16_t","insertTextFormat":2,"kind":14,"label":" char16_t","score":8,"sortText":"3f000000char16_t","textEdit":{"newText":"char16_t","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"char32_t","insertText":"char32_t","insertTextFormat":2,"kind":14,"label":" char32_t","score":8,"sortText":"3f000000char32_t","textEdit":{"newText":"char32_t","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"class","insertText":"class","insertTextFormat":2,"kind":14,"label":" class","score":8,"sortText":"3f000000class","textEdit":{"newText":"class","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"const","insertText":"const","insertTextFormat":2,"kind":14,"label":" const","score":8,"sortText":"3f000000const","textEdit":{"newText":"const","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"const_cast","insertText":"const_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" const_cast<type>(expression)","score":8,"sortText":"3f000000const_cast","textEdit":{"newText":"const_cast<${1:type}>(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":8,"sortText":"3f000000decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":8,"sortText":"3f000000delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"double","insertText":"double","insertTextFormat":2,"kind":14,"label":" double","score":8,"sortText":"3f000000double","textEdit":{"newText":"double","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":8,"sortText":"3f000000dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"enum","insertText":"enum","insertTextFormat":2,"kind":14,"label":" enum","score":8,"sortText":"3f000000enum","textEdit":{"newText":"enum","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"bool","filterText":"false","insertText":"false","insertTextFormat":2,"kind":15,"label":" false","score":8,"sortText":"3f000000false","textEdit":{"newText":"false","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"float","insertText":"float","insertTextFormat":2,"kind":14,"label":" float","score":8,"sortText":"3f000000float","textEdit":{"newText":"float","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"int","insertText":"int","insertTextFormat":2,"kind":14,"label":" int","score":8,"sortText":"3f000000int","textEdit":{"newText":"int","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"long","insertText":"long","insertTextFormat":2,"kind":14,"label":" long","score":8,"sortText":"3f000000long","textEdit":{"newText":"long","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type[size](expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}[${2:size}](${0:expressions})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"kind":15,"label":" new type(expressions)","score":8,"sortText":"3f000000new","textEdit":{"newText":"new ${1:type}(${0:expressions})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"bool","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"kind":15,"label":" noexcept(expression)","score":8,"sortText":"3f000000noexcept","textEdit":{"newText":"noexcept(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"std::nullptr_t","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"kind":15,"label":" nullptr","score":8,"sortText":"3f000000nullptr","textEdit":{"newText":"nullptr","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"operator","insertText":"operator","insertTextFormat":2,"kind":14,"label":" operator","score":8,"sortText":"3f000000operator","textEdit":{"newText":"operator","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"reinterpret_cast","insertText":"reinterpret_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" reinterpret_cast<type>(expression)","score":8,"sortText":"3f000000reinterpret_cast","textEdit":{"newText":"reinterpret_cast<${1:type}>(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"short","insertText":"short","insertTextFormat":2,"kind":14,"label":" short","score":8,"sortText":"3f000000short","textEdit":{"newText":"short","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"signed","insertText":"signed","insertTextFormat":2,"kind":14,"label":" signed","score":8,"sortText":"3f000000signed","textEdit":{"newText":"signed","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" sizeof(expression-or-type)","score":8,"sortText":"3f000000sizeof","textEdit":{"newText":"sizeof(${0:expression-or-type})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"kind":15,"label":" sizeof...(parameter-pack)","score":8,"sortText":"3f000000sizeof...","textEdit":{"newText":"sizeof...(${0:parameter-pack})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"static_cast","insertText":"static_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" static_cast<type>(expression)","score":8,"sortText":"3f000000static_cast","textEdit":{"newText":"static_cast<${1:type}>(${0:expression})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"struct","insertText":"struct","insertTextFormat":2,"kind":14,"label":" struct","score":8,"sortText":"3f000000struct","textEdit":{"newText":"struct","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"bool","filterText":"true","insertText":"true","insertTextFormat":2,"kind":15,"label":" true","score":8,"sortText":"3f000000true","textEdit":{"newText":"true","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"std::type_info","filterText":"typeid","insertText":"typeid(${0:expression-or-type})","insertTextFormat":2,"kind":15,"label":" typeid(expression-or-type)","score":8,"sortText":"3f000000typeid","textEdit":{"newText":"typeid(${0:expression-or-type})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"typename","insertText":"typename ${0:name}","insertTextFormat":2,"kind":15,"label":" typename name","score":8,"sortText":"3f000000typename","textEdit":{"newText":"typename ${0:name}","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"typeof","insertText":"typeof(${0:type})","insertTextFormat":2,"kind":15,"label":" typeof(type)","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof(${0:type})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"typeof","insertText":"typeof ${0:expression}","insertTextFormat":2,"kind":15,"label":" typeof expression","score":8,"sortText":"3f000000typeof","textEdit":{"newText":"typeof ${0:expression}","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"union","insertText":"union","insertTextFormat":2,"kind":14,"label":" union","score":8,"sortText":"3f000000union","textEdit":{"newText":"union","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"unsigned","insertText":"unsigned","insertTextFormat":2,"kind":14,"label":" unsigned","score":8,"sortText":"3f000000unsigned","textEdit":{"newText":"unsigned","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"volatile","insertText":"volatile","insertTextFormat":2,"kind":14,"label":" volatile","score":8,"sortText":"3f000000volatile","textEdit":{"newText":"volatile","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"kind":14,"label":" wchar_t","score":8,"sortText":"3f000000wchar_t","textEdit":{"newText":"wchar_t","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The abs() function computes the absolute value of the integer \\\\c i.  \n\\\\note The abs() and labs() functions are builtins of gcc."},"filterText":"abs","insertText":"abs(${1:int __i})","insertTextFormat":2,"kind":3,"label":" abs(int __i)","score":7.5186858177185059,"sortText":"3f0f66edabs","textEdit":{"newText":"abs(${1:int __i})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"analogRead","insertText":"analogRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" analogRead(uint8_t pin)","score":7.5186858177185059,"sortText":"3f0f66edanalogRead","textEdit":{"newText":"analogRead(${1:uint8_t pin})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"dummy declarations for libstdc++ compatibility"},"filterText":"atexit","insertText":"atexit(${1:void (*)()})","insertTextFormat":2,"kind":3,"label":" atexit(void (*)())","score":7.5186858177185059,"sortText":"3f0f66edatexit","textEdit":{"newText":"atexit(${1:void (*)()})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The atoi() function converts the initial portion of the string pointed to by \\\\p s to integer representation. In contrast to  \n\\\\code (int)strtol(s, (char \\*\\*)NULL, 10); \\\\endcode  \nthis function does not detect overflow (\\\\c errno is not changed and the result value is not predictable), uses smaller memory (flash and stack) and works more quickly."},"filterText":"atoi","insertText":"atoi(${1:const char *__s})","insertTextFormat":2,"kind":3,"label":" atoi(const char *__s)","score":7.5186858177185059,"sortText":"3f0f66edatoi","textEdit":{"newText":"atoi(${1:const char *__s})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The atol() function converts the initial portion of the string pointed to by \\\\p s to long integer representation. In contrast to  \n\\\\code strtol(s, (char \\*\\*)NULL, 10); \\\\endcode  \nthis function does not detect overflow (\\\\c errno is not changed and the result value is not predictable), uses smaller memory (flash and stack) and works more quickly."},"filterText":"atol","insertText":"atol(${1:const char *__s})","insertTextFormat":2,"kind":3,"label":" atol(const char *__s)","score":7.5186858177185059,"sortText":"3f0f66edatol","textEdit":{"newText":"atol(${1:const char *__s})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":7.5186858177185059,"sortText":"3f0f66eddigitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"kind":3,"label":" ffs(int __val)","score":7.5186858177185059,"sortText":"3f0f66edffs","textEdit":{"newText":"ffs(${1:int __val})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"kind":3,"label":" ffsl(long __val)","score":7.5186858177185059,"sortText":"3f0f66edffsl","textEdit":{"newText":"ffsl(${1:long __val})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"kind":3,"label":" ffsll(long long __val)","score":7.5186858177185059,"sortText":"3f0f66edffsll","textEdit":{"newText":"ffsll(${1:long long __val})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"filterText":"isfinite","insertText":"isfinite(${1:double __x})","insertTextFormat":2,"kind":3,"label":" isfinite(double __x)","score":7.5186858177185059,"sortText":"3f0f66edisfinite","textEdit":{"newText":"isfinite(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function isinf() returns 1 if the argument \\\\a \\_\\_x is positive infinity, -1 if \\\\a \\_\\_x is negative infinity, and 0 otherwise.  \n\\\\note The GCC 4.3 can replace this function with inline code that returns the 1 value for both infinities (gcc bug #35509)."},"filterText":"isinf","insertText":"isinf(${1:double __x})","insertTextFormat":2,"kind":3,"label":" isinf(double __x)","score":7.5186858177185059,"sortText":"3f0f66edisinf","textEdit":{"newText":"isinf(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The function isnan() returns 1 if the argument \\\\a \\_\\_x represents a \"not-a-number\" (NaN) object, otherwise 0."},"filterText":"isnan","insertText":"isnan(${1:double __x})","insertTextFormat":2,"kind":3,"label":" isnan(double __x)","score":7.5186858177185059,"sortText":"3f0f66edisnan","textEdit":{"newText":"isnan(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The labs() function computes the absolute value of the long integer  \n\\\\c i.  \n\\\\note The abs() and labs() functions are builtins of gcc."},"filterText":"labs","insertText":"labs(${1:long __i})","insertTextFormat":2,"kind":3,"label":" labs(long __i)","score":7.5186858177185059,"sortText":"3f0f66edlabs","textEdit":{"newText":"labs(${1:long __i})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The lrint() function rounds \\\\a \\_\\_x to the nearest integer, rounding the halfway cases to the even integer direction. (That is both 1.5 and 2.5 values are rounded to 2). This function is similar to rint() function,  \nbut it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"filterText":"lrint","insertText":"lrint(${1:double __x})","insertTextFormat":2,"kind":3,"label":" lrint(double __x)","score":7.5186858177185059,"sortText":"3f0f66edlrint","textEdit":{"newText":"lrint(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"The lround() function rounds \\\\a \\_\\_x to the nearest integer, but rounds halfway cases away from zero (instead of to the nearest even integer).  \nThis function is similar to round() function, but it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"filterText":"lround","insertText":"lround(${1:double __x})","insertTextFormat":2,"kind":3,"label":" lround(double __x)","score":7.5186858177185059,"sortText":"3f0f66edlround","textEdit":{"newText":"lround(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"map","insertText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","insertTextFormat":2,"kind":3,"label":" map(long, long, long, long, long)","score":7.5186858177185059,"sortText":"3f0f66edmap","textEdit":{"newText":"map(${1:long}, ${2:long}, ${3:long}, ${4:long}, ${5:long})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int memcmp(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp() function compares the first len bytes of the memory areas s1 and s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp() function returns an integer less than, equal to, or greater than zero if the first len bytes of s1 is found, respectively, to be less than, to match, or be greater than the first len bytes of s2.  \n\\\\note Be sure to store the result in a 16 bit variable since you may get incorrect results if you use an unsigned char or char due to truncation.  \n\\\\warning This function is not -mint8 compatible, although if you only care about testing for equality, this function should be safe to use."},"filterText":"memcmp","insertText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp(const void *, const void *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edmemcmp","textEdit":{"newText":"memcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_P(const void \\*s1, const void \\*s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_P() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations.  \n\\\\returns The memcmp_P() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_P","insertText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_P(const void *, const void *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edmemcmp_P","textEdit":{"newText":"memcmp_P(${1:const void *}, ${2:const void *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int memcmp_PF(const void \\*s1, uint_farptr_t s2, size_t len)  \n\\\\brief Compare memory areas  \nThe memcmp_PF() function compares the first \\\\p len bytes of the memory areas \\\\p s1 and flash \\\\p s2. The comparision is performed using unsigned char operations. It is an equivalent of memcmp_P() function, except that it is capable working on all FLASH including the exteded area above 64kB.  \n\\\\returns The memcmp_PF() function returns an integer less than, equal to, or greater than zero if the first \\\\p len bytes of \\\\p s1 is found,  \nrespectively, to be less than, to match, or be greater than the first  \n\\\\p len bytes of \\\\p s2."},"filterText":"memcmp_PF","insertText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" memcmp_PF(const void *, uint_farptr_t, size_t)","score":7.5186858177185059,"sortText":"3f0f66edmemcmp_PF","textEdit":{"newText":"memcmp_PF(${1:const void *}, ${2:uint_farptr_t}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"millis","insertText":"millis()","insertTextFormat":2,"kind":3,"label":" millis()","score":7.5186858177185059,"sortText":"3f0f66edmillis","textEdit":{"newText":"millis()","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nMeasures the length (in microseconds) of a pulse on the pin; state is HIGH or LOW, the type of pulse to measure. Works on pulses from 2-3 microseconds to 3 minutes in length, but must be called at least a few dozen microseconds before the start of the pulse.  \nThis function performs better with short pulses in noInterrupt() context"},"filterText":"pulseIn","insertText":"pulseIn(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"kind":3,"label":" pulseIn(uint8_t pin, uint8_t state, unsigned long timeout)","score":7.5186858177185059,"sortText":"3f0f66edpulseIn","textEdit":{"newText":"pulseIn(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"pulseInLong","insertText":"pulseInLong(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"kind":3,"label":" pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout)","score":7.5186858177185059,"sortText":"3f0f66edpulseInLong","textEdit":{"newText":"pulseInLong(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The rand() function computes a sequence of pseudo-random integers in the range of 0 to \\\\c RAND_MAX (as defined by the header file <stdlib.h>).  \nThe srand() function sets its argument \\\\c seed as the seed for a new sequence of pseudo-random numbers to be returned by rand(). These sequences are repeatable by calling srand() with the same seed value.  \nIf no seed value is provided, the functions are automatically seeded with a value of 1.  \nIn compliance with the C standard, these functions operate on  \n\\\\c int arguments. Since the underlying algorithm already uses 32-bit calculations, this causes a loss of precision. See  \n\\\\c random() for an alternate set of functions that retains full 32-bit precision."},"filterText":"rand","insertText":"rand()","insertTextFormat":2,"kind":3,"label":" rand()","score":7.5186858177185059,"sortText":"3f0f66edrand","textEdit":{"newText":"rand()","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"Variant of rand() that stores the context in the user-supplied variable located at \\\\c ctx instead of a static library variable so the function becomes re-entrant."},"filterText":"rand_r","insertText":"rand_r(${1:unsigned long *__ctx})","insertTextFormat":2,"kind":3,"label":" rand_r(unsigned long *__ctx)","score":7.5186858177185059,"sortText":"3f0f66edrand_r","textEdit":{"newText":"rand_r(${1:unsigned long *__ctx})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"WMath prototypes"},"filterText":"random","insertText":"random($0)","insertTextFormat":2,"kind":3,"label":" random(…)","score":7.5186858177185059,"sortText":"3f0f66edrandom","textEdit":{"newText":"random($0)","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"random","insertText":"random(${1:long}, ${2:long})","insertTextFormat":2,"kind":3,"label":" random(long, long)","score":7.5186858177185059,"sortText":"3f0f66edrandom","textEdit":{"newText":"random(${1:long}, ${2:long})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"long","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib Variant of random() that stores the context in the user-supplied variable located at \\\\c ctx instead of a static library variable so the function becomes re-entrant."},"filterText":"random_r","insertText":"random_r(${1:unsigned long *__ctx})","insertTextFormat":2,"kind":3,"label":" random_r(unsigned long *__ctx)","score":7.5186858177185059,"sortText":"3f0f66edrandom_r","textEdit":{"newText":"random_r(${1:unsigned long *__ctx})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"kind":3,"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","score":7.5186858177185059,"sortText":"3f0f66edshiftIn","textEdit":{"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x < 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 < 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"filterText":"signbit","insertText":"signbit(${1:double __x})","insertTextFormat":2,"kind":3,"label":" signbit(double __x)","score":7.5186858177185059,"sortText":"3f0f66edsignbit","textEdit":{"newText":"signbit(${1:double __x})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp(const char *, const char *)","score":7.5186858177185059,"sortText":"3f0f66edstrcasecmp","textEdit":{"newText":"strcasecmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcasecmp_P","insertText":"strcasecmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcasecmp_P(const char *, const char *)","score":7.5186858177185059,"sortText":"3f0f66edstrcasecmp_P","textEdit":{"newText":"strcasecmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","score":7.5186858177185059,"sortText":"3f0f66edstrcasecmp_PF","textEdit":{"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp(const char *, const char *)","score":7.5186858177185059,"sortText":"3f0f66edstrcmp","textEdit":{"newText":"strcmp(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"kind":3,"label":" strcmp_P(const char *, const char *)","score":7.5186858177185059,"sortText":"3f0f66edstrcmp_P","textEdit":{"newText":"strcmp_P(${1:const char *}, ${2:const char *})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"kind":3,"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","score":7.5186858177185059,"sortText":"3f0f66edstrcmp_PF","textEdit":{"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"kind":3,"label":" strcoll(const char *s1, const char *s2)","score":7.5186858177185059,"sortText":"3f0f66edstrcoll","textEdit":{"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn(const char *__s, const char *__reject)","score":7.5186858177185059,"sortText":"3f0f66edstrcspn","textEdit":{"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"kind":3,"label":" strcspn_P(const char *__s, const char *__reject)","score":7.5186858177185059,"sortText":"3f0f66edstrcspn_P","textEdit":{"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat(char *, const char *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edstrlcat","textEdit":{"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz <=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval >= siz, truncation occurred."},"filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcat_P(char *, const char *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edstrlcat_P","textEdit":{"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n <= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval >= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","score":7.5186858177185059,"sortText":"3f0f66edstrlcat_PF","textEdit":{"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval >= siz,  \ntruncation occurred."},"filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy(char *, const char *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edstrlcpy","textEdit":{"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval >= siz, truncation occurred."},"filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strlcpy_P(char *, const char *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edstrlcpy_P","textEdit":{"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval >= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"kind":3,"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","score":7.5186858177185059,"sortText":"3f0f66edstrlcpy_PF","textEdit":{"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"kind":3,"label":" strlen_P(const char *s)","score":7.5186858177185059,"sortText":"3f0f66edstrlen_P","textEdit":{"newText":"strlen_P(${1:const char *s})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"kind":3,"label":" strlen_PF(uint_farptr_t src)","score":7.5186858177185059,"sortText":"3f0f66edstrlen_PF","textEdit":{"newText":"strlen_PF(${1:uint_farptr_t src})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}},{"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"kind":3,"label":" strncasecmp(const char *, const char *, size_t)","score":7.5186858177185059,"sortText":"3f0f66edstrncasecmp","textEdit":{"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","range":{"end":{"character":19,"line":21},"start":{"character":19,"line":21}}}}]}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":18}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":236,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":21},"start":{"character":6,"line":21}}}]}
>>>
Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":18},"context":{"triggerKind":1}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 404

{"id":237,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"blinkDisplay","insertText":"blinkDisplay","insertTextFormat":2,"kind":2,"label":" blinkDisplay(byte digits, byte enabled = ON)","score":9.6800003051757812,"sortText":"3e651eb8blinkDisplay","textEdit":{"newText":"blinkDisplay","range":{"end":{"character":18,"line":21},"start":{"character":6,"line":21}}}}]}}
>>>
Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":17},"context":{"triggerKind":1}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 440

{"id":238,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"blinkDisplay","insertText":"blinkDisplay(${1:byte digits})","insertTextFormat":2,"kind":2,"label":" blinkDisplay(byte digits, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkDisplay","textEdit":{"newText":"blinkDisplay(${1:byte digits})","range":{"end":{"character":17,"line":21},"start":{"character":6,"line":21}}}}]}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":17},"end":{"line":21,"character":17}},"context":{"diagnostics":[]}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":239,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":16},"context":{"triggerKind":1}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 440

{"id":240,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"blinkDisplay","insertText":"blinkDisplay(${1:byte digits})","insertTextFormat":2,"kind":2,"label":" blinkDisplay(byte digits, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkDisplay","textEdit":{"newText":"blinkDisplay(${1:byte digits})","range":{"end":{"character":16,"line":21},"start":{"character":6,"line":21}}}}]}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":16},"end":{"line":21,"character":16}},"context":{"diagnostics":[]}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":241,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 697

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"severity":1,"code":"typecheck_call_too_few_args_at_least_one","source":"clang","message":"Too few arguments to function call, at least argument 'digits' must be specified\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:96:10:\nnote: 'blinkDisplay' declared here"}]}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":242,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":243,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":102}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":244,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":245,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":246,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":103}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":21}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 270

{"id":247,"jsonrpc":"2.0","result":{"activeParameter":1,"activeSignature":0,"signatures":[{"documentation":"Blinks the digits on the LED digit display.","label":"blinkDisplay(byte digits, byte enabled = ON) -> void","parameters":[{"label":[13,24]},{"label":[26,43]}]}]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":248,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":249,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":250,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":22,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":104}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":176},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":251,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":251,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tr'","range":{"end":{"character":23,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":105}}Content-Length: 783

{"id":252,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":21,"character":23},"end":{"line":21,"character":23}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":253,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tru'","range":{"end":{"character":24,"line":21},"start":{"character":21,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":106}}Content-Length: 783

{"id":254,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":21,"character":24},"end":{"line":21,"character":24}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":178},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":255,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":255,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":107}}Content-Length: 783

{"id":256,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":257,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":258,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":25},"end":{"line":21,"character":25}},"context":{"diagnostics":[]}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":259,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":27},"end":{"line":21,"character":27}},"context":{"diagnostics":[]}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":260,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":25}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":261,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":21},"start":{"character":6,"line":21}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":20}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":262,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":18,"line":21},"start":{"character":6,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":263,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":264,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":108}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":265,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":109}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":266,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":267,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":268,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":110}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":269,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":270,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":271,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":111}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":272,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":273,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":274,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":21},"start":{"character":19,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":112}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":275,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":276,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":277,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":113}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":278,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":114}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":279,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}},"context":{"diagnostics":[]}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":280,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":28}},"context":{"diagnostics":[]}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":281,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":28}},"rangeLength":28,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":282,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":115}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":48}},"context":{"diagnostics":[]}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":283,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":48}},"rangeLength":48,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":284,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":116}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":19,"character":13},"end":{"line":20,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":285,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":117}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"context":{"diagnostics":[]}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":286,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1014

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":118},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 13 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n}\n\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"context":{"diagnostics":[]}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":287,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":288,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":288,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":210},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":289,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":289,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 419

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"text":"\n  "},{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":211},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":118}}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":119}}Content-Length: 783

{"id":290,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":121}}
>>>
Content-Length: 339

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"text":"  MFS.blinkDisplay(10,true);"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":291,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":122}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":30}},"context":{"diagnostics":[]}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":292,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":21}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":293,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":22}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":294,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":295,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":123},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 783

{"id":296,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":123}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":297,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":17},"start":{"character":21,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":124}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":125},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":298,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":125}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":126},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":299,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":126}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":300,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":301,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"context":{"diagnostics":[]}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":302,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"text":"3"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":303,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":127}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":24},"end":{"line":17,"character":24}},"context":{"diagnostics":[]}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":304,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":305,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":128}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"context":{"diagnostics":[]}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":306,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":129},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":23}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":307,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":129}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":308,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":130},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":309,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":17},"start":{"character":21,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":130}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":310,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":311,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":131},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"text":"3"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":312,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":131}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":313,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":314,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":132},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":315,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":22,"line":17},"start":{"character":21,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":132}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":316,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":316,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":317,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":133},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"text":"9"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":318,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":318,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":133}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":319,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":319,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":320,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":7}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"id":321,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `blinkDisplay`  \n\n---\n→ `void`  \nParameters:  \n- `byte digits`\n- `byte enabled = 1`\n\nBlinks the digits on the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void blinkDisplay(byte digits, byte enabled = 1)\n```"},"range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":8}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"id":322,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `blinkDisplay`  \n\n---\n→ `void`  \nParameters:  \n- `byte digits`\n- `byte enabled = 1`\n\nBlinks the digits on the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void blinkDisplay(byte digits, byte enabled = 1)\n```"},"range":{"end":{"character":20,"line":17},"start":{"character":8,"line":17}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":8}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":323,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":20,"line":17},"start":{"character":8,"line":17}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":20}},"context":{"diagnostics":[]}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":324,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":29}},"context":{"diagnostics":[]}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":325,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":23}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":326,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":134},"contentChanges":[{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":29}},"rangeLength":21,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":327,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":134}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":135},"contentChanges":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":328,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":135}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":329,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":7}},"context":{"diagnostics":[]}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":330,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":136},"contentChanges":[{"range":{"start":{"line":17,"character":7},"end":{"line":17,"character":7}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":8},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 9529

{"id":331,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"beep","insertText":"beep()","insertTextFormat":2,"kind":2,"label":" beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1, unsigned int loopDelayPeriod = 0)","score":9.6800003051757812,"sortText":"3ee51eb8beep","textEdit":{"newText":"beep()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"blinkDisplay","insertText":"blinkDisplay(${1:byte digits})","insertTextFormat":2,"kind":2,"label":" blinkDisplay(byte digits, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkDisplay","textEdit":{"newText":"blinkDisplay(${1:byte digits})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"blinkLeds","insertText":"blinkLeds(${1:byte leds})","insertTextFormat":2,"kind":2,"label":" blinkLeds(byte leds, byte enabled = ON)","score":9.6800003051757812,"sortText":"3ee51eb8blinkLeds","textEdit":{"newText":"blinkLeds(${1:byte leds})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"disablePulseInCounter","insertText":"disablePulseInCounter()","insertTextFormat":2,"kind":2,"label":" disablePulseInCounter()","score":9.6800003051757812,"sortText":"3ee51eb8disablePulseInCounter","textEdit":{"newText":"disablePulseInCounter()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"byte","filterText":"getButton","insertText":"getButton()","insertTextFormat":2,"kind":2,"label":" getButton()","score":9.6800003051757812,"sortText":"3ee51eb8getButton","textEdit":{"newText":"getButton()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"int","filterText":"getLM35Data","insertText":"getLM35Data()","insertTextFormat":2,"kind":2,"label":" getLM35Data()","score":9.6800003051757812,"sortText":"3ee51eb8getLM35Data","textEdit":{"newText":"getLM35Data()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"unsigned int","filterText":"getPulseInPeriod","insertText":"getPulseInPeriod()","insertTextFormat":2,"kind":2,"label":" getPulseInPeriod()","score":9.6800003051757812,"sortText":"3ee51eb8getPulseInPeriod","textEdit":{"newText":"getPulseInPeriod()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"unsigned long","filterText":"getPulseInTotalCount","insertText":"getPulseInTotalCount()","insertTextFormat":2,"kind":2,"label":" getPulseInTotalCount()","score":9.6800003051757812,"sortText":"3ee51eb8getPulseInTotalCount","textEdit":{"newText":"getPulseInTotalCount()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"unsigned int","filterText":"getSonarDataCm","insertText":"getSonarDataCm(${1:byte triggerPin}, ${2:byte echoPin})","insertTextFormat":2,"kind":2,"label":" getSonarDataCm(byte triggerPin, byte echoPin)","score":9.6800003051757812,"sortText":"3ee51eb8getSonarDataCm","textEdit":{"newText":"getSonarDataCm(${1:byte triggerPin}, ${2:byte echoPin})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"unsigned long","filterText":"getTimer","insertText":"getTimer()","insertTextFormat":2,"kind":2,"label":" getTimer()","score":9.6800003051757812,"sortText":"3ee51eb8getTimer","textEdit":{"newText":"getTimer()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"initLM35","insertText":"initLM35()","insertTextFormat":2,"kind":2,"label":" initLM35(byte level = SMOOTHING_MODERATE)","score":9.6800003051757812,"sortText":"3ee51eb8initLM35","textEdit":{"newText":"initLM35()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"initPulseInCounter","insertText":"initPulseInCounter()","insertTextFormat":2,"kind":2,"label":" initPulseInCounter(byte pin = BUTTON_1_PIN, unsigned int timeOut = 3000, byte trigger = LOW)","score":9.6800003051757812,"sortText":"3ee51eb8initPulseInCounter","textEdit":{"newText":"initPulseInCounter()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"initSonar","insertText":"initSonar()","insertTextFormat":2,"kind":2,"label":" initSonar(byte level = SMOOTHING_MODERATE)","score":9.6800003051757812,"sortText":"3ee51eb8initSonar","textEdit":{"newText":"initSonar()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"initialize","insertText":"initialize()","insertTextFormat":2,"kind":2,"label":" initialize()","score":9.6800003051757812,"sortText":"3ee51eb8initialize","textEdit":{"newText":"initialize()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"isrCallBack","insertText":"isrCallBack()","insertTextFormat":2,"kind":2,"label":" isrCallBack()","score":9.6800003051757812,"sortText":"3ee51eb8isrCallBack","textEdit":{"newText":"isrCallBack()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"manualButtonHandler","insertText":"manualButtonHandler()","insertTextFormat":2,"kind":2,"label":" manualButtonHandler()","score":9.6800003051757812,"sortText":"3ee51eb8manualButtonHandler","textEdit":{"newText":"manualButtonHandler()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"manualDisplayRefresh","insertText":"manualDisplayRefresh()","insertTextFormat":2,"kind":2,"label":" manualDisplayRefresh()","score":9.6800003051757812,"sortText":"3ee51eb8manualDisplayRefresh","textEdit":{"newText":"manualDisplayRefresh()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"queueButton","insertText":"queueButton(${1:byte button})","insertTextFormat":2,"kind":2,"label":" queueButton(byte button)","score":9.6800003051757812,"sortText":"3ee51eb8queueButton","textEdit":{"newText":"queueButton(${1:byte button})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"resetPulseInTotalCount","insertText":"resetPulseInTotalCount()","insertTextFormat":2,"kind":2,"label":" resetPulseInTotalCount()","score":9.6800003051757812,"sortText":"3ee51eb8resetPulseInTotalCount","textEdit":{"newText":"resetPulseInTotalCount()","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"setBeepOffPeriod","insertText":"setBeepOffPeriod(${1:unsigned int offPeriod})","insertTextFormat":2,"kind":2,"label":" setBeepOffPeriod(unsigned int offPeriod)","score":9.6800003051757812,"sortText":"3ee51eb8setBeepOffPeriod","textEdit":{"newText":"setBeepOffPeriod(${1:unsigned int offPeriod})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"setDisplayBrightness","insertText":"setDisplayBrightness(${1:byte level})","insertTextFormat":2,"kind":2,"label":" setDisplayBrightness(byte level)","score":9.6800003051757812,"sortText":"3ee51eb8setDisplayBrightness","textEdit":{"newText":"setDisplayBrightness(${1:byte level})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"setPulseInTimeOut","insertText":"setPulseInTimeOut(${1:unsigned int timeOut})","insertTextFormat":2,"kind":2,"label":" setPulseInTimeOut(unsigned int timeOut)","score":9.6800003051757812,"sortText":"3ee51eb8setPulseInTimeOut","textEdit":{"newText":"setPulseInTimeOut(${1:unsigned int timeOut})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"setTimer","insertText":"setTimer(${1:unsigned long thousandths})","insertTextFormat":2,"kind":2,"label":" setTimer(unsigned long thousandths)","score":9.6800003051757812,"sortText":"3ee51eb8setTimer","textEdit":{"newText":"setTimer(${1:unsigned long thousandths})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void (*)()","filterText":"userInterrupt","insertText":"userInterrupt","insertTextFormat":2,"kind":5,"label":" userInterrupt","score":9.6800003051757812,"sortText":"3ee51eb8userInterrupt","textEdit":{"newText":"userInterrupt","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"wait","insertText":"wait(${1:unsigned long thousandths})","insertTextFormat":2,"kind":2,"label":" wait(unsigned long thousandths)","score":9.6800003051757812,"sortText":"3ee51eb8wait","textEdit":{"newText":"wait(${1:unsigned long thousandths})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"[3 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}},{"detail":"void","filterText":"writeLeds","insertText":"writeLeds(${1:byte leds}, ${2:byte lit})","insertTextFormat":2,"kind":2,"label":" writeLeds(byte leds, byte lit)","score":9.6800003051757812,"sortText":"3ee51eb8writeLeds","textEdit":{"newText":"writeLeds(${1:byte leds}, ${2:byte lit})","range":{"end":{"character":8,"line":17},"start":{"character":8,"line":17}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":332,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":136}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":333,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":8}},"context":{"diagnostics":[]}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":334,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":137},"contentChanges":[{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":8}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":335,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'l' in 'MultiFuncShield'","range":{"end":{"character":9,"line":17},"start":{"character":8,"line":17}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":137}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":138},"contentChanges":[{"range":{"start":{"line":17,"character":9},"end":{"line":17,"character":9}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":257},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":336,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 594

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'le' in 'MultiFuncShield'","range":{"end":{"character":10,"line":17},"start":{"character":8,"line":17}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":138}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":337,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 488

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":10},"end":{"line":17,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":10}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'le' in 'MultiFuncShield'"}]}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":338,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 358

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":139},"contentChanges":[{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":10}},"rangeLength":2,"text":"writeLeds(byte leds, byte lit)"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":339,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 610

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":22,"line":17},"start":{"character":18,"line":17}},"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":33,"line":17},"start":{"character":29,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":139}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":340,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":22}},"severity":1,"code":"unexpected_typedef","source":"clang","message":"Unexpected type name 'byte': expected expression"}]}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":341,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":140},"contentChanges":[{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":27}},"rangeLength":9,"text":"B"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":342,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 594

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":25,"line":17},"start":{"character":21,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B'","range":{"end":{"character":19,"line":17},"start":{"character":18,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":140}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":343,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":344,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":18},"end":{"line":17,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'B'"}]}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":345,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1048

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":141},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 15 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n\n    MFS.writeLeds(B, byte lit)\n}\n\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":142},"contentChanges":[{"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 783

{"id":346,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":26,"line":17},"start":{"character":22,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":142}}Content-Length: 783

{"id":347,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":20},"end":{"line":17,"character":20}},"context":{"diagnostics":[]}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":348,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":20,"line":17},"start":{"character":20,"line":17}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B1'"},"kind":"refactor","title":"Expand macro 'B1'"}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":349,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":20},"end":{"line":17,"character":20}},"context":{"diagnostics":[]}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":350,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":20,"line":17},"start":{"character":20,"line":17}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B1'"},"kind":"refactor","title":"Expand macro 'B1'"}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":143},"contentChanges":[{"range":{"start":{"line":17,"character":20},"end":{"line":17,"character":20}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":351,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":27,"line":17},"start":{"character":23,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":143}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":144},"contentChanges":[{"range":{"start":{"line":17,"character":21},"end":{"line":17,"character":21}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":352,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":28,"line":17},"start":{"character":24,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":144}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":353,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":145},"contentChanges":[{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":354,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unexpected_typedef","message":"Unexpected type name 'byte': expected expression","range":{"end":{"character":29,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":145}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":355,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":356,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":23},"end":{"line":17,"character":23}},"context":{"diagnostics":[]}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"id":357,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":23,"line":17},"start":{"character":23,"line":17}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B1010'"},"kind":"refactor","title":"Expand macro 'B1010'"}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":25}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":358,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":29}},"severity":1,"code":"unexpected_typedef","source":"clang","message":"Unexpected type name 'byte': expected expression"}]}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":359,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":29}},"severity":1,"code":"unexpected_typedef","source":"clang","message":"Unexpected type name 'byte': expected expression"}]}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":360,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":33}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":29}},"severity":1,"code":"unexpected_typedef","source":"clang","message":"Unexpected type name 'byte': expected expression"}]}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":361,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":146},"contentChanges":[{"range":{"start":{"line":17,"character":25},"end":{"line":17,"character":33}},"rangeLength":8,"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":362,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":26,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":146}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":147},"contentChanges":[{"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":363,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 596

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tr'","range":{"end":{"character":27,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":147}}Content-Length: 783

{"id":364,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":148},"contentChanges":[{"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":365,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 597

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tru'","range":{"end":{"character":28,"line":17},"start":{"character":25,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":148}}Content-Length: 783

{"id":366,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":149},"contentChanges":[{"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":284},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":367,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":367,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":149}}Content-Length: 783

{"id":368,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":369,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":369,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":29},"end":{"line":17,"character":29}},"context":{"diagnostics":[]}},"id":370,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":370,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":30}},"context":{"diagnostics":[]}},"id":371,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":371,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":150},"contentChanges":[{"range":{"start":{"line":17,"character":30},"end":{"line":17,"character":30}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":372,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":372,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":150}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":373,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":373,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":31},"end":{"line":17,"character":31}},"context":{"diagnostics":[]}},"id":374,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":374,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":12}},"id":375,"jsonrpc":"2.0"}
<<<
Content-Length: 369

{"id":375,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":17,"line":17},"start":{"character":8,"line":17}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":10}},"id":376,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":376,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":17},"start":{"character":8,"line":17}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":10},"end":{"line":17,"character":10}},"context":{"diagnostics":[]}},"id":377,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":377,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":11}},"id":378,"jsonrpc":"2.0"}
<<<
Content-Length: 369

{"id":378,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":17,"line":17},"start":{"character":8,"line":17}}}}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":13}},"id":379,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":379,"jsonrpc":"2.0","result":[{"range":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":13}},"id":380,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":380,"jsonrpc":"2.0","result":[{"range":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":381,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":381,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":13}},"context":{"diagnostics":[]}},"id":382,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":382,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":23}},"id":383,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":383,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":7}},"id":384,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":384,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":12,"line":417},"start":{"character":4,"line":417}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":8}},"id":385,"jsonrpc":"2.0"}
<<<
Content-Length: 763

{"id":385,"jsonrpc":"2.0","result":[{"kind":3,"range":{"end":{"character":12,"line":417},"start":{"character":4,"line":417}}},{"kind":2,"range":{"end":{"character":23,"line":417},"start":{"character":15,"line":417}}},{"kind":3,"range":{"end":{"character":12,"line":422},"start":{"character":4,"line":422}}},{"kind":2,"range":{"end":{"character":23,"line":422},"start":{"character":15,"line":422}}},{"kind":2,"range":{"end":{"character":33,"line":680},"start":{"character":25,"line":680}}},{"kind":2,"range":{"end":{"character":93,"line":680},"start":{"character":85,"line":680}}},{"kind":2,"range":{"end":{"character":57,"line":691},"start":{"character":49,"line":691}}},{"kind":2,"range":{"end":{"character":39,"line":696},"start":{"character":31,"line":696}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":37}},"id":386,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":386,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":31}},"id":387,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":387,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":9}},"id":388,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":388,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":9}},"id":389,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":389,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":12,"line":417},"start":{"character":4,"line":417}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":9}},"id":390,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":390,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 196

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"id":391,"jsonrpc":"2.0"}
<<<
Content-Length: 15044

{"id":391,"jsonrpc":"2.0","result":[{"children":[{"kind":8,"name":"userInterrupt","range":{"end":{"character":34,"line":68},"start":{"character":4,"line":68}},"selectionRange":{"end":{"character":24,"line":68},"start":{"character":11,"line":68}}},{"kind":6,"name":"initialize","range":{"end":{"character":21,"line":71},"start":{"character":4,"line":71}},"selectionRange":{"end":{"character":19,"line":71},"start":{"character":9,"line":71}}},{"kind":6,"name":"isrCallBack","range":{"end":{"character":22,"line":74},"start":{"character":4,"line":74}},"selectionRange":{"end":{"character":20,"line":74},"start":{"character":9,"line":74}}},{"kind":6,"name":"setTimer","range":{"end":{"character":45,"line":77},"start":{"character":4,"line":77}},"selectionRange":{"end":{"character":17,"line":77},"start":{"character":9,"line":77}}},{"kind":6,"name":"getTimer","range":{"end":{"character":28,"line":80},"start":{"character":4,"line":80}},"selectionRange":{"end":{"character":26,"line":80},"start":{"character":18,"line":80}}},{"kind":6,"name":"wait","range":{"end":{"character":40,"line":83},"start":{"character":4,"line":83}},"selectionRange":{"end":{"character":13,"line":83},"start":{"character":9,"line":83}}},{"kind":6,"name":"write","range":{"end":{"character":60,"line":86},"start":{"character":4,"line":86}},"selectionRange":{"end":{"character":14,"line":86},"start":{"character":9,"line":86}}},{"kind":6,"name":"write","range":{"end":{"character":27,"line":87},"start":{"character":4,"line":87}},"selectionRange":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}},{"kind":6,"name":"write","range":{"end":{"character":52,"line":88},"start":{"character":4,"line":88}},"selectionRange":{"end":{"character":14,"line":88},"start":{"character":9,"line":88}}},{"kind":6,"name":"manualDisplayRefresh","range":{"end":{"character":31,"line":92},"start":{"character":4,"line":92}},"selectionRange":{"end":{"character":29,"line":92},"start":{"character":9,"line":92}}},{"kind":6,"name":"blinkDisplay","range":{"end":{"character":21,"line":97},"start":{"character":4,"line":95}},"selectionRange":{"end":{"character":21,"line":95},"start":{"character":9,"line":95}}},{"kind":6,"name":"setDisplayBrightness","range":{"end":{"character":41,"line":99},"start":{"character":4,"line":99}},"selectionRange":{"end":{"character":29,"line":99},"start":{"character":9,"line":99}}},{"kind":6,"name":"writeLeds","range":{"end":{"character":20,"line":104},"start":{"character":4,"line":102}},"selectionRange":{"end":{"character":18,"line":102},"start":{"character":9,"line":102}}},{"kind":6,"name":"blinkLeds","range":{"end":{"character":20,"line":109},"start":{"character":4,"line":107}},"selectionRange":{"end":{"character":18,"line":107},"start":{"character":9,"line":107}}},{"kind":6,"name":"beep","range":{"end":{"character":169,"line":112},"start":{"character":4,"line":112}},"selectionRange":{"end":{"character":13,"line":112},"start":{"character":9,"line":112}}},{"kind":6,"name":"setBeepOffPeriod","range":{"end":{"character":49,"line":115},"start":{"character":4,"line":115}},"selectionRange":{"end":{"character":25,"line":115},"start":{"character":9,"line":115}}},{"kind":6,"name":"queueButton","range":{"end":{"character":34,"line":118},"start":{"character":4,"line":118}},"selectionRange":{"end":{"character":20,"line":118},"start":{"character":9,"line":118}}},{"kind":6,"name":"getButton","range":{"end":{"character":20,"line":121},"start":{"character":4,"line":121}},"selectionRange":{"end":{"character":18,"line":121},"start":{"character":9,"line":121}}},{"kind":6,"name":"manualButtonHandler","range":{"end":{"character":30,"line":125},"start":{"character":4,"line":125}},"selectionRange":{"end":{"character":28,"line":125},"start":{"character":9,"line":125}}},{"kind":6,"name":"initPulseInCounter","range":{"end":{"character":29,"line":131},"start":{"character":4,"line":128}},"selectionRange":{"end":{"character":27,"line":128},"start":{"character":9,"line":128}}},{"kind":6,"name":"disablePulseInCounter","range":{"end":{"character":32,"line":133},"start":{"character":4,"line":133}},"selectionRange":{"end":{"character":30,"line":133},"start":{"character":9,"line":133}}},{"kind":6,"name":"getPulseInPeriod","range":{"end":{"character":35,"line":136},"start":{"character":4,"line":136}},"selectionRange":{"end":{"character":33,"line":136},"start":{"character":17,"line":136}}},{"kind":6,"name":"getPulseInTotalCount","range":{"end":{"character":40,"line":139},"start":{"character":4,"line":139}},"selectionRange":{"end":{"character":38,"line":139},"start":{"character":18,"line":139}}},{"kind":6,"name":"resetPulseInTotalCount","range":{"end":{"character":33,"line":142},"start":{"character":4,"line":142}},"selectionRange":{"end":{"character":31,"line":142},"start":{"character":9,"line":142}}},{"kind":6,"name":"setPulseInTimeOut","range":{"end":{"character":48,"line":145},"start":{"character":4,"line":145}},"selectionRange":{"end":{"character":26,"line":145},"start":{"character":9,"line":145}}},{"kind":6,"name":"initSonar","range":{"end":{"character":51,"line":148},"start":{"character":4,"line":148}},"selectionRange":{"end":{"character":18,"line":148},"start":{"character":9,"line":148}}},{"kind":6,"name":"getSonarDataCm","range":{"end":{"character":62,"line":151},"start":{"character":4,"line":151}},"selectionRange":{"end":{"character":31,"line":151},"start":{"character":17,"line":151}}},{"kind":6,"name":"initLM35","range":{"end":{"character":50,"line":154},"start":{"character":4,"line":154}},"selectionRange":{"end":{"character":17,"line":154},"start":{"character":9,"line":154}}},{"kind":6,"name":"getLM35Data","range":{"end":{"character":21,"line":157},"start":{"character":4,"line":157}},"selectionRange":{"end":{"character":19,"line":157},"start":{"character":8,"line":157}}},{"kind":8,"name":"timerReadInProgress","range":{"end":{"character":41,"line":160},"start":{"character":4,"line":160}},"selectionRange":{"end":{"character":37,"line":160},"start":{"character":18,"line":160}}},{"kind":8,"name":"timerWriteInProgress","range":{"end":{"character":42,"line":161},"start":{"character":4,"line":161}},"selectionRange":{"end":{"character":38,"line":161},"start":{"character":18,"line":161}}},{"kind":8,"name":"buttonBuffer","range":{"end":{"character":48,"line":165},"start":{"character":4,"line":165}},"selectionRange":{"end":{"character":30,"line":165},"start":{"character":18,"line":165}}},{"kind":8,"name":"buttonBufferCount","range":{"end":{"character":39,"line":166},"start":{"character":4,"line":166}},"selectionRange":{"end":{"character":35,"line":166},"start":{"character":18,"line":166}}},{"kind":8,"name":"button_write_pos","range":{"end":{"character":38,"line":167},"start":{"character":4,"line":167}},"selectionRange":{"end":{"character":34,"line":167},"start":{"character":18,"line":167}}},{"kind":8,"name":"button_read_pos","range":{"end":{"character":37,"line":168},"start":{"character":4,"line":168}},"selectionRange":{"end":{"character":33,"line":168},"start":{"character":18,"line":168}}},{"kind":8,"name":"buttonSampleIntervalCounter","range":{"end":{"character":47,"line":170},"start":{"character":4,"line":170}},"selectionRange":{"end":{"character":44,"line":170},"start":{"character":17,"line":170}}},{"kind":8,"name":"buttonState","range":{"end":{"character":44,"line":171},"start":{"character":4,"line":171}},"selectionRange":{"end":{"character":20,"line":171},"start":{"character":9,"line":171}}},{"kind":8,"name":"buttonPressTime","range":{"end":{"character":56,"line":172},"start":{"character":4,"line":172}},"selectionRange":{"end":{"character":32,"line":172},"start":{"character":17,"line":172}}},{"kind":8,"name":"timer_volatile","range":{"end":{"character":45,"line":174},"start":{"character":4,"line":174}},"selectionRange":{"end":{"character":41,"line":174},"start":{"character":27,"line":174}}},{"kind":8,"name":"timer_safe","range":{"end":{"character":41,"line":175},"start":{"character":4,"line":175}},"selectionRange":{"end":{"character":37,"line":175},"start":{"character":27,"line":175}}},{"kind":8,"name":"beeperModifyInProgress","range":{"end":{"character":44,"line":177},"start":{"character":4,"line":177}},"selectionRange":{"end":{"character":40,"line":177},"start":{"character":18,"line":177}}},{"kind":8,"name":"beeperState","range":{"end":{"character":32,"line":178},"start":{"character":4,"line":178}},"selectionRange":{"end":{"character":29,"line":178},"start":{"character":18,"line":178}}},{"kind":8,"name":"beeperOnPeriodReloadValue","range":{"end":{"character":54,"line":179},"start":{"character":4,"line":179}},"selectionRange":{"end":{"character":51,"line":179},"start":{"character":26,"line":179}}},{"kind":8,"name":"beeperOffPeriodReloadValue","range":{"end":{"character":55,"line":180},"start":{"character":4,"line":180}},"selectionRange":{"end":{"character":52,"line":180},"start":{"character":26,"line":180}}},{"kind":8,"name":"beeperPeriodCounter","range":{"end":{"character":49,"line":181},"start":{"character":4,"line":181}},"selectionRange":{"end":{"character":45,"line":181},"start":{"character":26,"line":181}}},{"kind":8,"name":"beeperCycleReloadValue","range":{"end":{"character":44,"line":182},"start":{"character":4,"line":182}},"selectionRange":{"end":{"character":40,"line":182},"start":{"character":18,"line":182}}},{"kind":8,"name":"beeperCycleCounter","range":{"end":{"character":39,"line":183},"start":{"character":4,"line":183}},"selectionRange":{"end":{"character":36,"line":183},"start":{"character":18,"line":183}}},{"kind":8,"name":"beeperLoopCycleCounter","range":{"end":{"character":51,"line":184},"start":{"character":4,"line":184}},"selectionRange":{"end":{"character":48,"line":184},"start":{"character":26,"line":184}}},{"kind":8,"name":"beeperLoopDelayPeriodReloadValue","range":{"end":{"character":61,"line":185},"start":{"character":4,"line":185}},"selectionRange":{"end":{"character":58,"line":185},"start":{"character":26,"line":185}}},{"kind":8,"name":"displayIdx","range":{"end":{"character":23,"line":187},"start":{"character":4,"line":187}},"selectionRange":{"end":{"character":19,"line":187},"start":{"character":9,"line":187}}},{"kind":8,"name":"blinkEnabled","range":{"end":{"character":25,"line":188},"start":{"character":4,"line":188}},"selectionRange":{"end":{"character":21,"line":188},"start":{"character":9,"line":188}}},{"kind":8,"name":"blinkState","range":{"end":{"character":23,"line":189},"start":{"character":4,"line":189}},"selectionRange":{"end":{"character":19,"line":189},"start":{"character":9,"line":189}}},{"kind":8,"name":"blinkCounter","range":{"end":{"character":25,"line":190},"start":{"character":4,"line":190}},"selectionRange":{"end":{"character":21,"line":190},"start":{"character":9,"line":190}}},{"kind":8,"name":"ledState","range":{"end":{"character":20,"line":192},"start":{"character":4,"line":192}},"selectionRange":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}},{"kind":8,"name":"ledBlinkEnabled","range":{"end":{"character":27,"line":193},"start":{"character":4,"line":193}},"selectionRange":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}},{"kind":8,"name":"ledOutput","range":{"end":{"character":20,"line":194},"start":{"character":4,"line":194}},"selectionRange":{"end":{"character":18,"line":194},"start":{"character":9,"line":194}}},{"kind":8,"name":"pulseInEnabled","range":{"end":{"character":40,"line":196},"start":{"character":4,"line":196}},"selectionRange":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}},{"kind":8,"name":"pulseInReadInProgress","range":{"end":{"character":42,"line":197},"start":{"character":4,"line":197}},"selectionRange":{"end":{"character":39,"line":197},"start":{"character":18,"line":197}}},{"kind":8,"name":"pulseInWriteInProgress","range":{"end":{"character":43,"line":198},"start":{"character":4,"line":198}},"selectionRange":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}}},{"kind":8,"name":"pulseInTimeOut","range":{"end":{"character":47,"line":200},"start":{"character":4,"line":200}},"selectionRange":{"end":{"character":40,"line":200},"start":{"character":26,"line":200}}},{"kind":8,"name":"pulseInPin","range":{"end":{"character":43,"line":201},"start":{"character":4,"line":201}},"selectionRange":{"end":{"character":28,"line":201},"start":{"character":18,"line":201}}},{"kind":8,"name":"pulseInPeriodCounter","range":{"end":{"character":53,"line":202},"start":{"character":4,"line":202}},"selectionRange":{"end":{"character":46,"line":202},"start":{"character":26,"line":202}}},{"kind":8,"name":"pulseInTrigger","range":{"end":{"character":38,"line":203},"start":{"character":4,"line":203}},"selectionRange":{"end":{"character":32,"line":203},"start":{"character":18,"line":203}}},{"kind":8,"name":"pulseInPeriod_volatile","range":{"end":{"character":51,"line":204},"start":{"character":4,"line":204}},"selectionRange":{"end":{"character":48,"line":204},"start":{"character":26,"line":204}}},{"kind":8,"name":"pulseInPeriod_safe","range":{"end":{"character":47,"line":205},"start":{"character":4,"line":205}},"selectionRange":{"end":{"character":44,"line":205},"start":{"character":26,"line":205}}},{"kind":8,"name":"pulseInState","range":{"end":{"character":33,"line":206},"start":{"character":4,"line":206}},"selectionRange":{"end":{"character":30,"line":206},"start":{"character":18,"line":206}}},{"kind":8,"name":"pulseInTotalCount_volatile","range":{"end":{"character":57,"line":207},"start":{"character":4,"line":207}},"selectionRange":{"end":{"character":53,"line":207},"start":{"character":27,"line":207}}},{"kind":8,"name":"pulseInTotalCount_safe","range":{"end":{"character":53,"line":208},"start":{"character":4,"line":208}},"selectionRange":{"end":{"character":49,"line":208},"start":{"character":27,"line":208}}},{"kind":8,"name":"sonarSmoothingLevel","range":{"end":{"character":49,"line":210},"start":{"character":4,"line":210}},"selectionRange":{"end":{"character":28,"line":210},"start":{"character":9,"line":210}}},{"kind":8,"name":"lm35SmoothingLevel","range":{"end":{"character":48,"line":211},"start":{"character":4,"line":211}},"selectionRange":{"end":{"character":27,"line":211},"start":{"character":9,"line":211}}}],"kind":5,"name":"MultiFuncShield","range":{"end":{"character":1,"line":212},"start":{"character":0,"line":63}},"selectionRange":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}}},{"kind":13,"name":"MFS","range":{"end":{"character":26,"line":214},"start":{"character":0,"line":214}},"selectionRange":{"end":{"character":26,"line":214},"start":{"character":23,"line":214}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":60,"line":217},"start":{"character":0,"line":217}},"selectionRange":{"end":{"character":20,"line":217},"start":{"character":11,"line":217}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":92,"line":220},"start":{"character":0,"line":220}},"selectionRange":{"end":{"character":20,"line":220},"start":{"character":11,"line":220}}}]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":198,"character":18}},"id":392,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":392,"jsonrpc":"2.0","result":[{"range":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":13}},"id":393,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":393,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":13}},"id":394,"jsonrpc":"2.0"}
<<<
Content-Length: 127

{"id":394,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":194,"character":9}},"id":395,"jsonrpc":"2.0"}
<<<
Content-Length: 369

{"id":395,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledOutput`  \n\n---\nType: `byte`  \nOffset: 52 bytes  \nSize: 1 byte  \ncurrent led outputs (taking into consideration blink)  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledOutput = 0\n```"},"range":{"end":{"character":18,"line":194},"start":{"character":9,"line":194}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":40}},"id":396,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":396,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":24}},"id":397,"jsonrpc":"2.0"}
<<<
Content-Length: 128

{"id":397,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}}]}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":12}},"id":398,"jsonrpc":"2.0"}
<<<
Content-Length: 127

{"id":398,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":194,"character":6}},"id":399,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":399,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":8,"line":194},"start":{"character":4,"line":194}}}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":194,"character":5}},"id":400,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":400,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":8,"line":194},"start":{"character":4,"line":194}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":22}},"id":401,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":401,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `pulseInEnabled`  \n\n---\nType: `volatile byte`  \nOffset: 53 bytes  \nSize: 1 byte  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: volatile byte pulseInEnabled = false\n```"},"range":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":25}},"id":402,"jsonrpc":"2.0"}
<<<
Content-Length: 128

{"id":402,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}}]}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":13}},"id":403,"jsonrpc":"2.0"}
<<<
Content-Length: 127

{"id":403,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":198,"character":34}},"id":404,"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"id":404,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `pulseInWriteInProgress`  \n\n---\nType: `volatile byte`  \nOffset: 55 bytes  \nSize: 1 byte  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: volatile byte pulseInWriteInProgress = 0\n```"},"range":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":208,"character":25}},"id":405,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":405,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":207,"character":26}},"id":406,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":406,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":207,"character":26}},"id":407,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":407,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":206,"character":27}},"id":408,"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"id":408,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `pulseInState`  \n\n---\nType: `volatile byte`  \nOffset: 66 bytes  \nSize: 1 byte  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: volatile byte pulseInState = 0\n```"},"range":{"end":{"character":30,"line":206},"start":{"character":18,"line":206}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":15}},"id":409,"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"id":409,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledBlinkEnabled`  \n\n---\nType: `byte`  \nOffset: 51 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledBlinkEnabled = 0\n```"},"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":14}},"id":410,"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"id":410,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledBlinkEnabled`  \n\n---\nType: `byte`  \nOffset: 51 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledBlinkEnabled = 0\n```"},"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":12}},"id":411,"jsonrpc":"2.0"}
<<<
Content-Length: 128

{"id":411,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":196,"character":4}},"id":412,"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"id":412,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `pulseInEnabled`  \n\n---\nType: `volatile byte`  \nOffset: 53 bytes  \nSize: 1 byte  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: volatile byte pulseInEnabled = false\n```"},"range":{"end":{"character":12,"line":196},"start":{"character":4,"line":196}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":11}},"id":413,"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"id":413,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledBlinkEnabled`  \n\n---\nType: `byte`  \nOffset: 51 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledBlinkEnabled = 0\n```"},"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":12}},"id":414,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":414,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":12}},"id":415,"jsonrpc":"2.0"}
<<<
Content-Length: 127

{"id":415,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":12}},"id":416,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":416,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":12}},"id":417,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":417,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":12}},"id":418,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":418,"jsonrpc":"2.0","result":[{"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":12}},"id":419,"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"id":419,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledBlinkEnabled`  \n\n---\nType: `byte`  \nOffset: 51 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledBlinkEnabled = 0\n```"},"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":194,"character":70}},"id":420,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":420,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":193,"character":17}},"id":421,"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"id":421,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledBlinkEnabled`  \n\n---\nType: `byte`  \nOffset: 51 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledBlinkEnabled = 0\n```"},"range":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":14}},"id":422,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":422,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":13}},"id":423,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":423,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":14}},"id":424,"jsonrpc":"2.0"}
<<<
Content-Length: 127

{"id":424,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":14}},"id":425,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":425,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":25}},"id":426,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":426,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":15}},"id":427,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":427,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 196

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"id":428,"jsonrpc":"2.0"}
<<<
Content-Length: 15044

{"id":428,"jsonrpc":"2.0","result":[{"children":[{"kind":8,"name":"userInterrupt","range":{"end":{"character":34,"line":68},"start":{"character":4,"line":68}},"selectionRange":{"end":{"character":24,"line":68},"start":{"character":11,"line":68}}},{"kind":6,"name":"initialize","range":{"end":{"character":21,"line":71},"start":{"character":4,"line":71}},"selectionRange":{"end":{"character":19,"line":71},"start":{"character":9,"line":71}}},{"kind":6,"name":"isrCallBack","range":{"end":{"character":22,"line":74},"start":{"character":4,"line":74}},"selectionRange":{"end":{"character":20,"line":74},"start":{"character":9,"line":74}}},{"kind":6,"name":"setTimer","range":{"end":{"character":45,"line":77},"start":{"character":4,"line":77}},"selectionRange":{"end":{"character":17,"line":77},"start":{"character":9,"line":77}}},{"kind":6,"name":"getTimer","range":{"end":{"character":28,"line":80},"start":{"character":4,"line":80}},"selectionRange":{"end":{"character":26,"line":80},"start":{"character":18,"line":80}}},{"kind":6,"name":"wait","range":{"end":{"character":40,"line":83},"start":{"character":4,"line":83}},"selectionRange":{"end":{"character":13,"line":83},"start":{"character":9,"line":83}}},{"kind":6,"name":"write","range":{"end":{"character":60,"line":86},"start":{"character":4,"line":86}},"selectionRange":{"end":{"character":14,"line":86},"start":{"character":9,"line":86}}},{"kind":6,"name":"write","range":{"end":{"character":27,"line":87},"start":{"character":4,"line":87}},"selectionRange":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}},{"kind":6,"name":"write","range":{"end":{"character":52,"line":88},"start":{"character":4,"line":88}},"selectionRange":{"end":{"character":14,"line":88},"start":{"character":9,"line":88}}},{"kind":6,"name":"manualDisplayRefresh","range":{"end":{"character":31,"line":92},"start":{"character":4,"line":92}},"selectionRange":{"end":{"character":29,"line":92},"start":{"character":9,"line":92}}},{"kind":6,"name":"blinkDisplay","range":{"end":{"character":21,"line":97},"start":{"character":4,"line":95}},"selectionRange":{"end":{"character":21,"line":95},"start":{"character":9,"line":95}}},{"kind":6,"name":"setDisplayBrightness","range":{"end":{"character":41,"line":99},"start":{"character":4,"line":99}},"selectionRange":{"end":{"character":29,"line":99},"start":{"character":9,"line":99}}},{"kind":6,"name":"writeLeds","range":{"end":{"character":20,"line":104},"start":{"character":4,"line":102}},"selectionRange":{"end":{"character":18,"line":102},"start":{"character":9,"line":102}}},{"kind":6,"name":"blinkLeds","range":{"end":{"character":20,"line":109},"start":{"character":4,"line":107}},"selectionRange":{"end":{"character":18,"line":107},"start":{"character":9,"line":107}}},{"kind":6,"name":"beep","range":{"end":{"character":169,"line":112},"start":{"character":4,"line":112}},"selectionRange":{"end":{"character":13,"line":112},"start":{"character":9,"line":112}}},{"kind":6,"name":"setBeepOffPeriod","range":{"end":{"character":49,"line":115},"start":{"character":4,"line":115}},"selectionRange":{"end":{"character":25,"line":115},"start":{"character":9,"line":115}}},{"kind":6,"name":"queueButton","range":{"end":{"character":34,"line":118},"start":{"character":4,"line":118}},"selectionRange":{"end":{"character":20,"line":118},"start":{"character":9,"line":118}}},{"kind":6,"name":"getButton","range":{"end":{"character":20,"line":121},"start":{"character":4,"line":121}},"selectionRange":{"end":{"character":18,"line":121},"start":{"character":9,"line":121}}},{"kind":6,"name":"manualButtonHandler","range":{"end":{"character":30,"line":125},"start":{"character":4,"line":125}},"selectionRange":{"end":{"character":28,"line":125},"start":{"character":9,"line":125}}},{"kind":6,"name":"initPulseInCounter","range":{"end":{"character":29,"line":131},"start":{"character":4,"line":128}},"selectionRange":{"end":{"character":27,"line":128},"start":{"character":9,"line":128}}},{"kind":6,"name":"disablePulseInCounter","range":{"end":{"character":32,"line":133},"start":{"character":4,"line":133}},"selectionRange":{"end":{"character":30,"line":133},"start":{"character":9,"line":133}}},{"kind":6,"name":"getPulseInPeriod","range":{"end":{"character":35,"line":136},"start":{"character":4,"line":136}},"selectionRange":{"end":{"character":33,"line":136},"start":{"character":17,"line":136}}},{"kind":6,"name":"getPulseInTotalCount","range":{"end":{"character":40,"line":139},"start":{"character":4,"line":139}},"selectionRange":{"end":{"character":38,"line":139},"start":{"character":18,"line":139}}},{"kind":6,"name":"resetPulseInTotalCount","range":{"end":{"character":33,"line":142},"start":{"character":4,"line":142}},"selectionRange":{"end":{"character":31,"line":142},"start":{"character":9,"line":142}}},{"kind":6,"name":"setPulseInTimeOut","range":{"end":{"character":48,"line":145},"start":{"character":4,"line":145}},"selectionRange":{"end":{"character":26,"line":145},"start":{"character":9,"line":145}}},{"kind":6,"name":"initSonar","range":{"end":{"character":51,"line":148},"start":{"character":4,"line":148}},"selectionRange":{"end":{"character":18,"line":148},"start":{"character":9,"line":148}}},{"kind":6,"name":"getSonarDataCm","range":{"end":{"character":62,"line":151},"start":{"character":4,"line":151}},"selectionRange":{"end":{"character":31,"line":151},"start":{"character":17,"line":151}}},{"kind":6,"name":"initLM35","range":{"end":{"character":50,"line":154},"start":{"character":4,"line":154}},"selectionRange":{"end":{"character":17,"line":154},"start":{"character":9,"line":154}}},{"kind":6,"name":"getLM35Data","range":{"end":{"character":21,"line":157},"start":{"character":4,"line":157}},"selectionRange":{"end":{"character":19,"line":157},"start":{"character":8,"line":157}}},{"kind":8,"name":"timerReadInProgress","range":{"end":{"character":41,"line":160},"start":{"character":4,"line":160}},"selectionRange":{"end":{"character":37,"line":160},"start":{"character":18,"line":160}}},{"kind":8,"name":"timerWriteInProgress","range":{"end":{"character":42,"line":161},"start":{"character":4,"line":161}},"selectionRange":{"end":{"character":38,"line":161},"start":{"character":18,"line":161}}},{"kind":8,"name":"buttonBuffer","range":{"end":{"character":48,"line":165},"start":{"character":4,"line":165}},"selectionRange":{"end":{"character":30,"line":165},"start":{"character":18,"line":165}}},{"kind":8,"name":"buttonBufferCount","range":{"end":{"character":39,"line":166},"start":{"character":4,"line":166}},"selectionRange":{"end":{"character":35,"line":166},"start":{"character":18,"line":166}}},{"kind":8,"name":"button_write_pos","range":{"end":{"character":38,"line":167},"start":{"character":4,"line":167}},"selectionRange":{"end":{"character":34,"line":167},"start":{"character":18,"line":167}}},{"kind":8,"name":"button_read_pos","range":{"end":{"character":37,"line":168},"start":{"character":4,"line":168}},"selectionRange":{"end":{"character":33,"line":168},"start":{"character":18,"line":168}}},{"kind":8,"name":"buttonSampleIntervalCounter","range":{"end":{"character":47,"line":170},"start":{"character":4,"line":170}},"selectionRange":{"end":{"character":44,"line":170},"start":{"character":17,"line":170}}},{"kind":8,"name":"buttonState","range":{"end":{"character":44,"line":171},"start":{"character":4,"line":171}},"selectionRange":{"end":{"character":20,"line":171},"start":{"character":9,"line":171}}},{"kind":8,"name":"buttonPressTime","range":{"end":{"character":56,"line":172},"start":{"character":4,"line":172}},"selectionRange":{"end":{"character":32,"line":172},"start":{"character":17,"line":172}}},{"kind":8,"name":"timer_volatile","range":{"end":{"character":45,"line":174},"start":{"character":4,"line":174}},"selectionRange":{"end":{"character":41,"line":174},"start":{"character":27,"line":174}}},{"kind":8,"name":"timer_safe","range":{"end":{"character":41,"line":175},"start":{"character":4,"line":175}},"selectionRange":{"end":{"character":37,"line":175},"start":{"character":27,"line":175}}},{"kind":8,"name":"beeperModifyInProgress","range":{"end":{"character":44,"line":177},"start":{"character":4,"line":177}},"selectionRange":{"end":{"character":40,"line":177},"start":{"character":18,"line":177}}},{"kind":8,"name":"beeperState","range":{"end":{"character":32,"line":178},"start":{"character":4,"line":178}},"selectionRange":{"end":{"character":29,"line":178},"start":{"character":18,"line":178}}},{"kind":8,"name":"beeperOnPeriodReloadValue","range":{"end":{"character":54,"line":179},"start":{"character":4,"line":179}},"selectionRange":{"end":{"character":51,"line":179},"start":{"character":26,"line":179}}},{"kind":8,"name":"beeperOffPeriodReloadValue","range":{"end":{"character":55,"line":180},"start":{"character":4,"line":180}},"selectionRange":{"end":{"character":52,"line":180},"start":{"character":26,"line":180}}},{"kind":8,"name":"beeperPeriodCounter","range":{"end":{"character":49,"line":181},"start":{"character":4,"line":181}},"selectionRange":{"end":{"character":45,"line":181},"start":{"character":26,"line":181}}},{"kind":8,"name":"beeperCycleReloadValue","range":{"end":{"character":44,"line":182},"start":{"character":4,"line":182}},"selectionRange":{"end":{"character":40,"line":182},"start":{"character":18,"line":182}}},{"kind":8,"name":"beeperCycleCounter","range":{"end":{"character":39,"line":183},"start":{"character":4,"line":183}},"selectionRange":{"end":{"character":36,"line":183},"start":{"character":18,"line":183}}},{"kind":8,"name":"beeperLoopCycleCounter","range":{"end":{"character":51,"line":184},"start":{"character":4,"line":184}},"selectionRange":{"end":{"character":48,"line":184},"start":{"character":26,"line":184}}},{"kind":8,"name":"beeperLoopDelayPeriodReloadValue","range":{"end":{"character":61,"line":185},"start":{"character":4,"line":185}},"selectionRange":{"end":{"character":58,"line":185},"start":{"character":26,"line":185}}},{"kind":8,"name":"displayIdx","range":{"end":{"character":23,"line":187},"start":{"character":4,"line":187}},"selectionRange":{"end":{"character":19,"line":187},"start":{"character":9,"line":187}}},{"kind":8,"name":"blinkEnabled","range":{"end":{"character":25,"line":188},"start":{"character":4,"line":188}},"selectionRange":{"end":{"character":21,"line":188},"start":{"character":9,"line":188}}},{"kind":8,"name":"blinkState","range":{"end":{"character":23,"line":189},"start":{"character":4,"line":189}},"selectionRange":{"end":{"character":19,"line":189},"start":{"character":9,"line":189}}},{"kind":8,"name":"blinkCounter","range":{"end":{"character":25,"line":190},"start":{"character":4,"line":190}},"selectionRange":{"end":{"character":21,"line":190},"start":{"character":9,"line":190}}},{"kind":8,"name":"ledState","range":{"end":{"character":20,"line":192},"start":{"character":4,"line":192}},"selectionRange":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}},{"kind":8,"name":"ledBlinkEnabled","range":{"end":{"character":27,"line":193},"start":{"character":4,"line":193}},"selectionRange":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}},{"kind":8,"name":"ledOutput","range":{"end":{"character":20,"line":194},"start":{"character":4,"line":194}},"selectionRange":{"end":{"character":18,"line":194},"start":{"character":9,"line":194}}},{"kind":8,"name":"pulseInEnabled","range":{"end":{"character":40,"line":196},"start":{"character":4,"line":196}},"selectionRange":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}},{"kind":8,"name":"pulseInReadInProgress","range":{"end":{"character":42,"line":197},"start":{"character":4,"line":197}},"selectionRange":{"end":{"character":39,"line":197},"start":{"character":18,"line":197}}},{"kind":8,"name":"pulseInWriteInProgress","range":{"end":{"character":43,"line":198},"start":{"character":4,"line":198}},"selectionRange":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}}},{"kind":8,"name":"pulseInTimeOut","range":{"end":{"character":47,"line":200},"start":{"character":4,"line":200}},"selectionRange":{"end":{"character":40,"line":200},"start":{"character":26,"line":200}}},{"kind":8,"name":"pulseInPin","range":{"end":{"character":43,"line":201},"start":{"character":4,"line":201}},"selectionRange":{"end":{"character":28,"line":201},"start":{"character":18,"line":201}}},{"kind":8,"name":"pulseInPeriodCounter","range":{"end":{"character":53,"line":202},"start":{"character":4,"line":202}},"selectionRange":{"end":{"character":46,"line":202},"start":{"character":26,"line":202}}},{"kind":8,"name":"pulseInTrigger","range":{"end":{"character":38,"line":203},"start":{"character":4,"line":203}},"selectionRange":{"end":{"character":32,"line":203},"start":{"character":18,"line":203}}},{"kind":8,"name":"pulseInPeriod_volatile","range":{"end":{"character":51,"line":204},"start":{"character":4,"line":204}},"selectionRange":{"end":{"character":48,"line":204},"start":{"character":26,"line":204}}},{"kind":8,"name":"pulseInPeriod_safe","range":{"end":{"character":47,"line":205},"start":{"character":4,"line":205}},"selectionRange":{"end":{"character":44,"line":205},"start":{"character":26,"line":205}}},{"kind":8,"name":"pulseInState","range":{"end":{"character":33,"line":206},"start":{"character":4,"line":206}},"selectionRange":{"end":{"character":30,"line":206},"start":{"character":18,"line":206}}},{"kind":8,"name":"pulseInTotalCount_volatile","range":{"end":{"character":57,"line":207},"start":{"character":4,"line":207}},"selectionRange":{"end":{"character":53,"line":207},"start":{"character":27,"line":207}}},{"kind":8,"name":"pulseInTotalCount_safe","range":{"end":{"character":53,"line":208},"start":{"character":4,"line":208}},"selectionRange":{"end":{"character":49,"line":208},"start":{"character":27,"line":208}}},{"kind":8,"name":"sonarSmoothingLevel","range":{"end":{"character":49,"line":210},"start":{"character":4,"line":210}},"selectionRange":{"end":{"character":28,"line":210},"start":{"character":9,"line":210}}},{"kind":8,"name":"lm35SmoothingLevel","range":{"end":{"character":48,"line":211},"start":{"character":4,"line":211}},"selectionRange":{"end":{"character":27,"line":211},"start":{"character":9,"line":211}}}],"kind":5,"name":"MultiFuncShield","range":{"end":{"character":1,"line":212},"start":{"character":0,"line":63}},"selectionRange":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}}},{"kind":13,"name":"MFS","range":{"end":{"character":26,"line":214},"start":{"character":0,"line":214}},"selectionRange":{"end":{"character":26,"line":214},"start":{"character":23,"line":214}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":60,"line":217},"start":{"character":0,"line":217}},"selectionRange":{"end":{"character":20,"line":217},"start":{"character":11,"line":217}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":92,"line":220},"start":{"character":0,"line":220}},"selectionRange":{"end":{"character":20,"line":220},"start":{"character":11,"line":220}}}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":192,"character":10}},"id":429,"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"id":429,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nOffset: 50 bytes  \nSize: 1 byte  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}}}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":200,"character":57}},"id":430,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":430,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":431,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":431,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":17}},"id":432,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":432,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":413},"start":{"character":5,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":20}},"id":433,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":433,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":413},"start":{"character":5,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":17}},"id":434,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":434,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":413},"start":{"character":5,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":23}},"id":435,"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"id":435,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":24}},"id":436,"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"id":436,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":5}},"id":437,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":437,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":12,"line":417},"start":{"character":4,"line":417}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":26}},"id":438,"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"id":438,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":41}},"id":439,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":439,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":413,"character":17}},"id":440,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":440,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":413},"start":{"character":5,"line":413}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":13}},"id":441,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":441,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":8}},"id":442,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":442,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `ledState`  \n\n---\nType: `byte`  \nleast significant bits mapped to LEDs  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte ledState = 0\n```"},"range":{"end":{"character":12,"line":417},"start":{"character":4,"line":417}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":9}},"id":443,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":443,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":9}},"id":444,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":444,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":8}},"id":445,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":445,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":10}},"id":446,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":446,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":14}},"id":447,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":447,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":14}},"id":448,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":448,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":14}},"id":449,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":449,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":418,"character":14}},"id":450,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":450,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":15}},"id":451,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":451,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":417,"character":14}},"id":452,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":452,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":655,"character":9}},"id":453,"jsonrpc":"2.0"}
<<<
Content-Length: 334

{"id":453,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### field `blinkEnabled`  \n\n---\nType: `byte`  \nleast significant bits mapped to display digits.  \n\n---\n```cpp\n// In MultiFuncShield\nprivate: byte blinkEnabled = 0\n```"},"range":{"end":{"character":20,"line":655},"start":{"character":8,"line":655}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":616,"character":23}},"id":454,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":454,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":22}},"id":455,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"id":455,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `WriteValueToSegment`  \n\n---\n→ `void`  \nParameters:  \n- `byte Segment`\n- `byte Value`\n\nWrite a value to one of the 4 digits of the display  \n\n---\n```cpp\nvoid WriteValueToSegment(byte Segment, byte Value)\n```"},"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":684,"character":21}},"id":456,"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"id":456,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ledIdx`  \n\n---\nType: `byte`  \nValue = `0`  \n\n---\n```cpp\n// In MultiFuncShield::isrCallBack\nbyte ledIdx = 0\n```"},"range":{"end":{"character":22,"line":684},"start":{"character":16,"line":684}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":690,"character":28}},"id":457,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":457,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":691,"character":16}},"id":458,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":458,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":691,"character":16}},"id":459,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":459,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `writeLed`  \n\n---\n→ `void`  \nParameters:  \n- `byte ledIdx`\n- `byte value`\n\n---\n```cpp\nvoid writeLed(byte ledIdx, byte value)\n```"},"range":{"end":{"character":20,"line":691},"start":{"character":12,"line":691}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":691,"character":16}},"id":460,"jsonrpc":"2.0"}
<<<
Content-Length: 399

{"id":460,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":1,"range":{"end":{"character":20,"line":691},"start":{"character":12,"line":691}}},{"kind":1,"range":{"end":{"character":20,"line":696},"start":{"character":12,"line":696}}},{"kind":1,"range":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":691,"character":16}},"id":461,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":461,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":27}},"id":462,"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"id":462,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `value`  \n\n---\nType: `byte`  \n\n---\n```cpp\n// In writeLed\nbyte value\n```"},"range":{"end":{"character":30,"line":1220},"start":{"character":25,"line":1220}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":15}},"id":463,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":463,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1220},"start":{"character":15,"line":1220}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":10}},"id":464,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":464,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":16}},"id":465,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":465,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1220},"start":{"character":15,"line":1220}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":9}},"id":466,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":466,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":9}},"id":467,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":467,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":9}},"id":468,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":468,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":9}},"id":469,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":469,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 241

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":11}},"id":470,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":470,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 234

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":11}},"id":471,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":471,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 210

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"id":472,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","version":1}}Content-Length: 8197

{"id":472,"jsonrpc":"2.0","result":[{"kind":12,"name":"yield","range":{"end":{"character":16,"line":37},"start":{"character":0,"line":37}},"selectionRange":{"end":{"character":10,"line":37},"start":{"character":5,"line":37}}},{"kind":5,"name":"word","range":{"end":{"character":25,"line":121},"start":{"character":0,"line":121}},"selectionRange":{"end":{"character":25,"line":121},"start":{"character":21,"line":121}}},{"kind":5,"name":"boolean","range":{"end":{"character":20,"line":125},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":20,"line":125},"start":{"character":13,"line":125}}},{"kind":5,"name":"byte","range":{"end":{"character":20,"line":126},"start":{"character":0,"line":126}},"selectionRange":{"end":{"character":20,"line":126},"start":{"character":16,"line":126}}},{"kind":12,"name":"init","range":{"end":{"character":15,"line":128},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":9,"line":128},"start":{"character":5,"line":128}}},{"kind":12,"name":"initVariant","range":{"end":{"character":22,"line":129},"start":{"character":0,"line":129}},"selectionRange":{"end":{"character":16,"line":129},"start":{"character":5,"line":129}}},{"kind":12,"name":"atexit","range":{"end":{"character":48,"line":131},"start":{"character":0,"line":131}},"selectionRange":{"end":{"character":10,"line":131},"start":{"character":4,"line":131}}},{"kind":12,"name":"pinMode","range":{"end":{"character":39,"line":133},"start":{"character":0,"line":133}},"selectionRange":{"end":{"character":12,"line":133},"start":{"character":5,"line":133}}},{"kind":12,"name":"digitalWrite","range":{"end":{"character":43,"line":134},"start":{"character":0,"line":134}},"selectionRange":{"end":{"character":17,"line":134},"start":{"character":5,"line":134}}},{"kind":12,"name":"digitalRead","range":{"end":{"character":28,"line":135},"start":{"character":0,"line":135}},"selectionRange":{"end":{"character":15,"line":135},"start":{"character":4,"line":135}}},{"kind":12,"name":"analogRead","range":{"end":{"character":27,"line":136},"start":{"character":0,"line":136}},"selectionRange":{"end":{"character":14,"line":136},"start":{"character":4,"line":136}}},{"kind":12,"name":"analogReference","range":{"end":{"character":34,"line":137},"start":{"character":0,"line":137}},"selectionRange":{"end":{"character":20,"line":137},"start":{"character":5,"line":137}}},{"kind":12,"name":"analogWrite","range":{"end":{"character":38,"line":138},"start":{"character":0,"line":138}},"selectionRange":{"end":{"character":16,"line":138},"start":{"character":5,"line":138}}},{"kind":12,"name":"millis","range":{"end":{"character":26,"line":140},"start":{"character":0,"line":140}},"selectionRange":{"end":{"character":20,"line":140},"start":{"character":14,"line":140}}},{"kind":12,"name":"micros","range":{"end":{"character":26,"line":141},"start":{"character":0,"line":141}},"selectionRange":{"end":{"character":20,"line":141},"start":{"character":14,"line":141}}},{"kind":12,"name":"delay","range":{"end":{"character":28,"line":142},"start":{"character":0,"line":142}},"selectionRange":{"end":{"character":10,"line":142},"start":{"character":5,"line":142}}},{"kind":12,"name":"delayMicroseconds","range":{"end":{"character":39,"line":143},"start":{"character":0,"line":143}},"selectionRange":{"end":{"character":22,"line":143},"start":{"character":5,"line":143}}},{"kind":12,"name":"pulseIn","range":{"end":{"character":72,"line":144},"start":{"character":0,"line":144}},"selectionRange":{"end":{"character":21,"line":144},"start":{"character":14,"line":144}}},{"kind":12,"name":"pulseInLong","range":{"end":{"character":76,"line":145},"start":{"character":0,"line":145}},"selectionRange":{"end":{"character":25,"line":145},"start":{"character":14,"line":145}}},{"kind":12,"name":"shiftOut","range":{"end":{"character":79,"line":147},"start":{"character":0,"line":147}},"selectionRange":{"end":{"character":13,"line":147},"start":{"character":5,"line":147}}},{"kind":12,"name":"shiftIn","range":{"end":{"character":68,"line":148},"start":{"character":0,"line":148}},"selectionRange":{"end":{"character":15,"line":148},"start":{"character":8,"line":148}}},{"kind":12,"name":"attachInterrupt","range":{"end":{"character":76,"line":150},"start":{"character":0,"line":150}},"selectionRange":{"end":{"character":20,"line":150},"start":{"character":5,"line":150}}},{"kind":12,"name":"detachInterrupt","range":{"end":{"character":42,"line":151},"start":{"character":0,"line":151}},"selectionRange":{"end":{"character":20,"line":151},"start":{"character":5,"line":151}}},{"kind":12,"name":"setup","range":{"end":{"character":16,"line":153},"start":{"character":0,"line":153}},"selectionRange":{"end":{"character":10,"line":153},"start":{"character":5,"line":153}}},{"kind":12,"name":"loop","range":{"end":{"character":15,"line":154},"start":{"character":0,"line":154}},"selectionRange":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}}},{"kind":13,"name":"port_to_mode_PGM","range":{"end":{"character":48,"line":163},"start":{"character":0,"line":163}},"selectionRange":{"end":{"character":46,"line":163},"start":{"character":30,"line":163}}},{"kind":13,"name":"port_to_input_PGM","range":{"end":{"character":49,"line":164},"start":{"character":0,"line":164}},"selectionRange":{"end":{"character":47,"line":164},"start":{"character":30,"line":164}}},{"kind":13,"name":"port_to_output_PGM","range":{"end":{"character":50,"line":165},"start":{"character":0,"line":165}},"selectionRange":{"end":{"character":48,"line":165},"start":{"character":30,"line":165}}},{"kind":13,"name":"digital_pin_to_port_PGM","range":{"end":{"character":54,"line":167},"start":{"character":0,"line":167}},"selectionRange":{"end":{"character":52,"line":167},"start":{"character":29,"line":167}}},{"kind":13,"name":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":58,"line":169},"start":{"character":0,"line":169}},"selectionRange":{"end":{"character":56,"line":169},"start":{"character":29,"line":169}}},{"kind":13,"name":"digital_pin_to_timer_PGM","range":{"end":{"character":55,"line":170},"start":{"character":0,"line":170}},"selectionRange":{"end":{"character":53,"line":170},"start":{"character":29,"line":170}}},{"kind":12,"name":"makeWord","range":{"end":{"character":29,"line":238},"start":{"character":0,"line":238}},"selectionRange":{"end":{"character":17,"line":238},"start":{"character":9,"line":238}}},{"kind":12,"name":"makeWord","range":{"end":{"character":33,"line":239},"start":{"character":0,"line":239}},"selectionRange":{"end":{"character":17,"line":239},"start":{"character":9,"line":239}}},{"kind":12,"name":"pulseIn","range":{"end":{"character":83,"line":243},"start":{"character":0,"line":243}},"selectionRange":{"end":{"character":21,"line":243},"start":{"character":14,"line":243}}},{"kind":12,"name":"pulseInLong","range":{"end":{"character":87,"line":244},"start":{"character":0,"line":244}},"selectionRange":{"end":{"character":25,"line":244},"start":{"character":14,"line":244}}},{"kind":12,"name":"tone","range":{"end":{"character":75,"line":246},"start":{"character":0,"line":246}},"selectionRange":{"end":{"character":9,"line":246},"start":{"character":5,"line":246}}},{"kind":12,"name":"noTone","range":{"end":{"character":25,"line":247},"start":{"character":0,"line":247}},"selectionRange":{"end":{"character":11,"line":247},"start":{"character":5,"line":247}}},{"kind":12,"name":"random","range":{"end":{"character":17,"line":250},"start":{"character":0,"line":250}},"selectionRange":{"end":{"character":11,"line":250},"start":{"character":5,"line":250}}},{"kind":12,"name":"random","range":{"end":{"character":23,"line":251},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":11,"line":251},"start":{"character":5,"line":251}}},{"kind":12,"name":"randomSeed","range":{"end":{"character":30,"line":252},"start":{"character":0,"line":252}},"selectionRange":{"end":{"character":15,"line":252},"start":{"character":5,"line":252}}},{"kind":12,"name":"map","range":{"end":{"character":38,"line":253},"start":{"character":0,"line":253}},"selectionRange":{"end":{"character":8,"line":253},"start":{"character":5,"line":253}}}]}
>>>
Content-Length: 245

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"},"position":{"line":114,"character":15}},"id":473,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":473,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 240

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"},"position":{"line":114,"character":14}},"id":474,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"id":474,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}}}}
>>>
Content-Length: 240

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"},"position":{"line":114,"character":13}},"id":475,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"id":475,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}}}}
>>>
Content-Length: 240

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"},"position":{"line":114,"character":13}},"id":476,"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"id":476,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}}}}
>>>
Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":477,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":477,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":16}},"id":478,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":478,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1220},"start":{"character":15,"line":1220}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":8}},"id":479,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":479,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":8}},"id":480,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":480,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":9}},"id":481,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":481,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":114},"start":{"character":8,"line":114}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":8}},"id":482,"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"id":482,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `bitWrite`  \n\n---\n```cpp\n#define bitWrite(value, bit, bitvalue)                                         \\\n  ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n```"},"range":{"end":{"character":14,"line":1220},"start":{"character":6,"line":1220}}}}
>>>
Content-Length: 229

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":16}},"id":483,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":483,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":20,"line":1220},"start":{"character":15,"line":1220}}}}
>>>
Content-Length: 241

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":16}},"id":484,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":484,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 234

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1220,"character":16}},"id":485,"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"id":485,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":73},"start":{"character":8,"line":73}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/avr/iom328p.h"}]}
>>>
Content-Length: 22831

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/avr/iom328p.h","languageId":"cpp","version":1,"text":"/* Copyright (c) 2007 Atmel Corporation\r\n   All rights reserved.\r\n\r\n   Redistribution and use in source and binary forms, with or without\r\n   modification, are permitted provided that the following conditions are met:\r\n\r\n   * Redistributions of source code must retain the above copyright\r\n     notice, this list of conditions and the following disclaimer.\r\n\r\n   * Redistributions in binary form must reproduce the above copyright\r\n     notice, this list of conditions and the following disclaimer in\r\n     the documentation and/or other materials provided with the\r\n     distribution.\r\n\r\n   * Neither the name of the copyright holders nor the names of\r\n     contributors may be used to endorse or promote products derived\r\n     from this software without specific prior written permission.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n  POSSIBILITY OF SUCH DAMAGE. \r\n*/\r\n\r\n/* $Id: iom328p.h 2444 2014-08-11 22:10:47Z joerg_wunsch $ */\r\n\r\n/* avr/iom328p.h - definitions for ATmega328P. */\r\n\r\n/* This file should only be included from \u003cavr/io.h\u003e, never directly. */\r\n\r\n#ifndef _AVR_IO_H_\r\n#  error \"Include \u003cavr/io.h\u003e instead of this file.\"\r\n#endif\r\n\r\n#ifndef _AVR_IOXXX_H_\r\n#  define _AVR_IOXXX_H_ \"iom328p.h\"\r\n#else\r\n#  error \"Attempt to include more than one \u003cavr/ioXXX.h\u003e file.\"\r\n#endif \r\n\r\n\r\n#ifndef _AVR_IOM328P_H_\r\n#define _AVR_IOM328P_H_ 1\r\n\r\n/* Registers and associated bit numbers */\r\n\r\n#define PINB _SFR_IO8(0x03)\r\n#define PINB0 0\r\n#define PINB1 1\r\n#define PINB2 2\r\n#define PINB3 3\r\n#define PINB4 4\r\n#define PINB5 5\r\n#define PINB6 6\r\n#define PINB7 7\r\n\r\n#define DDRB _SFR_IO8(0x04)\r\n#define DDB0 0\r\n#define DDB1 1\r\n#define DDB2 2\r\n#define DDB3 3\r\n#define DDB4 4\r\n#define DDB5 5\r\n#define DDB6 6\r\n#define DDB7 7\r\n\r\n#define PORTB _SFR_IO8(0x05)\r\n#define PORTB0 0\r\n#define PORTB1 1\r\n#define PORTB2 2\r\n#define PORTB3 3\r\n#define PORTB4 4\r\n#define PORTB5 5\r\n#define PORTB6 6\r\n#define PORTB7 7\r\n\r\n#define PINC _SFR_IO8(0x06)\r\n#define PINC0 0\r\n#define PINC1 1\r\n#define PINC2 2\r\n#define PINC3 3\r\n#define PINC4 4\r\n#define PINC5 5\r\n#define PINC6 6\r\n\r\n#define DDRC _SFR_IO8(0x07)\r\n#define DDC0 0\r\n#define DDC1 1\r\n#define DDC2 2\r\n#define DDC3 3\r\n#define DDC4 4\r\n#define DDC5 5\r\n#define DDC6 6\r\n\r\n#define PORTC _SFR_IO8(0x08)\r\n#define PORTC0 0\r\n#define PORTC1 1\r\n#define PORTC2 2\r\n#define PORTC3 3\r\n#define PORTC4 4\r\n#define PORTC5 5\r\n#define PORTC6 6\r\n\r\n#define PIND _SFR_IO8(0x09)\r\n#define PIND0 0\r\n#define PIND1 1\r\n#define PIND2 2\r\n#define PIND3 3\r\n#define PIND4 4\r\n#define PIND5 5\r\n#define PIND6 6\r\n#define PIND7 7\r\n\r\n#define DDRD _SFR_IO8(0x0A)\r\n#define DDD0 0\r\n#define DDD1 1\r\n#define DDD2 2\r\n#define DDD3 3\r\n#define DDD4 4\r\n#define DDD5 5\r\n#define DDD6 6\r\n#define DDD7 7\r\n\r\n#define PORTD _SFR_IO8(0x0B)\r\n#define PORTD0 0\r\n#define PORTD1 1\r\n#define PORTD2 2\r\n#define PORTD3 3\r\n#define PORTD4 4\r\n#define PORTD5 5\r\n#define PORTD6 6\r\n#define PORTD7 7\r\n\r\n#define TIFR0 _SFR_IO8(0x15)\r\n#define TOV0 0\r\n#define OCF0A 1\r\n#define OCF0B 2\r\n\r\n#define TIFR1 _SFR_IO8(0x16)\r\n#define TOV1 0\r\n#define OCF1A 1\r\n#define OCF1B 2\r\n#define ICF1 5\r\n\r\n#define TIFR2 _SFR_IO8(0x17)\r\n#define TOV2 0\r\n#define OCF2A 1\r\n#define OCF2B 2\r\n\r\n#define PCIFR _SFR_IO8(0x1B)\r\n#define PCIF0 0\r\n#define PCIF1 1\r\n#define PCIF2 2\r\n\r\n#define EIFR _SFR_IO8(0x1C)\r\n#define INTF0 0\r\n#define INTF1 1\r\n\r\n#define EIMSK _SFR_IO8(0x1D)\r\n#define INT0 0\r\n#define INT1 1\r\n\r\n#define GPIOR0 _SFR_IO8(0x1E)\r\n#define GPIOR00 0\r\n#define GPIOR01 1\r\n#define GPIOR02 2\r\n#define GPIOR03 3\r\n#define GPIOR04 4\r\n#define GPIOR05 5\r\n#define GPIOR06 6\r\n#define GPIOR07 7\r\n\r\n#define EECR _SFR_IO8(0x1F)\r\n#define EERE 0\r\n#define EEPE 1\r\n#define EEMPE 2\r\n#define EERIE 3\r\n#define EEPM0 4\r\n#define EEPM1 5\r\n\r\n#define EEDR _SFR_IO8(0x20)\r\n#define EEDR0 0\r\n#define EEDR1 1\r\n#define EEDR2 2\r\n#define EEDR3 3\r\n#define EEDR4 4\r\n#define EEDR5 5\r\n#define EEDR6 6\r\n#define EEDR7 7\r\n\r\n#define EEAR _SFR_IO16(0x21)\r\n\r\n#define EEARL _SFR_IO8(0x21)\r\n#define EEAR0 0\r\n#define EEAR1 1\r\n#define EEAR2 2\r\n#define EEAR3 3\r\n#define EEAR4 4\r\n#define EEAR5 5\r\n#define EEAR6 6\r\n#define EEAR7 7\r\n\r\n#define EEARH _SFR_IO8(0x22)\r\n#define EEAR8 0\r\n#define EEAR9 1\r\n\r\n#define _EEPROM_REG_LOCATIONS_ 1F2021\r\n\r\n#define GTCCR _SFR_IO8(0x23)\r\n#define PSRSYNC 0\r\n#define PSRASY 1\r\n#define TSM 7\r\n\r\n#define TCCR0A _SFR_IO8(0x24)\r\n#define WGM00 0\r\n#define WGM01 1\r\n#define COM0B0 4\r\n#define COM0B1 5\r\n#define COM0A0 6\r\n#define COM0A1 7\r\n\r\n#define TCCR0B _SFR_IO8(0x25)\r\n#define CS00 0\r\n#define CS01 1\r\n#define CS02 2\r\n#define WGM02 3\r\n#define FOC0B 6\r\n#define FOC0A 7\r\n\r\n#define TCNT0 _SFR_IO8(0x26)\r\n#define TCNT0_0 0\r\n#define TCNT0_1 1\r\n#define TCNT0_2 2\r\n#define TCNT0_3 3\r\n#define TCNT0_4 4\r\n#define TCNT0_5 5\r\n#define TCNT0_6 6\r\n#define TCNT0_7 7\r\n\r\n#define OCR0A _SFR_IO8(0x27)\r\n#define OCR0A_0 0\r\n#define OCR0A_1 1\r\n#define OCR0A_2 2\r\n#define OCR0A_3 3\r\n#define OCR0A_4 4\r\n#define OCR0A_5 5\r\n#define OCR0A_6 6\r\n#define OCR0A_7 7\r\n\r\n#define OCR0B _SFR_IO8(0x28)\r\n#define OCR0B_0 0\r\n#define OCR0B_1 1\r\n#define OCR0B_2 2\r\n#define OCR0B_3 3\r\n#define OCR0B_4 4\r\n#define OCR0B_5 5\r\n#define OCR0B_6 6\r\n#define OCR0B_7 7\r\n\r\n#define GPIOR1 _SFR_IO8(0x2A)\r\n#define GPIOR10 0\r\n#define GPIOR11 1\r\n#define GPIOR12 2\r\n#define GPIOR13 3\r\n#define GPIOR14 4\r\n#define GPIOR15 5\r\n#define GPIOR16 6\r\n#define GPIOR17 7\r\n\r\n#define GPIOR2 _SFR_IO8(0x2B)\r\n#define GPIOR20 0\r\n#define GPIOR21 1\r\n#define GPIOR22 2\r\n#define GPIOR23 3\r\n#define GPIOR24 4\r\n#define GPIOR25 5\r\n#define GPIOR26 6\r\n#define GPIOR27 7\r\n\r\n#define SPCR _SFR_IO8(0x2C)\r\n#define SPR0 0\r\n#define SPR1 1\r\n#define CPHA 2\r\n#define CPOL 3\r\n#define MSTR 4\r\n#define DORD 5\r\n#define SPE 6\r\n#define SPIE 7\r\n\r\n#define SPSR _SFR_IO8(0x2D)\r\n#define SPI2X 0\r\n#define WCOL 6\r\n#define SPIF 7\r\n\r\n#define SPDR _SFR_IO8(0x2E)\r\n#define SPDR0 0\r\n#define SPDR1 1\r\n#define SPDR2 2\r\n#define SPDR3 3\r\n#define SPDR4 4\r\n#define SPDR5 5\r\n#define SPDR6 6\r\n#define SPDR7 7\r\n\r\n#define ACSR _SFR_IO8(0x30)\r\n#define ACIS0 0\r\n#define ACIS1 1\r\n#define ACIC 2\r\n#define ACIE 3\r\n#define ACI 4\r\n#define ACO 5\r\n#define ACBG 6\r\n#define ACD 7\r\n\r\n#define SMCR _SFR_IO8(0x33)\r\n#define SE 0\r\n#define SM0 1\r\n#define SM1 2\r\n#define SM2 3\r\n\r\n#define MCUSR _SFR_IO8(0x34)\r\n#define PORF 0\r\n#define EXTRF 1\r\n#define BORF 2\r\n#define WDRF 3\r\n\r\n#define MCUCR _SFR_IO8(0x35)\r\n#define IVCE 0\r\n#define IVSEL 1\r\n#define PUD 4\r\n#define BODSE 5\r\n#define BODS 6\r\n\r\n#define SPMCSR _SFR_IO8(0x37)\r\n#define SELFPRGEN 0 /* only for backwards compatibility with previous\r\n\t\t     * avr-libc versions; not an official name */\r\n#define SPMEN 0\r\n#define PGERS 1\r\n#define PGWRT 2\r\n#define BLBSET 3\r\n#define RWWSRE 4\r\n#define SIGRD 5\r\n#define RWWSB 6\r\n#define SPMIE 7\r\n\r\n#define WDTCSR _SFR_MEM8(0x60)\r\n#define WDP0 0\r\n#define WDP1 1\r\n#define WDP2 2\r\n#define WDE 3\r\n#define WDCE 4\r\n#define WDP3 5\r\n#define WDIE 6\r\n#define WDIF 7\r\n\r\n#define CLKPR _SFR_MEM8(0x61)\r\n#define CLKPS0 0\r\n#define CLKPS1 1\r\n#define CLKPS2 2\r\n#define CLKPS3 3\r\n#define CLKPCE 7\r\n\r\n#define PRR _SFR_MEM8(0x64)\r\n#define PRADC 0\r\n#define PRUSART0 1\r\n#define PRSPI 2\r\n#define PRTIM1 3\r\n#define PRTIM0 5\r\n#define PRTIM2 6\r\n#define PRTWI 7\r\n\r\n#define __AVR_HAVE_PRR\t((1\u003c\u003cPRADC)|(1\u003c\u003cPRUSART0)|(1\u003c\u003cPRSPI)|(1\u003c\u003cPRTIM1)|(1\u003c\u003cPRTIM0)|(1\u003c\u003cPRTIM2)|(1\u003c\u003cPRTWI))\r\n#define __AVR_HAVE_PRR_PRADC\r\n#define __AVR_HAVE_PRR_PRUSART0\r\n#define __AVR_HAVE_PRR_PRSPI\r\n#define __AVR_HAVE_PRR_PRTIM1\r\n#define __AVR_HAVE_PRR_PRTIM0\r\n#define __AVR_HAVE_PRR_PRTIM2\r\n#define __AVR_HAVE_PRR_PRTWI\r\n\r\n#define OSCCAL _SFR_MEM8(0x66)\r\n#define CAL0 0\r\n#define CAL1 1\r\n#define CAL2 2\r\n#define CAL3 3\r\n#define CAL4 4\r\n#define CAL5 5\r\n#define CAL6 6\r\n#define CAL7 7\r\n\r\n#define PCICR _SFR_MEM8(0x68)\r\n#define PCIE0 0\r\n#define PCIE1 1\r\n#define PCIE2 2\r\n\r\n#define EICRA _SFR_MEM8(0x69)\r\n#define ISC00 0\r\n#define ISC01 1\r\n#define ISC10 2\r\n#define ISC11 3\r\n\r\n#define PCMSK0 _SFR_MEM8(0x6B)\r\n#define PCINT0 0\r\n#define PCINT1 1\r\n#define PCINT2 2\r\n#define PCINT3 3\r\n#define PCINT4 4\r\n#define PCINT5 5\r\n#define PCINT6 6\r\n#define PCINT7 7\r\n\r\n#define PCMSK1 _SFR_MEM8(0x6C)\r\n#define PCINT8 0\r\n#define PCINT9 1\r\n#define PCINT10 2\r\n#define PCINT11 3\r\n#define PCINT12 4\r\n#define PCINT13 5\r\n#define PCINT14 6\r\n\r\n#define PCMSK2 _SFR_MEM8(0x6D)\r\n#define PCINT16 0\r\n#define PCINT17 1\r\n#define PCINT18 2\r\n#define PCINT19 3\r\n#define PCINT20 4\r\n#define PCINT21 5\r\n#define PCINT22 6\r\n#define PCINT23 7\r\n\r\n#define TIMSK0 _SFR_MEM8(0x6E)\r\n#define TOIE0 0\r\n#define OCIE0A 1\r\n#define OCIE0B 2\r\n\r\n#define TIMSK1 _SFR_MEM8(0x6F)\r\n#define TOIE1 0\r\n#define OCIE1A 1\r\n#define OCIE1B 2\r\n#define ICIE1 5\r\n\r\n#define TIMSK2 _SFR_MEM8(0x70)\r\n#define TOIE2 0\r\n#define OCIE2A 1\r\n#define OCIE2B 2\r\n\r\n#ifndef __ASSEMBLER__\r\n#define ADC     _SFR_MEM16(0x78)\r\n#endif\r\n#define ADCW    _SFR_MEM16(0x78)\r\n\r\n#define ADCL _SFR_MEM8(0x78)\r\n#define ADCL0 0\r\n#define ADCL1 1\r\n#define ADCL2 2\r\n#define ADCL3 3\r\n#define ADCL4 4\r\n#define ADCL5 5\r\n#define ADCL6 6\r\n#define ADCL7 7\r\n\r\n#define ADCH _SFR_MEM8(0x79)\r\n#define ADCH0 0\r\n#define ADCH1 1\r\n#define ADCH2 2\r\n#define ADCH3 3\r\n#define ADCH4 4\r\n#define ADCH5 5\r\n#define ADCH6 6\r\n#define ADCH7 7\r\n\r\n#define ADCSRA _SFR_MEM8(0x7A)\r\n#define ADPS0 0\r\n#define ADPS1 1\r\n#define ADPS2 2\r\n#define ADIE 3\r\n#define ADIF 4\r\n#define ADATE 5\r\n#define ADSC 6\r\n#define ADEN 7\r\n\r\n#define ADCSRB _SFR_MEM8(0x7B)\r\n#define ADTS0 0\r\n#define ADTS1 1\r\n#define ADTS2 2\r\n#define ACME 6\r\n\r\n#define ADMUX _SFR_MEM8(0x7C)\r\n#define MUX0 0\r\n#define MUX1 1\r\n#define MUX2 2\r\n#define MUX3 3\r\n#define ADLAR 5\r\n#define REFS0 6\r\n#define REFS1 7\r\n\r\n#define DIDR0 _SFR_MEM8(0x7E)\r\n#define ADC0D 0\r\n#define ADC1D 1\r\n#define ADC2D 2\r\n#define ADC3D 3\r\n#define ADC4D 4\r\n#define ADC5D 5\r\n\r\n#define DIDR1 _SFR_MEM8(0x7F)\r\n#define AIN0D 0\r\n#define AIN1D 1\r\n\r\n#define TCCR1A _SFR_MEM8(0x80)\r\n#define WGM10 0\r\n#define WGM11 1\r\n#define COM1B0 4\r\n#define COM1B1 5\r\n#define COM1A0 6\r\n#define COM1A1 7\r\n\r\n#define TCCR1B _SFR_MEM8(0x81)\r\n#define CS10 0\r\n#define CS11 1\r\n#define CS12 2\r\n#define WGM12 3\r\n#define WGM13 4\r\n#define ICES1 6\r\n#define ICNC1 7\r\n\r\n#define TCCR1C _SFR_MEM8(0x82)\r\n#define FOC1B 6\r\n#define FOC1A 7\r\n\r\n#define TCNT1 _SFR_MEM16(0x84)\r\n\r\n#define TCNT1L _SFR_MEM8(0x84)\r\n#define TCNT1L0 0\r\n#define TCNT1L1 1\r\n#define TCNT1L2 2\r\n#define TCNT1L3 3\r\n#define TCNT1L4 4\r\n#define TCNT1L5 5\r\n#define TCNT1L6 6\r\n#define TCNT1L7 7\r\n\r\n#define TCNT1H _SFR_MEM8(0x85)\r\n#define TCNT1H0 0\r\n#define TCNT1H1 1\r\n#define TCNT1H2 2\r\n#define TCNT1H3 3\r\n#define TCNT1H4 4\r\n#define TCNT1H5 5\r\n#define TCNT1H6 6\r\n#define TCNT1H7 7\r\n\r\n#define ICR1 _SFR_MEM16(0x86)\r\n\r\n#define ICR1L _SFR_MEM8(0x86)\r\n#define ICR1L0 0\r\n#define ICR1L1 1\r\n#define ICR1L2 2\r\n#define ICR1L3 3\r\n#define ICR1L4 4\r\n#define ICR1L5 5\r\n#define ICR1L6 6\r\n#define ICR1L7 7\r\n\r\n#define ICR1H _SFR_MEM8(0x87)\r\n#define ICR1H0 0\r\n#define ICR1H1 1\r\n#define ICR1H2 2\r\n#define ICR1H3 3\r\n#define ICR1H4 4\r\n#define ICR1H5 5\r\n#define ICR1H6 6\r\n#define ICR1H7 7\r\n\r\n#define OCR1A _SFR_MEM16(0x88)\r\n\r\n#define OCR1AL _SFR_MEM8(0x88)\r\n#define OCR1AL0 0\r\n#define OCR1AL1 1\r\n#define OCR1AL2 2\r\n#define OCR1AL3 3\r\n#define OCR1AL4 4\r\n#define OCR1AL5 5\r\n#define OCR1AL6 6\r\n#define OCR1AL7 7\r\n\r\n#define OCR1AH _SFR_MEM8(0x89)\r\n#define OCR1AH0 0\r\n#define OCR1AH1 1\r\n#define OCR1AH2 2\r\n#define OCR1AH3 3\r\n#define OCR1AH4 4\r\n#define OCR1AH5 5\r\n#define OCR1AH6 6\r\n#define OCR1AH7 7\r\n\r\n#define OCR1B _SFR_MEM16(0x8A)\r\n\r\n#define OCR1BL _SFR_MEM8(0x8A)\r\n#define OCR1BL0 0\r\n#define OCR1BL1 1\r\n#define OCR1BL2 2\r\n#define OCR1BL3 3\r\n#define OCR1BL4 4\r\n#define OCR1BL5 5\r\n#define OCR1BL6 6\r\n#define OCR1BL7 7\r\n\r\n#define OCR1BH _SFR_MEM8(0x8B)\r\n#define OCR1BH0 0\r\n#define OCR1BH1 1\r\n#define OCR1BH2 2\r\n#define OCR1BH3 3\r\n#define OCR1BH4 4\r\n#define OCR1BH5 5\r\n#define OCR1BH6 6\r\n#define OCR1BH7 7\r\n\r\n#define TCCR2A _SFR_MEM8(0xB0)\r\n#define WGM20 0\r\n#define WGM21 1\r\n#define COM2B0 4\r\n#define COM2B1 5\r\n#define COM2A0 6\r\n#define COM2A1 7\r\n\r\n#define TCCR2B _SFR_MEM8(0xB1)\r\n#define CS20 0\r\n#define CS21 1\r\n#define CS22 2\r\n#define WGM22 3\r\n#define FOC2B 6\r\n#define FOC2A 7\r\n\r\n#define TCNT2 _SFR_MEM8(0xB2)\r\n#define TCNT2_0 0\r\n#define TCNT2_1 1\r\n#define TCNT2_2 2\r\n#define TCNT2_3 3\r\n#define TCNT2_4 4\r\n#define TCNT2_5 5\r\n#define TCNT2_6 6\r\n#define TCNT2_7 7\r\n\r\n#define OCR2A _SFR_MEM8(0xB3)\r\n#define OCR2_0 0\r\n#define OCR2_1 1\r\n#define OCR2_2 2\r\n#define OCR2_3 3\r\n#define OCR2_4 4\r\n#define OCR2_5 5\r\n#define OCR2_6 6\r\n#define OCR2_7 7\r\n\r\n#define OCR2B _SFR_MEM8(0xB4)\r\n#define OCR2_0 0\r\n#define OCR2_1 1\r\n#define OCR2_2 2\r\n#define OCR2_3 3\r\n#define OCR2_4 4\r\n#define OCR2_5 5\r\n#define OCR2_6 6\r\n#define OCR2_7 7\r\n\r\n#define ASSR _SFR_MEM8(0xB6)\r\n#define TCR2BUB 0\r\n#define TCR2AUB 1\r\n#define OCR2BUB 2\r\n#define OCR2AUB 3\r\n#define TCN2UB 4\r\n#define AS2 5\r\n#define EXCLK 6\r\n\r\n#define TWBR _SFR_MEM8(0xB8)\r\n#define TWBR0 0\r\n#define TWBR1 1\r\n#define TWBR2 2\r\n#define TWBR3 3\r\n#define TWBR4 4\r\n#define TWBR5 5\r\n#define TWBR6 6\r\n#define TWBR7 7\r\n\r\n#define TWSR _SFR_MEM8(0xB9)\r\n#define TWPS0 0\r\n#define TWPS1 1\r\n#define TWS3 3\r\n#define TWS4 4\r\n#define TWS5 5\r\n#define TWS6 6\r\n#define TWS7 7\r\n\r\n#define TWAR _SFR_MEM8(0xBA)\r\n#define TWGCE 0\r\n#define TWA0 1\r\n#define TWA1 2\r\n#define TWA2 3\r\n#define TWA3 4\r\n#define TWA4 5\r\n#define TWA5 6\r\n#define TWA6 7\r\n\r\n#define TWDR _SFR_MEM8(0xBB)\r\n#define TWD0 0\r\n#define TWD1 1\r\n#define TWD2 2\r\n#define TWD3 3\r\n#define TWD4 4\r\n#define TWD5 5\r\n#define TWD6 6\r\n#define TWD7 7\r\n\r\n#define TWCR _SFR_MEM8(0xBC)\r\n#define TWIE 0\r\n#define TWEN 2\r\n#define TWWC 3\r\n#define TWSTO 4\r\n#define TWSTA 5\r\n#define TWEA 6\r\n#define TWINT 7\r\n\r\n#define TWAMR _SFR_MEM8(0xBD)\r\n#define TWAM0 0\r\n#define TWAM1 1\r\n#define TWAM2 2\r\n#define TWAM3 3\r\n#define TWAM4 4\r\n#define TWAM5 5\r\n#define TWAM6 6\r\n\r\n#define UCSR0A _SFR_MEM8(0xC0)\r\n#define MPCM0 0\r\n#define U2X0 1\r\n#define UPE0 2\r\n#define DOR0 3\r\n#define FE0 4\r\n#define UDRE0 5\r\n#define TXC0 6\r\n#define RXC0 7\r\n\r\n#define UCSR0B _SFR_MEM8(0xC1)\r\n#define TXB80 0\r\n#define RXB80 1\r\n#define UCSZ02 2\r\n#define TXEN0 3\r\n#define RXEN0 4\r\n#define UDRIE0 5\r\n#define TXCIE0 6\r\n#define RXCIE0 7\r\n\r\n#define UCSR0C _SFR_MEM8(0xC2)\r\n#define UCPOL0 0\r\n#define UCSZ00 1\r\n#define UCPHA0 1\r\n#define UCSZ01 2\r\n#define UDORD0 2\r\n#define USBS0 3\r\n#define UPM00 4\r\n#define UPM01 5\r\n#define UMSEL00 6\r\n#define UMSEL01 7\r\n\r\n#define UBRR0 _SFR_MEM16(0xC4)\r\n\r\n#define UBRR0L _SFR_MEM8(0xC4)\r\n#define UBRR0_0 0\r\n#define UBRR0_1 1\r\n#define UBRR0_2 2\r\n#define UBRR0_3 3\r\n#define UBRR0_4 4\r\n#define UBRR0_5 5\r\n#define UBRR0_6 6\r\n#define UBRR0_7 7\r\n\r\n#define UBRR0H _SFR_MEM8(0xC5)\r\n#define UBRR0_8 0\r\n#define UBRR0_9 1\r\n#define UBRR0_10 2\r\n#define UBRR0_11 3\r\n\r\n#define UDR0 _SFR_MEM8(0xC6)\r\n#define UDR0_0 0\r\n#define UDR0_1 1\r\n#define UDR0_2 2\r\n#define UDR0_3 3\r\n#define UDR0_4 4\r\n#define UDR0_5 5\r\n#define UDR0_6 6\r\n#define UDR0_7 7\r\n\r\n\r\n\r\n/* Interrupt Vectors */\r\n/* Interrupt Vector 0 is the reset vector. */\r\n\r\n#define INT0_vect_num     1\r\n#define INT0_vect         _VECTOR(1)   /* External Interrupt Request 0 */\r\n\r\n#define INT1_vect_num     2\r\n#define INT1_vect         _VECTOR(2)   /* External Interrupt Request 1 */\r\n\r\n#define PCINT0_vect_num   3\r\n#define PCINT0_vect       _VECTOR(3)   /* Pin Change Interrupt Request 0 */\r\n\r\n#define PCINT1_vect_num   4\r\n#define PCINT1_vect       _VECTOR(4)   /* Pin Change Interrupt Request 0 */\r\n\r\n#define PCINT2_vect_num   5\r\n#define PCINT2_vect       _VECTOR(5)   /* Pin Change Interrupt Request 1 */\r\n\r\n#define WDT_vect_num      6\r\n#define WDT_vect          _VECTOR(6)   /* Watchdog Time-out Interrupt */\r\n\r\n#define TIMER2_COMPA_vect_num 7\r\n#define TIMER2_COMPA_vect _VECTOR(7)   /* Timer/Counter2 Compare Match A */\r\n\r\n#define TIMER2_COMPB_vect_num 8\r\n#define TIMER2_COMPB_vect _VECTOR(8)   /* Timer/Counter2 Compare Match A */\r\n\r\n#define TIMER2_OVF_vect_num   9\r\n#define TIMER2_OVF_vect   _VECTOR(9)   /* Timer/Counter2 Overflow */\r\n\r\n#define TIMER1_CAPT_vect_num  10\r\n#define TIMER1_CAPT_vect  _VECTOR(10)  /* Timer/Counter1 Capture Event */\r\n\r\n#define TIMER1_COMPA_vect_num 11\r\n#define TIMER1_COMPA_vect _VECTOR(11)  /* Timer/Counter1 Compare Match A */\r\n\r\n#define TIMER1_COMPB_vect_num 12\r\n#define TIMER1_COMPB_vect _VECTOR(12)  /* Timer/Counter1 Compare Match B */ \r\n\r\n#define TIMER1_OVF_vect_num   13\r\n#define TIMER1_OVF_vect   _VECTOR(13)  /* Timer/Counter1 Overflow */\r\n\r\n#define TIMER0_COMPA_vect_num 14\r\n#define TIMER0_COMPA_vect _VECTOR(14)  /* TimerCounter0 Compare Match A */\r\n\r\n#define TIMER0_COMPB_vect_num 15\r\n#define TIMER0_COMPB_vect _VECTOR(15)  /* TimerCounter0 Compare Match B */\r\n\r\n#define TIMER0_OVF_vect_num  16\r\n#define TIMER0_OVF_vect   _VECTOR(16)  /* Timer/Couner0 Overflow */\r\n\r\n#define SPI_STC_vect_num  17\r\n#define SPI_STC_vect      _VECTOR(17)  /* SPI Serial Transfer Complete */\r\n\r\n#define USART_RX_vect_num 18\r\n#define USART_RX_vect     _VECTOR(18)  /* USART Rx Complete */\r\n\r\n#define USART_UDRE_vect_num   19\r\n#define USART_UDRE_vect   _VECTOR(19)  /* USART, Data Register Empty */\r\n\r\n#define USART_TX_vect_num 20\r\n#define USART_TX_vect     _VECTOR(20)  /* USART Tx Complete */\r\n\r\n#define ADC_vect_num      21\r\n#define ADC_vect          _VECTOR(21)  /* ADC Conversion Complete */\r\n\r\n#define EE_READY_vect_num 22\r\n#define EE_READY_vect     _VECTOR(22)  /* EEPROM Ready */\r\n\r\n#define ANALOG_COMP_vect_num  23\r\n#define ANALOG_COMP_vect  _VECTOR(23)  /* Analog Comparator */\r\n\r\n#define TWI_vect_num      24\r\n#define TWI_vect          _VECTOR(24)  /* Two-wire Serial Interface */\r\n\r\n#define SPM_READY_vect_num    25\r\n#define SPM_READY_vect    _VECTOR(25)  /* Store Program Memory Read */\r\n\r\n#define _VECTORS_SIZE (26 * 4)\r\n\r\n\r\n\r\n/* Constants */\r\n#define SPM_PAGESIZE 128\r\n#define RAMSTART     (0x100)\r\n#define RAMEND       0x8FF     /* Last On-Chip SRAM Location */\r\n#define XRAMSIZE     0\r\n#define XRAMEND      RAMEND\r\n#define E2END        0x3FF\r\n#define E2PAGESIZE   4\r\n#define FLASHEND     0x7FFF\r\n\r\n\r\n\r\n/* Fuses */\r\n#define FUSE_MEMORY_SIZE 3\r\n\r\n/* Low Fuse Byte */\r\n#define FUSE_CKSEL0 (unsigned char)~_BV(0)  /* Select Clock Source */\r\n#define FUSE_CKSEL1 (unsigned char)~_BV(1)  /* Select Clock Source */\r\n#define FUSE_CKSEL2 (unsigned char)~_BV(2)  /* Select Clock Source */\r\n#define FUSE_CKSEL3 (unsigned char)~_BV(3)  /* Select Clock Source */\r\n#define FUSE_SUT0   (unsigned char)~_BV(4)  /* Select start-up time */\r\n#define FUSE_SUT1   (unsigned char)~_BV(5)  /* Select start-up time */\r\n#define FUSE_CKOUT  (unsigned char)~_BV(6)  /* Clock output */\r\n#define FUSE_CKDIV8 (unsigned char)~_BV(7) /* Divide clock by 8 */\r\n#define LFUSE_DEFAULT (FUSE_CKSEL0 \u0026 FUSE_CKSEL2 \u0026 FUSE_CKSEL3 \u0026 FUSE_SUT0 \u0026 FUSE_CKDIV8)\r\n\r\n/* High Fuse Byte */\r\n#define FUSE_BOOTRST (unsigned char)~_BV(0)\r\n#define FUSE_BOOTSZ0 (unsigned char)~_BV(1)\r\n#define FUSE_BOOTSZ1 (unsigned char)~_BV(2)\r\n#define FUSE_EESAVE    (unsigned char)~_BV(3)  /* EEPROM memory is preserved through chip erase */\r\n#define FUSE_WDTON     (unsigned char)~_BV(4)  /* Watchdog Timer Always On */\r\n#define FUSE_SPIEN     (unsigned char)~_BV(5)  /* Enable Serial programming and Data Downloading */\r\n#define FUSE_DWEN      (unsigned char)~_BV(6)  /* debugWIRE Enable */\r\n#define FUSE_RSTDISBL  (unsigned char)~_BV(7)  /* External reset disable */\r\n#define HFUSE_DEFAULT (FUSE_BOOTSZ0 \u0026 FUSE_BOOTSZ1 \u0026 FUSE_SPIEN)\r\n\r\n/* Extended Fuse Byte */\r\n#define FUSE_BODLEVEL0 (unsigned char)~_BV(0)  /* Brown-out Detector trigger level */\r\n#define FUSE_BODLEVEL1 (unsigned char)~_BV(1)  /* Brown-out Detector trigger level */\r\n#define FUSE_BODLEVEL2 (unsigned char)~_BV(2)  /* Brown-out Detector trigger level */\r\n#define EFUSE_DEFAULT  (0xFF)\r\n\r\n\r\n\r\n/* Lock Bits */\r\n#define __LOCK_BITS_EXIST\r\n#define __BOOT_LOCK_BITS_0_EXIST\r\n#define __BOOT_LOCK_BITS_1_EXIST \r\n\r\n\r\n/* Signature */\r\n#define SIGNATURE_0 0x1E\r\n#define SIGNATURE_1 0x95\r\n#if defined(__AVR_ATmega328__)\r\n#  define SIGNATURE_2 0x14\r\n#else /* ATmega328P */\r\n#  define SIGNATURE_2 0x0F\r\n#endif\r\n\r\n#define SLEEP_MODE_IDLE (0x00\u003c\u003c1)\r\n#define SLEEP_MODE_ADC (0x01\u003c\u003c1)\r\n#define SLEEP_MODE_PWR_DOWN (0x02\u003c\u003c1)\r\n#define SLEEP_MODE_PWR_SAVE (0x03\u003c\u003c1)\r\n#define SLEEP_MODE_STANDBY (0x06\u003c\u003c1)\r\n#define SLEEP_MODE_EXT_STANDBY (0x07\u003c\u003c1)\r\n\r\n#endif  /* _AVR_IOM328P_H_ */\r\n"}},"jsonrpc":"2.0"}Content-Length: 218

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/avr/iom328p.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/avr/iom328p.h"}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":486,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":486,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":31},"end":{"line":17,"character":31}},"context":{"diagnostics":[]}},"id":487,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":487,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":151},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":0}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":488,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":488,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'S'","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":151}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":152},"contentChanges":[{"range":{"start":{"line":16,"character":1},"end":{"line":16,"character":1}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":489,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":489,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 587

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Se'","range":{"end":{"character":2,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":152}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":153},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":406},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":490,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":490,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 588

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Ser'","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":153}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":154},"contentChanges":[{"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":491,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":491,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 589

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Seri'","range":{"end":{"character":4,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":17},"start":{"character":7,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":154}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":155},"contentChanges":[{"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":4}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":408},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":492,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":492,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 805

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'Seria'; did you mean 'Serial'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:143:25:\nnote: 'Serial' declared here","range":{"end":{"character":5,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":155}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":156},"contentChanges":[{"range":{"start":{"line":16,"character":5},"end":{"line":16,"character":5}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":409},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":493,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":494,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":493,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":156}}Content-Length: 783

{"id":494,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":495,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":495,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":157},"contentChanges":[{"range":{"start":{"line":16,"character":6},"end":{"line":16,"character":6}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":7},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":496,"jsonrpc":"2.0"}
<<<
Content-Length: 7849

{"id":496,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"[2 overloads]","filterText":"begin","insertText":"begin($0)","insertTextFormat":2,"kind":2,"label":" begin(…)","score":14.520001411437988,"sortText":"3e97ae13begin","textEdit":{"newText":"begin($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"_rx_complete_irq","insertText":"_rx_complete_irq()","insertTextFormat":2,"kind":2,"label":" _rx_complete_irq()","score":9.6800003051757812,"sortText":"3ee51eb8_rx_complete_irq","textEdit":{"newText":"_rx_complete_irq()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"_tx_udr_empty_irq","insertText":"_tx_udr_empty_irq()","insertTextFormat":2,"kind":2,"label":" _tx_udr_empty_irq()","score":9.6800003051757812,"sortText":"3ee51eb8_tx_udr_empty_irq","textEdit":{"newText":"_tx_udr_empty_irq()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"int","filterText":"available","insertText":"available()","insertTextFormat":2,"kind":2,"label":" available()","score":9.6800003051757812,"sortText":"3ee51eb8available","textEdit":{"newText":"available()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"int","filterText":"availableForWrite","insertText":"availableForWrite()","insertTextFormat":2,"kind":2,"label":" availableForWrite()","score":9.6800003051757812,"sortText":"3ee51eb8availableForWrite","textEdit":{"newText":"availableForWrite()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"end","insertText":"end()","insertTextFormat":2,"kind":2,"label":" end()","score":9.6800003051757812,"sortText":"3ee51eb8end","textEdit":{"newText":"end()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"flush","insertText":"flush()","insertTextFormat":2,"kind":2,"label":" flush()","score":9.6800003051757812,"sortText":"3ee51eb8flush","textEdit":{"newText":"flush()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"int","filterText":"peek","insertText":"peek()","insertTextFormat":2,"kind":2,"label":" peek()","score":9.6800003051757812,"sortText":"3ee51eb8peek","textEdit":{"newText":"peek()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"int","filterText":"read","insertText":"read()","insertTextFormat":2,"kind":2,"label":" read()","score":9.6800003051757812,"sortText":"3ee51eb8read","textEdit":{"newText":"read()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[3 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[5 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"clearWriteError","insertText":"clearWriteError()","insertTextFormat":2,"kind":2,"label":" clearWriteError()","score":4.8400001525878906,"sortText":"3f651eb8clearWriteError","textEdit":{"newText":"clearWriteError()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[5 overloads]","filterText":"find","insertText":"find($0)","insertTextFormat":2,"kind":2,"label":" find(…)","score":4.8400001525878906,"sortText":"3f651eb8find","textEdit":{"newText":"find($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[4 overloads]","filterText":"findUntil","insertText":"findUntil($0)","insertTextFormat":2,"kind":2,"label":" findUntil(…)","score":4.8400001525878906,"sortText":"3f651eb8findUntil","textEdit":{"newText":"findUntil($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"unsigned long","filterText":"getTimeout","insertText":"getTimeout()","insertTextFormat":2,"kind":2,"label":" getTimeout()","score":4.8400001525878906,"sortText":"3f651eb8getTimeout","textEdit":{"newText":"getTimeout()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"int","filterText":"getWriteError","insertText":"getWriteError()","insertTextFormat":2,"kind":2,"label":" getWriteError()","score":4.8400001525878906,"sortText":"3f651eb8getWriteError","textEdit":{"newText":"getWriteError()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"float","filterText":"parseFloat","insertText":"parseFloat()","insertTextFormat":2,"kind":2,"label":" parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","score":4.8400001525878906,"sortText":"3f651eb8parseFloat","textEdit":{"newText":"parseFloat()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"long","filterText":"parseInt","insertText":"parseInt()","insertTextFormat":2,"kind":2,"label":" parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","score":4.8400001525878906,"sortText":"3f651eb8parseInt","textEdit":{"newText":"parseInt()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[11 overloads]","filterText":"print","insertText":"print($0)","insertTextFormat":2,"kind":2,"label":" print(…)","score":4.8400001525878906,"sortText":"3f651eb8print","textEdit":{"newText":"print($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[12 overloads]","filterText":"println","insertText":"println($0)","insertTextFormat":2,"kind":2,"label":" println(…)","score":4.8400001525878906,"sortText":"3f651eb8println","textEdit":{"newText":"println($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[2 overloads]","filterText":"readBytes","insertText":"readBytes($0)","insertTextFormat":2,"kind":2,"label":" readBytes(…)","score":4.8400001525878906,"sortText":"3f651eb8readBytes","textEdit":{"newText":"readBytes($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"[2 overloads]","filterText":"readBytesUntil","insertText":"readBytesUntil($0)","insertTextFormat":2,"kind":2,"label":" readBytesUntil(…)","score":4.8400001525878906,"sortText":"3f651eb8readBytesUntil","textEdit":{"newText":"readBytesUntil($0)","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"String","filterText":"readString","insertText":"readString()","insertTextFormat":2,"kind":2,"label":" readString()","score":4.8400001525878906,"sortText":"3f651eb8readString","textEdit":{"newText":"readString()","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"String","filterText":"readStringUntil","insertText":"readStringUntil(${1:char terminator})","insertTextFormat":2,"kind":2,"label":" readStringUntil(char terminator)","score":4.8400001525878906,"sortText":"3f651eb8readStringUntil","textEdit":{"newText":"readStringUntil(${1:char terminator})","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}},{"detail":"void","filterText":"setTimeout","insertText":"setTimeout(${1:unsigned long timeout})","insertTextFormat":2,"kind":2,"label":" setTimeout(unsigned long timeout)","score":4.8400001525878906,"sortText":"3f651eb8setTimeout","textEdit":{"newText":"setTimeout(${1:unsigned long timeout})","range":{"end":{"character":7,"line":16},"start":{"character":7,"line":16}}}}]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":497,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":497,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'MFS' in 'HardwareSerial'","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":157}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":498,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":498,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":158},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"text":"w"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":499,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":499,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'w' in 'HardwareSerial'","range":{"end":{"character":8,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":158}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":159},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":415},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":500,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":500,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'wr' in 'HardwareSerial'","range":{"end":{"character":9,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":159}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":501,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":501,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":160},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":502,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":502,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 594

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'wri' in 'HardwareSerial'","range":{"end":{"character":10,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":160}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":161},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":503,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":503,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'writ' in 'HardwareSerial'","range":{"end":{"character":11,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":161}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":162},"contentChanges":[{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":504,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":504,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1885

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:129:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:130:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:131:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:132:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:133:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:52:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:56:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:57:12:\nnote: possible target for call","range":{"end":{"character":12,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":162}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":505,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":505,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1779

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":12}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:129:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:130:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:131:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:132:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:133:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:52:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:56:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:57:12:\nnote: possible target for call"}]}},"id":506,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":506,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":163},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":507,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":507,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1685

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"bound_member_function","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:129:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:130:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:131:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:132:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:133:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:52:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:56:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:57:12:\nnote: possible target for call","range":{"end":{"character":12,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":163}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":164},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":423},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":508,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":508,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1885

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:129:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:130:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:131:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:132:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:133:19:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:52:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:56:20:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:57:12:\nnote: possible target for call","range":{"end":{"character":12,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":164}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":165},"contentChanges":[{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":12}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":509,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":509,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'writ' in 'HardwareSerial'","range":{"end":{"character":11,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":165}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":510,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":510,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":166},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":511,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":511,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 594

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'wri' in 'HardwareSerial'","range":{"end":{"character":10,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":166}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":167},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":512,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":512,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'wr' in 'HardwareSerial'","range":{"end":{"character":9,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":167}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":168},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":513,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":513,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'w' in 'HardwareSerial'","range":{"end":{"character":8,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":168}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":169},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":514,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":514,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'MFS' in 'HardwareSerial'","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":169}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":515,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":515,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"context":{"diagnostics":[]}},"id":516,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":516,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":170},"contentChanges":[{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":7}},"text":"p"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":517,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":517,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'p' in 'HardwareSerial'","range":{"end":{"character":8,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":170}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":171},"contentChanges":[{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":433},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":518,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":518,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 592

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'pr' in 'HardwareSerial'","range":{"end":{"character":9,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":171}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":172},"contentChanges":[{"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":519,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":519,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 594

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'pri' in 'HardwareSerial'","range":{"end":{"character":10,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":172}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":173},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":10}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":435},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":520,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":520,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'prin' in 'HardwareSerial'","range":{"end":{"character":11,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":173}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":174},"contentChanges":[{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":436},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":521,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":521,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 2291

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:65:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:66:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:67:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:68:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:69:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:70:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:71:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:72:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:73:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:74:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:75:12:\nnote: possible target for call","range":{"end":{"character":12,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":174}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":522,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":522,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 2185

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":12}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:65:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:66:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:67:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:68:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:69:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:70:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:71:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:72:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:73:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:74:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:75:12:\nnote: possible target for call"}]}},"id":523,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":523,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":175},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":524,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":524,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 597

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'printl' in 'HardwareSerial'","range":{"end":{"character":13,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":175}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":176},"contentChanges":[{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":440},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":525,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":525,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 598

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'printlm' in 'HardwareSerial'","range":{"end":{"character":14,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":176}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":177},"contentChanges":[{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":14}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":526,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":526,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 597

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'printl' in 'HardwareSerial'","range":{"end":{"character":13,"line":16},"start":{"character":7,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":177}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":527,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":527,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":178},"contentChanges":[{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":528,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":528,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 2503

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"bound_member_function","message":"Reference to non-static member function must be called; did you mean to call it with no arguments? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:77:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:78:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:79:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:80:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:81:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:82:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:83:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:84:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:85:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:86:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:87:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:88:12:\nnote: possible target for call","range":{"end":{"character":14,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":178}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":529,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":529,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 2397

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":14}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called; did you mean to call it with no arguments? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:77:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:78:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:79:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:80:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:81:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:82:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:83:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:84:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:85:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:86:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:87:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:88:12:\nnote: possible target for call"}]}},"id":530,"jsonrpc":"2.0"}
<<<
Content-Length: 2428

{"id":530,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"bound_member_function","message":"Reference to non-static member function must be called; did you mean to call it with no arguments? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:77:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:78:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:79:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:80:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:81:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:82:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:83:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:84:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:85:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:86:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:87:12:\nnote: possible target for call\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Print.h:88:12:\nnote: possible target for call","range":{"end":{"character":14,"line":16},"start":{"character":0,"line":16}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp":[{"newText":"()","range":{"end":{"character":14,"line":16},"start":{"character":14,"line":16}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert '()'"}]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":179},"contentChanges":[{"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":531,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":531,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":179}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":15}},"id":532,"jsonrpc":"2.0"}
<<<
Content-Length: 1142

{"id":532,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"println() -> size_t","parameters":[]},{"label":"println(char) -> size_t","parameters":[{"label":[8,12]}]},{"label":"println(const char *) -> size_t","parameters":[{"label":[8,20]}]},{"label":"println(const String &s) -> size_t","parameters":[{"label":[8,23]}]},{"label":"println(const Printable &) -> size_t","parameters":[{"label":[8,25]}]},{"label":"println(const __FlashStringHelper *) -> size_t","parameters":[{"label":[8,35]}]},{"label":"println(int, int = DEC) -> size_t","parameters":[{"label":[8,11]},{"label":[13,22]}]},{"label":"println(double, int = 2) -> size_t","parameters":[{"label":[8,14]},{"label":[16,23]}]},{"label":"println(long, int = DEC) -> size_t","parameters":[{"label":[8,12]},{"label":[14,23]}]},{"label":"println(unsigned int, int = DEC) -> size_t","parameters":[{"label":[8,20]},{"label":[22,31]}]},{"label":"println(unsigned char, int = DEC) -> size_t","parameters":[{"label":[8,21]},{"label":[23,32]}]},{"label":"println(unsigned long, int = DEC) -> size_t","parameters":[{"label":[8,21]},{"label":[23,32]}]}]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":533,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":533,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":15},"end":{"line":16,"character":15}},"context":{"diagnostics":[]}},"id":534,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":534,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":180},"contentChanges":[{"range":{"start":{"line":16,"character":15},"end":{"line":16,"character":15}},"text":"\"\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":535,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":535,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":180}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":536,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":536,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}},"id":537,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":537,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":181},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":538,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":538,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":181}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":182},"contentChanges":[{"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"text":":"}]},"jsonrpc":"2.0"}Content-Length: 289

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":18},"context":{"triggerKind":2,"triggerCharacter":":"}},"id":539,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":539,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":540,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":540,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":182}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":541,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":541,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":183},"contentChanges":[{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":542,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":542,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":183}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":184},"contentChanges":[{"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":19}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":543,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":543,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":184}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":544,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":544,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":20},"end":{"line":16,"character":20}},"context":{"diagnostics":[]}},"id":545,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":545,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":185},"contentChanges":[{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":546,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":546,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":185}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":547,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":547,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"context":{"diagnostics":[]}},"id":548,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":548,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":186},"contentChanges":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"text":"+"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":549,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":549,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":24,"line":16},"start":{"character":23,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":186}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":187},"contentChanges":[{"range":{"start":{"line":16,"character":23},"end":{"line":16,"character":23}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":550,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":550,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":25,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":187}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":551,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":551,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":552,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":552,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":188},"contentChanges":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":553,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":553,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 595

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'S'","range":{"end":{"character":25,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":188}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":554,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":554,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":555,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":555,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":24},"end":{"line":16,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"}]}},"id":556,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":556,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":189},"contentChanges":[{"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":557,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":557,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 596

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'St'","range":{"end":{"character":26,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":189}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":190},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":558,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":558,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":559,"jsonrpc":"2.0"}
<<<
Content-Length: 597

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Str'","range":{"end":{"character":27,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":190}}Content-Length: 783

{"id":559,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":560,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":560,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":561,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":561,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":191},"contentChanges":[{"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":474},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":562,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":562,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 598

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Stri'","range":{"end":{"character":28,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":191}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":192},"contentChanges":[{"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":28}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":475},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":563,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":564,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":563,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 599

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Strin'","range":{"end":{"character":29,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":192}}Content-Length: 783

{"id":564,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":193},"contentChanges":[{"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":565,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":565,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":566,"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ref_non_value","message":"'String' does not refer to a value\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: declared here","range":{"end":{"character":30,"line":16},"start":{"character":24,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":193}}Content-Length: 783

{"id":566,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":194},"contentChanges":[{"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":567,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":567,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":194}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":568,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":568,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":31}},"id":569,"jsonrpc":"2.0"}
<<<
Content-Length: 1479

{"id":569,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"documentation":"constructors\ncreates a copy of the initial value.\nif the initial value is null or invalid, or if memory allocation\nfails, the string will be marked as invalid (i.e. \"if (s)\" will\nbe false).","label":"String(const char *cstr = \"\")","parameters":[{"label":[7,28]}]},{"label":"String(char c)","parameters":[{"label":[7,13]}]},{"label":"String(String &&rval)","parameters":[{"label":[7,20]}]},{"label":"String(const String &str)","parameters":[{"label":[7,24]}]},{"label":"String(StringSumHelper &&rval)","parameters":[{"label":[7,29]}]},{"label":"String(const __FlashStringHelper *str)","parameters":[{"label":[7,37]}]},{"label":"String(int, unsigned char base = 10)","parameters":[{"label":[7,10]},{"label":[12,35]}]},{"label":"String(long, unsigned char base = 10)","parameters":[{"label":[7,11]},{"label":[13,36]}]},{"label":"String(unsigned int, unsigned char base = 10)","parameters":[{"label":[7,19]},{"label":[21,44]}]},{"label":"String(float, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,12]},{"label":[14,45]}]},{"label":"String(unsigned char, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(unsigned long, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(double, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,13]},{"label":[15,46]}]}]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":570,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":570,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":31},"end":{"line":16,"character":31}},"context":{"diagnostics":[]}},"id":571,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":571,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":195},"contentChanges":[{"range":{"start":{"line":16,"character":31},"end":{"line":16,"character":31}},"text":"P"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":572,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":572,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'P'","range":{"end":{"character":32,"line":16},"start":{"character":31,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":195}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":196},"contentChanges":[{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":32}},"text":"O"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":573,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":573,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":574,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PO'","range":{"end":{"character":33,"line":16},"start":{"character":31,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":196}}Content-Length: 783

{"id":574,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":575,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":575,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":576,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":576,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":197},"contentChanges":[{"range":{"start":{"line":16,"character":33},"end":{"line":16,"character":33}},"text":"R"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":577,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":577,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'POR'","range":{"end":{"character":34,"line":16},"start":{"character":31,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":197}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":198},"contentChanges":[{"range":{"start":{"line":16,"character":34},"end":{"line":16,"character":34}},"text":"T"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":578,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":578,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":579,"jsonrpc":"2.0"}
<<<
Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORT'","range":{"end":{"character":35,"line":16},"start":{"character":31,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":198}}Content-Length: 783

{"id":579,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":580,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":580,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":581,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":581,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":35},"end":{"line":16,"character":35}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":31},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'PORT'"}]}},"id":582,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":582,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":199},"contentChanges":[{"range":{"start":{"line":16,"character":35},"end":{"line":16,"character":35}},"text":"B"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":583,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":583,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":199}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":584,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":584,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":36},"end":{"line":16,"character":36}},"context":{"diagnostics":[]}},"id":585,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"id":585,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":36,"line":16},"start":{"character":36,"line":16}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'PORTB'"},"kind":"refactor","title":"Expand macro 'PORTB'"}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":200},"contentChanges":[{"range":{"start":{"line":16,"character":36},"end":{"line":16,"character":36}},"text":","}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":586,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":586,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":38,"line":16},"start":{"character":37,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":200}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":201},"contentChanges":[{"range":{"start":{"line":16,"character":37},"end":{"line":16,"character":37}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":493},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":587,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":587,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":39,"line":16},"start":{"character":38,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":201}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":38}},"id":588,"jsonrpc":"2.0"}
<<<
Content-Length: 836

{"id":588,"jsonrpc":"2.0","result":{"activeParameter":1,"activeSignature":0,"signatures":[{"label":"String(int, unsigned char base = 10)","parameters":[{"label":[7,10]},{"label":[12,35]}]},{"label":"String(long, unsigned char base = 10)","parameters":[{"label":[7,11]},{"label":[13,36]}]},{"label":"String(unsigned int, unsigned char base = 10)","parameters":[{"label":[7,19]},{"label":[21,44]}]},{"label":"String(float, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,12]},{"label":[14,45]}]},{"label":"String(unsigned char, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(unsigned long, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(double, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,13]},{"label":[15,46]}]}]}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":589,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":589,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 477

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":38}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":39}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":590,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":590,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":202},"contentChanges":[{"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":38}},"text":"B"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":591,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":591,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B'","range":{"end":{"character":39,"line":16},"start":{"character":38,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":202}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":592,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":592,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":593,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":593,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":39},"end":{"line":16,"character":39}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":38},"end":{"line":16,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'B'"}]}},"id":594,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":594,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":203},"contentChanges":[{"range":{"start":{"line":16,"character":39},"end":{"line":16,"character":39}},"text":"I"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":595,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":595,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BI'","range":{"end":{"character":40,"line":16},"start":{"character":38,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":203}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":204},"contentChanges":[{"range":{"start":{"line":16,"character":40},"end":{"line":16,"character":40}},"text":"N"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":596,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":596,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":597,"jsonrpc":"2.0"}
<<<
Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":7,"line":17},"start":{"character":4,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":204}}Content-Length: 783

{"id":597,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":598,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":598,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":41},"end":{"line":16,"character":41}},"context":{"diagnostics":[]}},"id":599,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":599,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":41,"line":16},"start":{"character":41,"line":16}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'BIN'"},"kind":"refactor","title":"Expand macro 'BIN'"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":43},"end":{"line":16,"character":43}},"context":{"diagnostics":[]}},"id":600,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":600,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":205},"contentChanges":[{"range":{"start":{"line":16,"character":43},"end":{"line":16,"character":43}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":601,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":601,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":205}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":602,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":602,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":44},"end":{"line":16,"character":44}},"context":{"diagnostics":[]}},"id":603,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":603,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":31},"end":{"line":17,"character":31}},"context":{"diagnostics":[]}},"id":604,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":604,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 319

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":206},"contentChanges":[{"range":{"start":{"line":17,"character":31},"end":{"line":17,"character":31}},"text":"\n    "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":605,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":605,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":206}}
>>>
Content-Length: 463

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":208},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":4}},"rangeLength":4,"text":""},{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"Serial.println(\"1:  \" + String(PORTB, BIN));\n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":606,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":606,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":208}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":43},"end":{"line":18,"character":43}},"context":{"diagnostics":[]}},"id":607,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":607,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":42},"end":{"line":18,"character":42}},"context":{"diagnostics":[]}},"id":608,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":608,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":41}},"id":609,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":609,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":30,"line":16},"start":{"character":24,"line":16}}},{"kind":1,"range":{"end":{"character":30,"line":18},"start":{"character":24,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":39},"end":{"line":18,"character":39}},"context":{"diagnostics":[]}},"id":610,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":610,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":39,"line":18},"start":{"character":39,"line":18}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'BIN'"},"kind":"refactor","title":"Expand macro 'BIN'"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":37},"end":{"line":18,"character":37}},"context":{"diagnostics":[]}},"id":611,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":611,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":36}},"id":612,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":612,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":30,"line":16},"start":{"character":24,"line":16}}},{"kind":1,"range":{"end":{"character":30,"line":18},"start":{"character":24,"line":18}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":30}},"id":613,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":613,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":30,"line":16},"start":{"character":24,"line":16}}},{"kind":1,"range":{"end":{"character":30,"line":18},"start":{"character":24,"line":18}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":17}},"id":614,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":614,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"context":{"diagnostics":[]}},"id":615,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":615,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"context":{"diagnostics":[]}},"id":616,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":616,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":209},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":617,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":617,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":209}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":210},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":618,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":618,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":210}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"context":{"diagnostics":[]}},"id":619,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":619,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":15}},"id":620,"jsonrpc":"2.0"}
<<<
Content-Length: 369

{"id":620,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":17,"line":17},"start":{"character":8,"line":17}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":18}},"id":621,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":621,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `B1010`  \n\n---\n```cpp\n#define B1010 10\n```"},"range":{"end":{"character":23,"line":17},"start":{"character":18,"line":17}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":19}},"id":622,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":622,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `B1010`  \n\n---\n```cpp\n#define B1010 10\n```"},"range":{"end":{"character":23,"line":17},"start":{"character":18,"line":17}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":19}},"id":623,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":623,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":22}},"context":{"diagnostics":[]}},"id":624,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":624,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":22,"line":17},"start":{"character":19,"line":17}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B1010'"},"kind":"refactor","title":"Expand macro 'B1010'"},{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":22,"line":17},"start":{"character":19,"line":17}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":23}},"context":{"diagnostics":[]}},"id":625,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":625,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":23,"line":17},"start":{"character":19,"line":17}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B1010'"},"kind":"refactor","title":"Expand macro 'B1010'"},{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":23,"line":17},"start":{"character":19,"line":17}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":3},"end":{"line":17,"character":31}},"context":{"diagnostics":[]}},"id":626,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":626,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":31}},"context":{"diagnostics":[]}},"id":627,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":627,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":4}},"id":628,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"id":628,"jsonrpc":"2.0","result":[{"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":3}},"id":629,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":629,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":4}},"id":630,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"id":630,"jsonrpc":"2.0","result":[{"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":631,"jsonrpc":"2.0"}
<<<
Content-Length: 328

{"id":631,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":20,"line":15},"start":{"character":19,"line":15}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":20}},"id":632,"jsonrpc":"2.0"}
<<<
Content-Length: 328

{"id":632,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":21,"line":15},"start":{"character":20,"line":15}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"context":{"diagnostics":[]}},"id":633,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":633,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":211},"contentChanges":[{"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp"}},"id":634,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":634,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server435482587/sketch/LibraryTests.ino.cpp","version":211}}






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":34452,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server943074999\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1143

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  \nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}
>>>
Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 781

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"text":"MFS.writeLeds(B1010, true);"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 781

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}
>>>
Content-Length: 1147

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  \nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":27}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"}},"id":7,"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":3}}Content-Length: 781

{"id":7,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":21}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":16,"character":20},"end":{"line":16,"character":21}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server943074999/sketch/LibraryTests.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 102

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":10,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":34452,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server135438763\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1170

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  MFS.writeLeds(B1010, true);\nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 112

{"error":{"code":-32801,"message":"Request cancelled because the document was modified"},"id":1,"jsonrpc":"2.0"}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":19},"end":{"line":16,"character":19}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":3,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":19,"line":16},"start":{"character":19,"line":16}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B100'"},"kind":"refactor","title":"Expand macro 'B100'"}]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":19}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":5,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":18}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":6,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 387

{"id":7,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":17,"line":16},"start":{"character":17,"line":16}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'B0'"},"kind":"refactor","title":"Expand macro 'B0'"}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":5}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":7},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":8},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":10,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":6}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}
>>>
Content-Length: 1174

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  MFS.writeLeds(B1010, true);\nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":7}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":2}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":13,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":3}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":14,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":4}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"id":15,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}},{"kind":1,"range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}}},{"kind":1,"range":{"end":{"character":7,"line":18},"start":{"character":4,"line":18}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 782

{"id":17,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 2960

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":21,"line":16},"start":{"character":16,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":17},"start":{"character":38,"line":17}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":5,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":24,"line":18},"start":{"character":19,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":19},"start":{"character":31,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":19},"start":{"character":38,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 782

{"id":18,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 2421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":21,"line":16},"start":{"character":16,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":17},"start":{"character":38,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":19},"start":{"character":31,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":19},"start":{"character":38,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":9}}Content-Length: 782

{"id":19,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":21,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":3}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":23,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":3}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":24,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":10}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":10}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":26,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":12}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":12}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":11}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":29,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":8}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":30,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":9}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":9}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":9}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":10}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":34,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":11}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":6},"end":{"line":16,"character":15}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":11}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":40,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2792

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":21,"line":16},"start":{"character":16,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":17},"start":{"character":38,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":7,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":23,"line":18},"start":{"character":18,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":19},"start":{"character":31,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":19},"start":{"character":38,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":41,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":42,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 486

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'MFS'"}]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":44,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2605

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":17},"start":{"character":38,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":7,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":23,"line":18},"start":{"character":18,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":19},"start":{"character":31,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":19},"start":{"character":38,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":46,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":49,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 2605

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":17},"start":{"character":0,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":17},"start":{"character":38,"line":17}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":7,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'B1010'","range":{"end":{"character":23,"line":18},"start":{"character":18,"line":18}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":6,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'PORTB'","range":{"end":{"character":36,"line":19},"start":{"character":31,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'BIN'","range":{"end":{"character":41,"line":19},"start":{"character":38,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp","version":12}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":51,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server135438763/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":54,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2162

{"method":"initialize","params":{"processId":3520,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server289426419\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1166

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  MFS.writeLeds(0, true);\nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 781

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":38}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":5,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":39}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":6,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":39}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":44},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server289426419/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":35}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"id":9,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `PORTB`  \n\n---\n```cpp\n#define PORTB _SFR_IO8(0x05)\n```"},"range":{"end":{"character":36,"line":17},"start":{"character":31,"line":17}}}}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":26044,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server541214439\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1166

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  MFS.writeLeds(0, true);\nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/30","percentage":3.3333333333333335}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/30","percentage":3.3333333333333335}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/30","percentage":6.666666666666667}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/30","percentage":6.666666666666667}}}Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 781

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":44},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/30","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/30","percentage":10}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/30","percentage":13.333333333333334}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/30","percentage":13.333333333333334}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/30","percentage":16.666666666666668}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/30","percentage":16.666666666666668}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/30","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/30","percentage":20}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/30","percentage":23.333333333333332}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/30","percentage":23.333333333333332}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/30","percentage":26.666666666666668}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/30","percentage":26.666666666666668}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/30","percentage":30}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/30","percentage":30}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/30","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/30","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/30","percentage":36.666666666666664}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/30","percentage":36.666666666666664}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/30","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/30","percentage":40}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/30","percentage":43.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/30","percentage":43.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/30","percentage":46.666666666666664}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/30","percentage":46.666666666666664}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/30","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/30","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/30","percentage":53.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/30","percentage":53.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/30","percentage":56.666666666666664}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/30","percentage":56.666666666666664}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/30","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/30","percentage":60}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/30","percentage":63.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/30","percentage":63.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/30","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/30","percentage":66.666666666666671}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/30","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/30","percentage":70}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/30","percentage":73.333333333333329}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/30","percentage":73.333333333333329}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/30","percentage":76.666666666666671}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/30","percentage":80}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/30","percentage":83.333333333333329}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/30","percentage":86.666666666666671}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/30","percentage":90}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/30","percentage":93.333333333333329}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/30","percentage":96.666666666666671}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":5}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":13}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":6,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":14,"line":13},"start":{"character":13,"line":13}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":12}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":12}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":8,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":11}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"id":9,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":6}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":10,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 197

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 13263

{"id":11,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1216,"character":1}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1217,"character":15}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 252

{"id":13,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `ledIdx`  \n\n---\nType: `byte`  \n\n---\n```cpp\n// In writeLed\nbyte ledIdx\n```"},"range":{"end":{"character":18,"line":1217},"start":{"character":12,"line":1217}}}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":15}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 368

{"id":15,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `writeLeds`  \n\n---\n→ `void`  \nParameters:  \n- `byte leds`\n- `byte lit`\n\nTurns LEDs on or off.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void writeLeds(byte leds, byte lit)\n```"},"range":{"end":{"character":17,"line":18},"start":{"character":8,"line":18}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":14},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server541214439/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":18}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":16,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":22928,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server905443115\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1166

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 18 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n  Serial.begin(9600);\n  MFS.writeLeds(0, true);\nSerial.println(\"1:  \" + String(PORTB, BIN));\n    MFS.writeLeds(B1010, true);\nSerial.println(\"2:  \" + String(PORTB, BIN));\n\n}\n\n\nvoid loop() {\n\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 301

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 781

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":9,"line":24},"start":{"character":5,"line":24}}}]}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":37}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `String`  \n\n---\n```cpp\n// In String\npublic: explicit String(unsigned char, unsigned char base = 10)\n```"},"range":{"end":{"character":37,"line":19},"start":{"character":36,"line":19}}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":0},"end":{"line":19,"character":44}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":15,"character":0},"end":{"line":19,"character":44}},"rangeLength":169,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":11,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":9,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 993

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(0);\n  \n\n\n}\n\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":15,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":12,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":13,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":15,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 782

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":5}}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":15,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":15,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":6}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":30}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":16,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":30}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":12}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":18,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":12}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":13}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":20,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"context":{"diagnostics":[]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":13}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":22,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":14,"line":13},"start":{"character":13,"line":13}}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":7}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":8}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"text":"3"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":27,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":9}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"context":{"diagnostics":[]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":10,"character":7}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":29,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `setup`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid setup()\n```"},"range":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":10}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":30,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":11}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"id":31,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":33,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":16}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":34,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":35,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":33},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":36,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":34},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":37,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":35},"jsonrpc":"2.0"}Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":38,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":39,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":41,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int integer`\n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(int integer)\n```"},"range":{"end":{"character":18,"line":13},"start":{"character":17,"line":13}}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"text":"\""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 595

{"id":43,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}}]}Content-Length: 761

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":19,"line":13},"start":{"character":12,"line":13}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:11:14: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":14,"line":10},"start":{"character":13,"line":10}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":14}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 476

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"text":"\""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":47,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":10,"character":0}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":49,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":10,"character":0}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":50,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":51,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":52,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":9}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":53,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":10}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":54,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":7}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":55,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":7}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":56,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":7}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":57,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":7}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":58,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 197

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 13263

{"id":60,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":510,"character":6}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":61,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":510,"character":46}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":62,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":518,"character":47}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":63,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":34}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":64,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":35}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":65,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":66,"jsonrpc":"2.0","result":[{"range":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":35}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":67,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"id":68,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":1,"range":{"end":{"character":45,"line":522},"start":{"character":26,"line":522}}},{"kind":1,"range":{"end":{"character":43,"line":528},"start":{"character":24,"line":528}}},{"kind":1,"range":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":522,"character":36}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":69,"jsonrpc":"2.0","result":[{"range":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":958,"character":36}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":35}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":71,"jsonrpc":"2.0","result":[{"range":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":34}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 470

{"id":72,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `SEGMENT_MAP_DIGIT`  \n\n---\nType: `const byte [10]`  \nValue = `{192, 249, 164, 176, 153, 146, 130, 248, 128, 144}`  \nSegment byte maps for numbers 0 to 9  \n\n---\n```cpp\nconst byte SEGMENT_MAP_DIGIT[] = {192, 249, 164, 176, 153,\n                                  146, 130, 248, 128, 144}\n```"},"range":{"end":{"character":36,"line":964},"start":{"character":19,"line":964}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":23}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":73,"jsonrpc":"2.0","result":[{"range":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":23}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 470

{"id":74,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `SEGMENT_MAP_DIGIT`  \n\n---\nType: `const byte [10]`  \nValue = `{192, 249, 164, 176, 153, 146, 130, 248, 128, 144}`  \nSegment byte maps for numbers 0 to 9  \n\n---\n```cpp\nconst byte SEGMENT_MAP_DIGIT[] = {192, 249, 164, 176, 153,\n                                  146, 130, 248, 128, 144}\n```"},"range":{"end":{"character":36,"line":964},"start":{"character":19,"line":964}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":23}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":75,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":1,"range":{"end":{"character":36,"line":964},"start":{"character":19,"line":964}}}]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":964,"character":23}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":76,"jsonrpc":"2.0","result":[{"range":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":20}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":77,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":10}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"id":78,"jsonrpc":"2.0","result":[{"range":{"end":{"character":37,"line":43},"start":{"character":30,"line":43}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":9}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":79,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":27}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":80,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":13}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":81,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":35}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":82,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":35}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":83,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":28}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":84,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":28}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":85,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":28}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":86,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":29}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":41}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":88,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":34}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":89,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":12,"character":28}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":90,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":15,"character":34}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":91,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":10,"character":21}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":92,"jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":10},"start":{"character":8,"line":10}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 181

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 189

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":93,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 197

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 13263

{"id":94,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 237

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":6}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 5239

{"id":95,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":10},"start":{"character":6,"line":10}}},{"kind":1,"range":{"end":{"character":10,"line":13},"start":{"character":6,"line":13}}},{"kind":1,"range":{"end":{"character":10,"line":15},"start":{"character":6,"line":15}}},{"kind":1,"range":{"end":{"character":10,"line":18},"start":{"character":6,"line":18}}},{"kind":1,"range":{"end":{"character":10,"line":21},"start":{"character":6,"line":21}}},{"kind":1,"range":{"end":{"character":10,"line":22},"start":{"character":6,"line":22}}},{"kind":1,"range":{"end":{"character":13,"line":24},"start":{"character":9,"line":24}}},{"kind":1,"range":{"end":{"character":13,"line":28},"start":{"character":9,"line":28}}},{"kind":1,"range":{"end":{"character":13,"line":29},"start":{"character":9,"line":29}}},{"kind":1,"range":{"end":{"character":4,"line":34},"start":{"character":0,"line":34}}},{"kind":1,"range":{"end":{"character":4,"line":39},"start":{"character":0,"line":39}}},{"kind":1,"range":{"end":{"character":29,"line":43},"start":{"character":25,"line":43}}},{"kind":1,"range":{"end":{"character":43,"line":43},"start":{"character":39,"line":43}}},{"kind":1,"range":{"end":{"character":4,"line":44},"start":{"character":0,"line":44}}},{"kind":1,"range":{"end":{"character":30,"line":44},"start":{"character":26,"line":44}}},{"kind":1,"range":{"end":{"character":22,"line":45},"start":{"character":18,"line":45}}},{"kind":1,"range":{"end":{"character":4,"line":46},"start":{"character":0,"line":46}}},{"kind":1,"range":{"end":{"character":21,"line":46},"start":{"character":17,"line":46}}},{"kind":1,"range":{"end":{"character":18,"line":47},"start":{"character":14,"line":47}}},{"kind":1,"range":{"end":{"character":31,"line":47},"start":{"character":27,"line":47}}},{"kind":1,"range":{"end":{"character":36,"line":115},"start":{"character":32,"line":115}}},{"kind":1,"range":{"end":{"character":49,"line":128},"start":{"character":45,"line":128}}},{"kind":1,"range":{"end":{"character":66,"line":128},"start":{"character":62,"line":128}}},{"kind":1,"range":{"end":{"character":35,"line":184},"start":{"character":31,"line":184}}},{"kind":1,"range":{"end":{"character":45,"line":251},"start":{"character":41,"line":251}}},{"kind":1,"range":{"end":{"character":77,"line":251},"start":{"character":73,"line":251}}},{"kind":1,"range":{"end":{"character":39,"line":323},"start":{"character":35,"line":323}}},{"kind":1,"range":{"end":{"character":4,"line":340},"start":{"character":0,"line":340}}},{"kind":1,"range":{"end":{"character":6,"line":342},"start":{"character":2,"line":342}}},{"kind":1,"range":{"end":{"character":78,"line":361},"start":{"character":74,"line":361}}},{"kind":1,"range":{"end":{"character":36,"line":413},"start":{"character":32,"line":413}}},{"kind":1,"range":{"end":{"character":47,"line":413},"start":{"character":43,"line":413}}},{"kind":1,"range":{"end":{"character":36,"line":429},"start":{"character":32,"line":429}}},{"kind":1,"range":{"end":{"character":47,"line":429},"start":{"character":43,"line":429}}},{"kind":1,"range":{"end":{"character":47,"line":442},"start":{"character":43,"line":442}}},{"kind":1,"range":{"end":{"character":8,"line":465},"start":{"character":4,"line":465}}},{"kind":1,"range":{"end":{"character":8,"line":472},"start":{"character":4,"line":472}}},{"kind":1,"range":{"end":{"character":46,"line":489},"start":{"character":42,"line":489}}},{"kind":1,"range":{"end":{"character":50,"line":504},"start":{"character":46,"line":504}}},{"kind":1,"range":{"end":{"character":6,"line":506},"start":{"character":2,"line":506}}},{"kind":1,"range":{"end":{"character":6,"line":508},"start":{"character":2,"line":508}}},{"kind":1,"range":{"end":{"character":8,"line":512},"start":{"character":4,"line":512}}},{"kind":1,"range":{"end":{"character":39,"line":570},"start":{"character":35,"line":570}}},{"kind":1,"range":{"end":{"character":52,"line":570},"start":{"character":48,"line":570}}},{"kind":1,"range":{"end":{"character":6,"line":619},"start":{"character":2,"line":619}}},{"kind":1,"range":{"end":{"character":8,"line":680},"start":{"character":4,"line":680}}},{"kind":1,"range":{"end":{"character":15,"line":684},"start":{"character":11,"line":684}}},{"kind":1,"range":{"end":{"character":8,"line":799},"start":{"character":4,"line":799}}},{"kind":1,"range":{"end":{"character":8,"line":852},"start":{"character":4,"line":852}}},{"kind":1,"range":{"end":{"character":6,"line":920},"start":{"character":2,"line":920}}},{"kind":1,"range":{"end":{"character":4,"line":958},"start":{"character":0,"line":958}}},{"kind":1,"range":{"end":{"character":30,"line":958},"start":{"character":26,"line":958}}},{"kind":1,"range":{"end":{"character":6,"line":960},"start":{"character":2,"line":960}}},{"kind":1,"range":{"end":{"character":31,"line":1191},"start":{"character":27,"line":1191}}},{"kind":1,"range":{"end":{"character":45,"line":1191},"start":{"character":41,"line":1191}}},{"kind":1,"range":{"end":{"character":24,"line":1210},"start":{"character":20,"line":1210}}},{"kind":1,"range":{"end":{"character":20,"line":1215},"start":{"character":16,"line":1215}}},{"kind":1,"range":{"end":{"character":33,"line":1215},"start":{"character":29,"line":1215}}}]}
>>>
Content-Length: 237

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":0}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":96,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":1,"range":{"end":{"character":36,"line":964},"start":{"character":19,"line":964}}}]}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":13,"character":10}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 5239

{"id":97,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":10},"start":{"character":6,"line":10}}},{"kind":1,"range":{"end":{"character":10,"line":13},"start":{"character":6,"line":13}}},{"kind":1,"range":{"end":{"character":10,"line":15},"start":{"character":6,"line":15}}},{"kind":1,"range":{"end":{"character":10,"line":18},"start":{"character":6,"line":18}}},{"kind":1,"range":{"end":{"character":10,"line":21},"start":{"character":6,"line":21}}},{"kind":1,"range":{"end":{"character":10,"line":22},"start":{"character":6,"line":22}}},{"kind":1,"range":{"end":{"character":13,"line":24},"start":{"character":9,"line":24}}},{"kind":1,"range":{"end":{"character":13,"line":28},"start":{"character":9,"line":28}}},{"kind":1,"range":{"end":{"character":13,"line":29},"start":{"character":9,"line":29}}},{"kind":1,"range":{"end":{"character":4,"line":34},"start":{"character":0,"line":34}}},{"kind":1,"range":{"end":{"character":4,"line":39},"start":{"character":0,"line":39}}},{"kind":1,"range":{"end":{"character":29,"line":43},"start":{"character":25,"line":43}}},{"kind":1,"range":{"end":{"character":43,"line":43},"start":{"character":39,"line":43}}},{"kind":1,"range":{"end":{"character":4,"line":44},"start":{"character":0,"line":44}}},{"kind":1,"range":{"end":{"character":30,"line":44},"start":{"character":26,"line":44}}},{"kind":1,"range":{"end":{"character":22,"line":45},"start":{"character":18,"line":45}}},{"kind":1,"range":{"end":{"character":4,"line":46},"start":{"character":0,"line":46}}},{"kind":1,"range":{"end":{"character":21,"line":46},"start":{"character":17,"line":46}}},{"kind":1,"range":{"end":{"character":18,"line":47},"start":{"character":14,"line":47}}},{"kind":1,"range":{"end":{"character":31,"line":47},"start":{"character":27,"line":47}}},{"kind":1,"range":{"end":{"character":36,"line":115},"start":{"character":32,"line":115}}},{"kind":1,"range":{"end":{"character":49,"line":128},"start":{"character":45,"line":128}}},{"kind":1,"range":{"end":{"character":66,"line":128},"start":{"character":62,"line":128}}},{"kind":1,"range":{"end":{"character":35,"line":184},"start":{"character":31,"line":184}}},{"kind":1,"range":{"end":{"character":45,"line":251},"start":{"character":41,"line":251}}},{"kind":1,"range":{"end":{"character":77,"line":251},"start":{"character":73,"line":251}}},{"kind":1,"range":{"end":{"character":39,"line":323},"start":{"character":35,"line":323}}},{"kind":1,"range":{"end":{"character":4,"line":340},"start":{"character":0,"line":340}}},{"kind":1,"range":{"end":{"character":6,"line":342},"start":{"character":2,"line":342}}},{"kind":1,"range":{"end":{"character":78,"line":361},"start":{"character":74,"line":361}}},{"kind":1,"range":{"end":{"character":36,"line":413},"start":{"character":32,"line":413}}},{"kind":1,"range":{"end":{"character":47,"line":413},"start":{"character":43,"line":413}}},{"kind":1,"range":{"end":{"character":36,"line":429},"start":{"character":32,"line":429}}},{"kind":1,"range":{"end":{"character":47,"line":429},"start":{"character":43,"line":429}}},{"kind":1,"range":{"end":{"character":47,"line":442},"start":{"character":43,"line":442}}},{"kind":1,"range":{"end":{"character":8,"line":465},"start":{"character":4,"line":465}}},{"kind":1,"range":{"end":{"character":8,"line":472},"start":{"character":4,"line":472}}},{"kind":1,"range":{"end":{"character":46,"line":489},"start":{"character":42,"line":489}}},{"kind":1,"range":{"end":{"character":50,"line":504},"start":{"character":46,"line":504}}},{"kind":1,"range":{"end":{"character":6,"line":506},"start":{"character":2,"line":506}}},{"kind":1,"range":{"end":{"character":6,"line":508},"start":{"character":2,"line":508}}},{"kind":1,"range":{"end":{"character":8,"line":512},"start":{"character":4,"line":512}}},{"kind":1,"range":{"end":{"character":39,"line":570},"start":{"character":35,"line":570}}},{"kind":1,"range":{"end":{"character":52,"line":570},"start":{"character":48,"line":570}}},{"kind":1,"range":{"end":{"character":6,"line":619},"start":{"character":2,"line":619}}},{"kind":1,"range":{"end":{"character":8,"line":680},"start":{"character":4,"line":680}}},{"kind":1,"range":{"end":{"character":15,"line":684},"start":{"character":11,"line":684}}},{"kind":1,"range":{"end":{"character":8,"line":799},"start":{"character":4,"line":799}}},{"kind":1,"range":{"end":{"character":8,"line":852},"start":{"character":4,"line":852}}},{"kind":1,"range":{"end":{"character":6,"line":920},"start":{"character":2,"line":920}}},{"kind":1,"range":{"end":{"character":4,"line":958},"start":{"character":0,"line":958}}},{"kind":1,"range":{"end":{"character":30,"line":958},"start":{"character":26,"line":958}}},{"kind":1,"range":{"end":{"character":6,"line":960},"start":{"character":2,"line":960}}},{"kind":1,"range":{"end":{"character":31,"line":1191},"start":{"character":27,"line":1191}}},{"kind":1,"range":{"end":{"character":45,"line":1191},"start":{"character":41,"line":1191}}},{"kind":1,"range":{"end":{"character":24,"line":1210},"start":{"character":20,"line":1210}}},{"kind":1,"range":{"end":{"character":20,"line":1215},"start":{"character":16,"line":1215}}},{"kind":1,"range":{"end":{"character":33,"line":1215},"start":{"character":29,"line":1215}}}]}
>>>
Content-Length: 76

{"method":"$/setTraceNotification","params":{"value":"off"},"jsonrpc":"2.0"}Content-Length: 76

{"method":"$/setTraceNotification","params":{"value":"off"},"jsonrpc":"2.0"}Content-Length: 76

{"method":"$/setTraceNotification","params":{"value":"off"},"jsonrpc":"2.0"}Content-Length: 76

{"method":"$/setTraceNotification","params":{"value":"off"},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":33,"character":15}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":98,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":99,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":100,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":101,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":102,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":103,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":104,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":105,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"context":{"diagnostics":[]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":528,"character":27}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":107,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `AsciiToSegmentValue`  \n\n---\n→ `byte`  \nParameters:  \n- `byte ascii`\n\n---\n```cpp\nbyte AsciiToSegmentValue(byte ascii)\n```"},"range":{"end":{"character":43,"line":528},"start":{"character":24,"line":528}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":17}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":108,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":17}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":109,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":17}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 942

{"id":110,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":1,"range":{"end":{"character":36,"line":544},"start":{"character":23,"line":544}}},{"kind":1,"range":{"end":{"character":19,"line":550},"start":{"character":6,"line":550}}},{"kind":1,"range":{"end":{"character":19,"line":555},"start":{"character":6,"line":555}}},{"kind":1,"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}},{"kind":1,"range":{"end":{"character":53,"line":659},"start":{"character":40,"line":659}}},{"kind":1,"range":{"end":{"character":51,"line":668},"start":{"character":38,"line":668}}},{"kind":1,"range":{"end":{"character":41,"line":672},"start":{"character":28,"line":672}}},{"kind":1,"range":{"end":{"character":47,"line":907},"start":{"character":34,"line":907}}},{"kind":1,"range":{"end":{"character":39,"line":910},"start":{"character":26,"line":910}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":563,"character":17}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":111,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":18}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 332

{"id":112,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayMemory`  \n\n---\nType: `volatile byte [4]`  \nValue = `{255, 255, 255, 255}`  \n\n---\n```cpp\nvolatile byte displayMemory[4] = {255, 255, 255, 255}\n```"},"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":19}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 942

{"id":113,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":1,"range":{"end":{"character":36,"line":544},"start":{"character":23,"line":544}}},{"kind":1,"range":{"end":{"character":19,"line":550},"start":{"character":6,"line":550}}},{"kind":1,"range":{"end":{"character":19,"line":555},"start":{"character":6,"line":555}}},{"kind":1,"range":{"end":{"character":19,"line":563},"start":{"character":6,"line":563}}},{"kind":1,"range":{"end":{"character":53,"line":659},"start":{"character":40,"line":659}}},{"kind":1,"range":{"end":{"character":51,"line":668},"start":{"character":38,"line":668}}},{"kind":1,"range":{"end":{"character":41,"line":672},"start":{"character":28,"line":672}}},{"kind":1,"range":{"end":{"character":47,"line":907},"start":{"character":34,"line":907}}},{"kind":1,"range":{"end":{"character":39,"line":910},"start":{"character":26,"line":910}}}]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":114,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":25}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"id":115,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `WriteValueToSegment`  \n\n---\n→ `void`  \nParameters:  \n- `byte Segment`\n- `byte Value`\n\nWrite a value to one of the 4 digits of the display  \n\n---\n```cpp\nvoid WriteValueToSegment(byte Segment, byte Value)\n```"},"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":25}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 755

{"id":116,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":1,"range":{"end":{"character":21,"line":80},"start":{"character":2,"line":80}}},{"kind":1,"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}},{"kind":1,"range":{"end":{"character":27,"line":663},"start":{"character":8,"line":663}}},{"kind":1,"range":{"end":{"character":25,"line":668},"start":{"character":6,"line":668}}},{"kind":1,"range":{"end":{"character":25,"line":708},"start":{"character":6,"line":708}}},{"kind":1,"range":{"end":{"character":21,"line":907},"start":{"character":2,"line":907}}},{"kind":1,"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":27}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":117,"jsonrpc":"2.0","result":[{"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":26}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"id":118,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `WriteValueToSegment`  \n\n---\n→ `void`  \nParameters:  \n- `byte Segment`\n- `byte Value`\n\nWrite a value to one of the 4 digits of the display  \n\n---\n```cpp\nvoid WriteValueToSegment(byte Segment, byte Value)\n```"},"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":26}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 755

{"id":119,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":1,"range":{"end":{"character":21,"line":80},"start":{"character":2,"line":80}}},{"kind":1,"range":{"end":{"character":27,"line":659},"start":{"character":8,"line":659}}},{"kind":1,"range":{"end":{"character":27,"line":663},"start":{"character":8,"line":663}}},{"kind":1,"range":{"end":{"character":25,"line":668},"start":{"character":6,"line":668}}},{"kind":1,"range":{"end":{"character":25,"line":708},"start":{"character":6,"line":708}}},{"kind":1,"range":{"end":{"character":21,"line":907},"start":{"character":2,"line":907}}},{"kind":1,"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}}]}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":659,"character":26}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":120,"jsonrpc":"2.0","result":[{"range":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 234

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1191,"character":29}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 234

{"id":121,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":126},"start":{"character":16,"line":126}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 234

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":1191,"character":43}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 234

{"id":122,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":126},"start":{"character":16,"line":126}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":123,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":16}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":124,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":17}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":125,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":126,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":18,"line":13},"start":{"character":12,"line":13}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":20},"end":{"line":14,"character":0}},"context":{"diagnostics":[]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":128,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":20}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":129,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":12}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":1}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":130,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":1},"end":{"line":19,"character":1}},"context":{"diagnostics":[]}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":131,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":132,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":133,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 's'","range":{"end":{"character":3,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":14}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":18,"character":3},"end":{"line":18,"character":3}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":131},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":134,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":134,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'st'","range":{"end":{"character":4,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":15}}Content-Length: 783

{"id":135,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":132},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":136,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":136,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'sta'","range":{"end":{"character":5,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":16}}Content-Length: 783

{"id":137,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":133},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":138,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":138,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'stat'","range":{"end":{"character":6,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":17}}Content-Length: 783

{"id":139,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":140,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statu'","range":{"end":{"character":7,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":18}}Content-Length: 783

{"id":141,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":135},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":142,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":142,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statuc'","range":{"end":{"character":8,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":19}}Content-Length: 783

{"id":143,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":144,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statuc'","range":{"end":{"character":8,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":20}}Content-Length: 783

{"id":145,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":146,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statuc'","range":{"end":{"character":8,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":21}}Content-Length: 783

{"id":147,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":148,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statu'","range":{"end":{"character":7,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":22}}Content-Length: 783

{"id":149,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":150,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'stat'","range":{"end":{"character":6,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":23}}Content-Length: 783

{"id":151,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 488

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'stat'"}]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":153,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":154,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'stati'","range":{"end":{"character":7,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":24}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":155,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":25}}Content-Length: 783

{"id":156,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":157,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":26}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":158,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 557

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'b'","range":{"end":{"character":10,"line":18},"start":{"character":9,"line":18}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":27}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":10}},"text":"y"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":145},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":159,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 558

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'by'","range":{"end":{"character":11,"line":18},"start":{"character":9,"line":18}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":28}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":160,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 756

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'byt'; did you mean 'byte'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:127:17:\nnote: 'byte' declared here","range":{"end":{"character":12,"line":18},"start":{"character":9,"line":18}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":29}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":12}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":147},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":161,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":30}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":13}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":13}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":163,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":31}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":164,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":32}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":165,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":33}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":152},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":166,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":34}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":167,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":35}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":16}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":168,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":36}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":169,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":37}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":170,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":38}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":171,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":39}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":172,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":40}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":173,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":41}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":18,"character":18},"end":{"line":18,"character":18}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":174,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":42}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"context":{"diagnostics":[]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":175,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":176,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":43}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":20}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":177,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 965

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:18:13: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":13,"line":17},"start":{"character":12,"line":17}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":44}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":178,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 965

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:18:13: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":13,"line":17},"start":{"character":12,"line":17}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":45}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":22}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":179,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 600

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'm'","range":{"end":{"character":23,"line":18},"start":{"character":22,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":46}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":18,"character":23},"end":{"line":18,"character":23}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":180,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 601

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mi'","range":{"end":{"character":24,"line":18},"start":{"character":22,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":47}}Content-Length: 783

{"id":181,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":18,"character":24},"end":{"line":18,"character":24}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":182,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 602

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mil'","range":{"end":{"character":25,"line":18},"start":{"character":22,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":48}}Content-Length: 783

{"id":183,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":18,"character":25},"end":{"line":18,"character":25}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":184,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 603

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mill'","range":{"end":{"character":26,"line":18},"start":{"character":22,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":49}}Content-Length: 783

{"id":185,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mill'"}]}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":186,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":187,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":188,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 604

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'milli'","range":{"end":{"character":27,"line":18},"start":{"character":22,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":50}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":171},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":189,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":189,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 679

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'byte' (aka 'unsigned char') with an lvalue of type 'unsigned long ()'","range":{"end":{"character":19,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":51}}Content-Length: 783

{"id":190,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":191,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":28}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":192,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 965

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:18:13: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":13,"line":17},"start":{"character":12,"line":17}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":52}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":22}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":193,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":53}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":20}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":194,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":54}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":14}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":195,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":55}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":9}},"rangeLength":7,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":196,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":56}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"text":"  MFS.write(\"0123\");"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":197,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":57}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":22}},"context":{"diagnostics":[]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":4}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":199,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}},{"kind":1,"range":{"end":{"character":7,"line":18},"start":{"character":4,"line":18}}}]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":4}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":200,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":4}},"context":{"diagnostics":[]}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":201,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":15}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":202,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":13}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":203,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":13,"line":18},"start":{"character":8,"line":18}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":20}},"context":{"diagnostics":[]}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":204,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":20,"line":18},"start":{"character":14,"line":18}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":19}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":205,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":20}},"rangeLength":6,"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":206,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'S'","range":{"end":{"character":15,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":58}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":18,"character":15},"end":{"line":18,"character":15}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":207,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'St'","range":{"end":{"character":16,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":59}}Content-Length: 783

{"id":208,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":189},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":209,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":209,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Str'","range":{"end":{"character":17,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":60}}Content-Length: 783

{"id":210,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":18,"character":17},"end":{"line":18,"character":17}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":211,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Stri'","range":{"end":{"character":18,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":61}}Content-Length: 783

{"id":212,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":18,"character":18},"end":{"line":18,"character":18}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":213,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Strin'","range":{"end":{"character":19,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":62}}Content-Length: 783

{"id":214,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":215,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 533

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ref_non_value","message":"'String' does not refer to a value\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: declared here","range":{"end":{"character":20,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":63}}Content-Length: 783

{"id":216,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 628

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":20}},"severity":1,"code":"ref_non_value","source":"clang","message":"'String' does not refer to a value\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: declared here"}]}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":217,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":20}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":218,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":64}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":21}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 1479

{"id":219,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"documentation":"constructors\ncreates a copy of the initial value.\nif the initial value is null or invalid, or if memory allocation\nfails, the string will be marked as invalid (i.e. \"if (s)\" will\nbe false).","label":"String(const char *cstr = \"\")","parameters":[{"label":[7,28]}]},{"label":"String(char c)","parameters":[{"label":[7,13]}]},{"label":"String(String &&rval)","parameters":[{"label":[7,20]}]},{"label":"String(const String &str)","parameters":[{"label":[7,24]}]},{"label":"String(StringSumHelper &&rval)","parameters":[{"label":[7,29]}]},{"label":"String(const __FlashStringHelper *str)","parameters":[{"label":[7,37]}]},{"label":"String(int, unsigned char base = 10)","parameters":[{"label":[7,10]},{"label":[12,35]}]},{"label":"String(long, unsigned char base = 10)","parameters":[{"label":[7,11]},{"label":[13,36]}]},{"label":"String(unsigned int, unsigned char base = 10)","parameters":[{"label":[7,19]},{"label":[21,44]}]},{"label":"String(float, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,12]},{"label":[14,45]}]},{"label":"String(unsigned char, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(unsigned long, unsigned char base = 10)","parameters":[{"label":[7,20]},{"label":[22,45]}]},{"label":"String(double, unsigned char decimalPlaces = 2)","parameters":[{"label":[7,13]},{"label":[15,46]}]}]}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":220,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":221,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'm'","range":{"end":{"character":22,"line":18},"start":{"character":21,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":65}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":22}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":222,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mi'","range":{"end":{"character":23,"line":18},"start":{"character":21,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":66}}Content-Length: 783

{"id":223,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":18,"character":23},"end":{"line":18,"character":23}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":224,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mil'","range":{"end":{"character":24,"line":18},"start":{"character":21,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":67}}Content-Length: 783

{"id":225,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":18,"character":24},"end":{"line":18,"character":24}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":226,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mill'","range":{"end":{"character":25,"line":18},"start":{"character":21,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":68}}Content-Length: 783

{"id":227,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 492

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":25},"end":{"line":18,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mill'"}]}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":228,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":229,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":18,"character":25},"end":{"line":18,"character":25}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":230,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'milli'","range":{"end":{"character":26,"line":18},"start":{"character":21,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":69}}
>>>
Content-Length: 493

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'milli'"}]}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":231,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":232,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":233,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 4404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_conversion_in_cast","message":"No matching conversion for functional-style cast from 'unsigned long ()' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'StringSumHelper' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'float' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'double' for 1st argument","range":{"end":{"character":27,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":70}}
>>>
Content-Length: 3672

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":27}},"severity":1,"code":"ovl_no_viable_conversion_in_cast","source":"clang","message":"No matching conversion for functional-style cast from 'unsigned long ()' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'StringSumHelper' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'float' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'double' for 1st argument"}]}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":235,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":71}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":28}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 146

{"id":236,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"millis() -> unsigned long","parameters":[]}]}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":237,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":32},"end":{"line":18,"character":32}},"context":{"diagnostics":[]}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":238,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":8}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":239,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":13,"line":18},"start":{"character":8,"line":18}}}}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":240,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":241,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":242,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":3}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":243,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":4}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"id":244,"jsonrpc":"2.0","result":[{"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":32}},"rangeLength":28,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":245,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":72}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":6}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":246,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"text":"MFS.write(String(millis()));"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":247,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":9,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":73}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":6}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 592

{"id":248,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":28},"end":{"line":13,"character":28}},"context":{"diagnostics":[]}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":249,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":8}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":250,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":28}},"rangeLength":28,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":251,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":74}}
>>>
Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":8}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":252,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":7}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":253,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `loop`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid loop()\n```"},"range":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"text":"MFS.write(String(millis()));"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":254,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":75}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":7}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":255,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `loop`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid loop()\n```"},"range":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":256,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":29}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":257,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 4404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_conversion_in_cast","message":"No matching conversion for functional-style cast from 'unsigned long ()' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'StringSumHelper' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'float' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'double' for 1st argument","range":{"end":{"character":27,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":18},"start":{"character":4,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":76}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":9}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 592

{"id":258,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 3672

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":27}},"severity":1,"code":"ovl_no_viable_conversion_in_cast","source":"clang","message":"No matching conversion for functional-style cast from 'unsigned long ()' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'String' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'StringSumHelper' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned char' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned int' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'unsigned long' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'float' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: candidate constructor not viable: no known conversion from 'unsigned long ()' to 'double' for 1st argument"}]}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":259,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":28}},"rangeLength":8,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":260,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 533

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ref_non_value","message":"'String' does not refer to a value\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: declared here","range":{"end":{"character":20,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":77}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":20}},"rangeLength":6,"text":"\"0123\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":261,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":78}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":22}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":262,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":79}}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"text":"static "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":263,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":80}}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"text":"byte "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":264,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":81}}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"text":"mills "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":265,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":82}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":20}},"text":"= "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":266,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 965

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:18:13: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":13,"line":17},"start":{"character":12,"line":17}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":83}}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":22}},"text":"millis"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":267,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 679

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'byte' (aka 'unsigned char') with an lvalue of type 'unsigned long ()'","range":{"end":{"character":19,"line":18},"start":{"character":14,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":84}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":28}},"rangeLength":7,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":268,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":0,"line":20},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 965

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:18:13: note: to match this '{'","range":{"end":{"character":0,"line":21},"start":{"character":0,"line":21}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:22:1: error: expected '}'","range":{"end":{"character":13,"line":17},"start":{"character":12,"line":17}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":85}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":21}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":269,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":86}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":19}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":270,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":87}}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"text":"cou"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":271,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":88}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":17}},"rangeLength":4,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":272,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":89}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":13}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":273,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 388

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":90}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":8}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":274,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'stat'","range":{"end":{"character":6,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":91}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"text":"uc "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":275,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statuc'","range":{"end":{"character":8,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":92}}Content-Length: 783

{"id":276,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":277,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'statuc'","range":{"end":{"character":8,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":93}}Content-Length: 783

{"id":278,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":8}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":279,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":94}}Content-Length: 783

{"id":280,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":281,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":95}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"text":"  MFS.write(\"0123\");"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":282,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":96}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":283,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"MFS.write(String(millis()));"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":284,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":9,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":97}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":285,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":15}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":286,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":16,"line":18},"start":{"character":10,"line":18}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":14}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":287,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":16,"line":18},"start":{"character":10,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":4}},"id":288,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":288,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":27}},"id":289,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":289,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":4}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":290,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":2}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":291,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":3,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":1}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":292,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":3,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":0}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":293,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":3,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 1130

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":9}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"id":294,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":9,"line":18},"start":{"character":0,"line":18}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":0}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":295,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}},{"kind":1,"range":{"end":{"character":3,"line":18},"start":{"character":0,"line":18}}}]}
>>>
Content-Length: 1130

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":9}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":296,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":297,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":98}}
>>>
Content-Length: 1131

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":298,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":16}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"id":299,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `initialize`  \n\n---\n→ `void`  \nInitializes this instance, but interrupt based features are not available.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void initialize()\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":6,"line":12}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":17}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"id":300,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `initialize`  \n\n---\n→ `void`  \nInitializes this instance, but interrupt based features are not available.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void initialize()\n```"},"range":{"end":{"character":18,"line":12},"start":{"character":17,"line":12}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":20}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"id":301,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `millis`  \n\n---\n→ `unsigned long`  \n\n---\n```cpp\nunsigned long millis()\n```"},"range":{"end":{"character":25,"line":18},"start":{"character":19,"line":18}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":29}},"context":{"diagnostics":[]}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":302,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":29}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":303,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 593

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:12: note: to match this '('","range":{"end":{"character":29,"line":18},"start":{"character":28,"line":18}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nLibraryTests.ino.cpp:19:29: error: expected ')'","range":{"end":{"character":12,"line":18},"start":{"character":11,"line":18}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":99}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":29}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:12: note: to match this '('"}]}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":304,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":29}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:12: note: to match this '('"}]}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":305,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":29}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":306,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:12: note: to match this '('","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nLibraryTests.ino.cpp:20:1: error: expected ')'","range":{"end":{"character":12,"line":18},"start":{"character":11,"line":18}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":100}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":28}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":307,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:19: note: to match this '('","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nLibraryTests.ino.cpp:20:1: error: expected ')'","range":{"end":{"character":19,"line":18},"start":{"character":18,"line":18}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":101}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"context":{"diagnostics":[]}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":308,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"text":")"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":309,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 591

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nLibraryTests.ino.cpp:19:12: note: to match this '('","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nLibraryTests.ino.cpp:20:1: error: expected ')'","range":{"end":{"character":12,"line":18},"start":{"character":11,"line":18}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":102}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":310,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"text":")"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":311,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1239

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":103}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":29}},"context":{"diagnostics":[]}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":312,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":29}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":313,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":14},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}}]}Content-Length: 1039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":18},"start":{"character":2,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":104}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":30},"end":{"line":18,"character":30}},"context":{"diagnostics":[]}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":314,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":315,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":6}},"id":316,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":316,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8313

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":317,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":318,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":318,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":15},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 1039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":105}}
>>>
Content-Length: 341

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":2}},"text":"  MFS.write(String(millis()));"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":319,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":319,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":15},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 1866

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":14},"start":{"character":4,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":106}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":32},"end":{"line":14,"character":32}},"context":{"diagnostics":[]}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":320,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":18}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":321,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":20,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":17}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":322,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":20,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":323,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":10}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":324,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":13,"line":14},"start":{"character":8,"line":14}}}}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":325,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":13,"line":14},"start":{"character":4,"line":14}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":10}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":326,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":32}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":327,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":328,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":329,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":14}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":330,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":20,"line":14},"start":{"character":14,"line":14}}},{"kind":1,"range":{"end":{"character":18,"line":19},"start":{"character":12,"line":19}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":30}},"context":{"diagnostics":[]}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":331,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":30,"line":14},"start":{"character":14,"line":14}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":30}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":332,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":30}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":333,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":30}},"rangeLength":16,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":334,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":15},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 1882

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: requires single argument 'integer', but no arguments were provided\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: requires at least argument 'textstring', but no arguments were provided\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: requires at least argument 'number', but no arguments were provided","range":{"end":{"character":13,"line":14},"start":{"character":4,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":107}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":335,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":336,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}},"context":{"diagnostics":[]}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":337,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":338,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"text":"\"\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":339,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":15},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 1039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":108}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":340,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":15}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":341,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":342,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":343,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":109}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":2}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":344,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1413

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'S'","range":{"end":{"character":3,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":110}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":14,"character":3},"end":{"line":14,"character":3}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":345,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1414

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'St'","range":{"end":{"character":4,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":111}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":314},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":346,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1415

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Str'","range":{"end":{"character":5,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":112}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":14,"character":5},"end":{"line":14,"character":5}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":347,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Stri'","range":{"end":{"character":6,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":113}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":6}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":348,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1616

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'Strin'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":7,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":114}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":14,"character":7},"end":{"line":14,"character":7}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":349,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":115}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":8}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":350,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":116}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":9}},"text":"String(millis())"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":351,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":117}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":25},"end":{"line":14,"character":25}},"context":{"diagnostics":[]}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":352,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":25}},"rangeLength":16,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":353,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":15},"start":{"character":7,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":118}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":9}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":354,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":119}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":355,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":120}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":356,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":121}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":325},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":357,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":122}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":123},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":358,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":123}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":327},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":359,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 3851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_nonviable_condition","message":"No viable conversion from 'void' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const String &' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'String &&' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'StringSumHelper &&' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: explicit constructor is not a candidate","range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":124}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":125},"contentChanges":[{"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":328},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":360,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 3851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_nonviable_condition","message":"No viable conversion from 'void' to 'String'\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:59:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:60:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const String &' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:61:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'const __FlashStringHelper *' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:63:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'String &&' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:64:2:\nnote: candidate constructor not viable: cannot convert argument of incomplete type 'void' to 'StringSumHelper &&' for 1st argument\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:66:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:67:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:68:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:69:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:70:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:71:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:72:11:\nnote: explicit constructor is not a candidate\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:73:11:\nnote: explicit constructor is not a candidate","range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":125}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":126},"contentChanges":[{"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}},"text":"String(millis())"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":361,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":126}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":32},"end":{"line":14,"character":32}},"context":{"diagnostics":[]}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":362,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":14,"character":32},"end":{"line":14,"character":32}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":363,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1039

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":127}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":33},"end":{"line":14,"character":33}},"context":{"diagnostics":[]}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":364,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":18},"end":{"line":15,"character":18}},"context":{"diagnostics":[]}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":365,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":17},"end":{"line":15,"character":17}},"context":{"diagnostics":[]}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":366,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":16},"end":{"line":15,"character":16}},"context":{"diagnostics":[]}},"id":367,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":367,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":16}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp"}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 596

{"id":368,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":0,"line":22},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}}]}Content-Length: 762

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":17,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:11:14: note: to match this '{'","range":{"end":{"character":0,"line":23},"start":{"character":0,"line":23}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:24:1: error: expected '}'","range":{"end":{"character":14,"line":10},"start":{"character":13,"line":10}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905443115/sketch/LibraryTests.ino.cpp","version":128}}






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":22928,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server171184855\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1077

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 13 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(\"0123\");\n  String mils = String(millis());\n    MFS.write(\"\");\n  }\n\n\nvoid loop() {\n  MFS.write(String(millis()));\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 475

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":17}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/32","percentage":0}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/32","percentage":3.125}}}Content-Length: 1037

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 781

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 594

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":0,"line":22},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}}]}Content-Length: 760

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":17,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nLibraryTests.ino.cpp:11:14: note: to match this '{'","range":{"end":{"character":0,"line":23},"start":{"character":0,"line":23}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nLibraryTests.ino.cpp:24:1: error: expected '}'","range":{"end":{"character":14,"line":10},"start":{"character":13,"line":10}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 475

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":17}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":6,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'm'","range":{"end":{"character":15,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":15}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":7,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":7,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1221

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mi'","range":{"end":{"character":16,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":4}}Content-Length: 781

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":15,"character":16},"end":{"line":15,"character":16}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":9,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 781

{"id":9,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1546

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'mil'; did you mean 'mils'? (fix available)\n\nLibraryTests.ino.cpp:15:10: note: 'mils' declared here","range":{"end":{"character":17,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"message":"'mils' declared here\n\nLibraryTests.ino.cpp:16:15: error: use of undeclared identifier 'mil'; did you mean 'mils'?","range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}},"severity":3},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":5}}Content-Length: 782

{"id":10,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":15,"character":17},"end":{"line":15,"character":17}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":7},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":11,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nLibraryTests.ino.cpp:16:14: note: to match this '('","range":{"end":{"character":21,"line":15},"start":{"character":18,"line":15}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nLibraryTests.ino.cpp:16:19: error: expected ')'","range":{"end":{"character":14,"line":15},"start":{"character":13,"line":15}},"severity":3},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 782

{"id":12,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":18},"end":{"line":15,"character":18}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 513

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":18},"end":{"line":15,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":18},"end":{"line":15,"character":21}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nLibraryTests.ino.cpp:16:14: note: to match this '('"}]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/32","percentage":6.25}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/32","percentage":9.375}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 145

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/32","percentage":12.5}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/32","percentage":15.625}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/32","percentage":18.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/32","percentage":21.875}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/32","percentage":25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/32","percentage":28.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/32","percentage":31.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/32","percentage":34.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/32","percentage":37.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/32","percentage":40.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/32","percentage":43.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/32","percentage":46.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/32","percentage":50}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/32","percentage":53.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/32","percentage":56.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/32","percentage":59.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/32","percentage":62.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/32","percentage":65.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/32","percentage":68.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/32","percentage":71.875}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/32","percentage":75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/32","percentage":78.125}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/32","percentage":81.25}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/32","percentage":84.375}}}Content-Length: 146

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/32","percentage":87.5}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/32","percentage":90.625}}}Content-Length: 147

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/32","percentage":93.75}}}Content-Length: 148

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/32","percentage":96.875}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 1081

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 13 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  MFS.write(\"0123\");\n  String mils = String(millis());\n    MFS.write(mils);\n  }\n\n\nvoid loop() {\n  MFS.write(String(millis()));\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 1864

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":7}}Content-Length: 782

{"id":16,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":20,"character":21}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 253

{"id":18,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `millis`  \n\n---\n→ `unsigned long`  \n\n---\n```cpp\nunsigned long millis()\n```"},"range":{"end":{"character":25,"line":20},"start":{"character":19,"line":20}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":19,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":13,"line":15},"start":{"character":8,"line":15}}}}
>>>
Content-Length: 1131

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"id":20,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":13,"line":15},"start":{"character":4,"line":15}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":13}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":21,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":14}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":22,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}}},{"kind":1,"range":{"end":{"character":18,"line":15},"start":{"character":14,"line":15}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"context":{"diagnostics":[]}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 782

{"id":24,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1263

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_indirection_requires_pointer","message":"Indirection requires pointer operand ('String' invalid)","range":{"end":{"character":15,"line":15},"start":{"character":14,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":8}}
>>>
Content-Length: 531

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":15}},"severity":1,"code":"typecheck_indirection_requires_pointer","source":"clang","message":"Indirection requires pointer operand ('String' invalid)"}]}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":25,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":26,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1864

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":9}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"context":{"diagnostics":[]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"text":"\u0026"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":28,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1871

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'float' for 1st argument","range":{"end":{"character":13,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":15},"end":{"line":15,"character":15}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":30,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1865

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":13,"line":15},"start":{"character":4,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":3}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":32,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":4}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"id":33,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}},{"kind":1,"range":{"end":{"character":7,"line":15},"start":{"character":4,"line":15}}},{"kind":1,"range":{"end":{"character":5,"line":20},"start":{"character":2,"line":20}}}]}
>>>
Content-Length: 1130

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":13}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":34,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":35,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1865

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":12}}
>>>
Content-Length: 1130

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":15}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"id":37,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mils`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString mils = String(millis())\n```"},"range":{"end":{"character":15,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":16}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":38,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":22,"line":14},"start":{"character":16,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":15}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"id":39,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mils`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString mils = String(millis())\n```"},"range":{"end":{"character":15,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":12}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"id":40,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mils`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString mils = String(millis())\n```"},"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":12}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":41,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}}},{"kind":1,"range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":13}},"rangeLength":4,"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":43,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1224

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mils'","range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":44,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 1224

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mils'","range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":14}}Content-Length: 782

{"id":45,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"context":{"diagnostics":[]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":47,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"text":"x"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":48,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1224

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mils'","range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":15}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":49,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 1224

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'mils'","range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":16}}Content-Length: 782

{"id":50,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":52,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":16}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":53,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":44},"start":{"character":6,"line":44}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":16}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":54,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":22,"line":14},"start":{"character":16,"line":14}}}}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"id":55,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 11030

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h","languageId":"cpp","version":1,"text":"/*\n  WString.h - String library for Wiring \u0026 Arduino\n  ...mostly rewritten by Paul Stoffregen...\n  Copyright (c) 2009-10 Hernando Barragan.  All right reserved.\n  Copyright 2011, Paul Stoffregen, paul@pjrc.com\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef String_class_h\n#define String_class_h\n#ifdef __cplusplus\n\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cctype.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n\n// When compiling programs with this class, the following gcc parameters\n// dramatically increase performance and memory (RAM) efficiency, typically\n// with little or no increase in code size.\n//     -felide-constructors\n//     -std=c++0x\n\nclass __FlashStringHelper;\n#define F(string_literal) (reinterpret_cast\u003cconst __FlashStringHelper *\u003e(PSTR(string_literal)))\n\n// An inherited class for holding the result of a concatenation.  These\n// result objects are assumed to be writable by subsequent concatenations.\nclass StringSumHelper;\n\n// The string class\nclass String\n{\n\t// use a function pointer to allow for \"if (s)\" without the\n\t// complications of an operator bool(). for more information, see:\n\t// http://www.artima.com/cppsource/safebool.html\n\ttypedef void (String::*StringIfHelperType)() const;\n\tvoid StringIfHelper() const {}\n\npublic:\n\t// constructors\n\t// creates a copy of the initial value.\n\t// if the initial value is null or invalid, or if memory allocation\n\t// fails, the string will be marked as invalid (i.e. \"if (s)\" will\n\t// be false).\n\tString(const char *cstr = \"\");\n\tString(const String \u0026str);\n\tString(const __FlashStringHelper *str);\n       #if __cplusplus \u003e= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)\n\tString(String \u0026\u0026rval);\n\tString(StringSumHelper \u0026\u0026rval);\n\t#endif\n\texplicit String(char c);\n\texplicit String(unsigned char, unsigned char base=10);\n\texplicit String(int, unsigned char base=10);\n\texplicit String(unsigned int, unsigned char base=10);\n\texplicit String(long, unsigned char base=10);\n\texplicit String(unsigned long, unsigned char base=10);\n\texplicit String(float, unsigned char decimalPlaces=2);\n\texplicit String(double, unsigned char decimalPlaces=2);\n\t~String(void);\n\n\t// memory management\n\t// return true on success, false on failure (in which case, the string\n\t// is left unchanged).  reserve(0), if successful, will validate an\n\t// invalid string (i.e., \"if (s)\" will be true afterwards)\n\tunsigned char reserve(unsigned int size);\n\tinline unsigned int length(void) const {return len;}\n\n\t// creates a copy of the assigned value.  if the value is null or\n\t// invalid, or if the memory allocation fails, the string will be\n\t// marked as invalid (\"if (s)\" will be false).\n\tString \u0026 operator = (const String \u0026rhs);\n\tString \u0026 operator = (const char *cstr);\n\tString \u0026 operator = (const __FlashStringHelper *str);\n       #if __cplusplus \u003e= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)\n\tString \u0026 operator = (String \u0026\u0026rval);\n\tString \u0026 operator = (StringSumHelper \u0026\u0026rval);\n\t#endif\n\n\t// concatenate (works w/ built-in types)\n\n\t// returns true on success, false on failure (in which case, the string\n\t// is left unchanged).  if the argument is null or invalid, the\n\t// concatenation is considered unsucessful.\n\tunsigned char concat(const String \u0026str);\n\tunsigned char concat(const char *cstr);\n\tunsigned char concat(char c);\n\tunsigned char concat(unsigned char c);\n\tunsigned char concat(int num);\n\tunsigned char concat(unsigned int num);\n\tunsigned char concat(long num);\n\tunsigned char concat(unsigned long num);\n\tunsigned char concat(float num);\n\tunsigned char concat(double num);\n\tunsigned char concat(const __FlashStringHelper * str);\n\n\t// if there's not enough memory for the concatenated value, the string\n\t// will be left unchanged (but this isn't signalled in any way)\n\tString \u0026 operator += (const String \u0026rhs)\t{concat(rhs); return (*this);}\n\tString \u0026 operator += (const char *cstr)\t\t{concat(cstr); return (*this);}\n\tString \u0026 operator += (char c)\t\t\t{concat(c); return (*this);}\n\tString \u0026 operator += (unsigned char num)\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (int num)\t\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (unsigned int num)\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (long num)\t\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (unsigned long num)\t{concat(num); return (*this);}\n\tString \u0026 operator += (float num)\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (double num)\t\t{concat(num); return (*this);}\n\tString \u0026 operator += (const __FlashStringHelper *str){concat(str); return (*this);}\n\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, const String \u0026rhs);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, const char *cstr);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, char c);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, unsigned char num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, int num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, unsigned int num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, long num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, unsigned long num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, float num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, double num);\n\tfriend StringSumHelper \u0026 operator + (const StringSumHelper \u0026lhs, const __FlashStringHelper *rhs);\n\n\t// comparison (only works w/ Strings and \"strings\")\n\toperator StringIfHelperType() const { return buffer ? \u0026String::StringIfHelper : 0; }\n\tint compareTo(const String \u0026s) const;\n\tunsigned char equals(const String \u0026s) const;\n\tunsigned char equals(const char *cstr) const;\n\tunsigned char operator == (const String \u0026rhs) const {return equals(rhs);}\n\tunsigned char operator == (const char *cstr) const {return equals(cstr);}\n\tunsigned char operator != (const String \u0026rhs) const {return !equals(rhs);}\n\tunsigned char operator != (const char *cstr) const {return !equals(cstr);}\n\tunsigned char operator \u003c  (const String \u0026rhs) const;\n\tunsigned char operator \u003e  (const String \u0026rhs) const;\n\tunsigned char operator \u003c= (const String \u0026rhs) const;\n\tunsigned char operator \u003e= (const String \u0026rhs) const;\n\tunsigned char equalsIgnoreCase(const String \u0026s) const;\n\tunsigned char startsWith( const String \u0026prefix) const;\n\tunsigned char startsWith(const String \u0026prefix, unsigned int offset) const;\n\tunsigned char endsWith(const String \u0026suffix) const;\n\n\t// character acccess\n\tchar charAt(unsigned int index) const;\n\tvoid setCharAt(unsigned int index, char c);\n\tchar operator [] (unsigned int index) const;\n\tchar\u0026 operator [] (unsigned int index);\n\tvoid getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;\n\tvoid toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const\n\t\t{ getBytes((unsigned char *)buf, bufsize, index); }\n\tconst char* c_str() const { return buffer; }\n\tchar* begin() { return buffer; }\n\tchar* end() { return buffer + length(); }\n\tconst char* begin() const { return c_str(); }\n\tconst char* end() const { return c_str() + length(); }\n\n\t// search\n\tint indexOf( char ch ) const;\n\tint indexOf( char ch, unsigned int fromIndex ) const;\n\tint indexOf( const String \u0026str ) const;\n\tint indexOf( const String \u0026str, unsigned int fromIndex ) const;\n\tint lastIndexOf( char ch ) const;\n\tint lastIndexOf( char ch, unsigned int fromIndex ) const;\n\tint lastIndexOf( const String \u0026str ) const;\n\tint lastIndexOf( const String \u0026str, unsigned int fromIndex ) const;\n\tString substring( unsigned int beginIndex ) const { return substring(beginIndex, len); };\n\tString substring( unsigned int beginIndex, unsigned int endIndex ) const;\n\n\t// modification\n\tvoid replace(char find, char replace);\n\tvoid replace(const String\u0026 find, const String\u0026 replace);\n\tvoid remove(unsigned int index);\n\tvoid remove(unsigned int index, unsigned int count);\n\tvoid toLowerCase(void);\n\tvoid toUpperCase(void);\n\tvoid trim(void);\n\n\t// parsing/conversion\n\tlong toInt(void) const;\n\tfloat toFloat(void) const;\n\tdouble toDouble(void) const;\n\nprotected:\n\tchar *buffer;\t        // the actual char array\n\tunsigned int capacity;  // the array length minus one (for the '\\0')\n\tunsigned int len;       // the String length (not counting the '\\0')\nprotected:\n\tvoid init(void);\n\tvoid invalidate(void);\n\tunsigned char changeBuffer(unsigned int maxStrLen);\n\tunsigned char concat(const char *cstr, unsigned int length);\n\n\t// copy and move\n\tString \u0026 copy(const char *cstr, unsigned int length);\n\tString \u0026 copy(const __FlashStringHelper *pstr, unsigned int length);\n       #if __cplusplus \u003e= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)\n\tvoid move(String \u0026rhs);\n\t#endif\n};\n\nclass StringSumHelper : public String\n{\npublic:\n\tStringSumHelper(const String \u0026s) : String(s) {}\n\tStringSumHelper(const char *p) : String(p) {}\n\tStringSumHelper(char c) : String(c) {}\n\tStringSumHelper(unsigned char num) : String(num) {}\n\tStringSumHelper(int num) : String(num) {}\n\tStringSumHelper(unsigned int num) : String(num) {}\n\tStringSumHelper(long num) : String(num) {}\n\tStringSumHelper(unsigned long num) : String(num) {}\n\tStringSumHelper(float num) : String(num) {}\n\tStringSumHelper(double num) : String(num) {}\n};\n\n#endif  // __cplusplus\n#endif  // String_class_h\n"}},"jsonrpc":"2.0"}Content-Length: 195

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/WString.h"}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":56,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":15},"start":{"character":6,"line":15}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":57,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"id":58,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},{"range":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 296

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":10},"end":{"line":15,"character":10}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":451,"character":12}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":61,"jsonrpc":"2.0","result":[{"range":{"end":{"character":18,"line":451},"start":{"character":7,"line":451}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"range":{"start":{"line":449,"character":22},"end":{"line":449,"character":22}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":28}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":63,"jsonrpc":"2.0","result":[{"range":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":11}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":64,"jsonrpc":"2.0","result":[{"range":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":8}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"id":65,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `initialize`  \n\n---\n→ `void`  \nInitializes this instance, but interrupt based features are not available.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void initialize()\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":6,"line":12}}}}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":66,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":67,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":68,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 197

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 13263

{"id":69,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"context":{"diagnostics":[]}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":30}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":71,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":33,"line":504},"start":{"character":28,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":39}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":72,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":40}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":73,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":39}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":74,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":26}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"id":75,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * text`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::write(const char *text, byte rightJustify = 0)\n```"},"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":27}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 483

{"id":76,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":456},"start":{"character":4,"line":456}}},{"kind":1,"range":{"end":{"character":9,"line":461},"start":{"character":4,"line":461}}},{"kind":1,"range":{"end":{"character":9,"line":483},"start":{"character":4,"line":483}}},{"kind":1,"range":{"end":{"character":7,"line":499},"start":{"character":2,"line":499}}},{"kind":1,"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":50}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":77,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayBuf`  \n\n---\nType: `byte [4]`  \nValue = `{0, 0, 0, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte displayBuf[] = {0, 0, 0, 0}\n```"},"range":{"end":{"character":51,"line":506},"start":{"character":41,"line":506}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":33}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":78,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":42}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":79,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}}}
>>>
Content-Length: 239

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":42}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 581

{"id":80,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}},{"kind":2,"range":{"end":{"character":14,"line":510},"start":{"character":10,"line":510}}},{"kind":3,"range":{"end":{"character":53,"line":510},"start":{"character":49,"line":510}}},{"kind":2,"range":{"end":{"character":13,"line":514},"start":{"character":9,"line":514}}},{"kind":2,"range":{"end":{"character":51,"line":522},"start":{"character":47,"line":522}}},{"kind":2,"range":{"end":{"character":49,"line":528},"start":{"character":45,"line":528}}}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":39}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":81,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":41}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"id":82,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":39}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":83,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":84,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":14}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":85,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 491

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mils'"}]}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":86,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":12}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":87,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":12}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":89,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":12}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":90,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":13}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":91,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":16}},"rangeLength":4,"text":"text"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":92,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1865

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":17}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":16},"end":{"line":15,"character":16}},"context":{"diagnostics":[]}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":93,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":12}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"id":94,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString text = String(millis())\n```"},"range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":12}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":95,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":14},"start":{"character":9,"line":14}}},{"kind":1,"range":{"end":{"character":16,"line":15},"start":{"character":12,"line":15}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":97,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1264

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_indirection_requires_pointer","message":"Indirection requires pointer operand ('String' invalid)","range":{"end":{"character":13,"line":15},"start":{"character":12,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":18}}
>>>
Content-Length: 531

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":13}},"severity":1,"code":"typecheck_indirection_requires_pointer","source":"clang","message":"Indirection requires pointer operand ('String' invalid)"}]}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":98,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 782

{"id":99,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1865

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":19}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":100,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"text":"\u0026"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":101,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1871

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String *' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":20}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":13}},"context":{"diagnostics":[]}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":103,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1865

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":21}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":104,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":30},"end":{"line":20,"character":30}},"context":{"diagnostics":[]}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":20,"character":2},"end":{"line":20,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":21,"character":0}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":107,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":30}},"rangeLength":30,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":108,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":3,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":22}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":3},"end":{"line":16,"character":3}},"context":{"diagnostics":[]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":2}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":110,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":2}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":111,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"context":{"diagnostics":[]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":113,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":23}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":0}},"context":{"diagnostics":[]}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":114,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"context":{"diagnostics":[]}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":115,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":15}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"id":116,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString text = String(millis())\n```"},"range":{"end":{"character":15,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":16}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 241

{"id":117,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":22,"line":14},"start":{"character":16,"line":14}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":15}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"id":118,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString text = String(millis())\n```"},"range":{"end":{"character":15,"line":14},"start":{"character":14,"line":14}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":16}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":119,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}}},{"kind":1,"range":{"end":{"character":22,"line":14},"start":{"character":16,"line":14}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":32}},"context":{"diagnostics":[]}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":120,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":32,"line":14},"start":{"character":16,"line":14}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":32}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"id":121,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `String`  \n\n---\n```cpp\n// In String\npublic: explicit String(unsigned long, unsigned char base = 10)\n```"},"range":{"end":{"character":33,"line":14},"start":{"character":32,"line":14}}}}
>>>
Content-Length: 406

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":14,"character":32},"end":{"line":14,"character":32}},"text":"\""},{"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}},"text":"\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":122,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":25}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":17},"end":{"line":14,"character":33}},"context":{"diagnostics":[]}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":123,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":33,"line":14},"start":{"character":17,"line":14}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":17},"end":{"line":14,"character":33}},"context":{"diagnostics":[]}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":124,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":33,"line":14},"start":{"character":17,"line":14}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":14,"character":17},"end":{"line":14,"character":33}},"rangeLength":16,"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":125,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":26}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":18}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":126,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":27}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"text":"2"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":127,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":28}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"text":"3"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":128,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":29}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":23},"end":{"line":14,"character":23}},"context":{"diagnostics":[]}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":130,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":131,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":32}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":132,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":33,"line":504},"start":{"character":28,"line":504}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":37}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":133,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":36}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":134,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":41}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":135,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In MultiFuncShield::write\nconst char *text\n```"},"range":{"end":{"character":44,"line":504},"start":{"character":40,"line":504}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":5}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":136,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":6,"line":506},"start":{"character":2,"line":506}}}}
>>>
Content-Length: 240

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":10}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 1306

{"id":137,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":506},"start":{"character":7,"line":506}}},{"kind":1,"range":{"end":{"character":51,"line":506},"start":{"character":41,"line":506}}},{"kind":1,"range":{"end":{"character":46,"line":510},"start":{"character":36,"line":510}}},{"kind":1,"range":{"end":{"character":18,"line":518},"start":{"character":8,"line":518}}},{"kind":1,"range":{"end":{"character":38,"line":518},"start":{"character":28,"line":518}}},{"kind":1,"range":{"end":{"character":18,"line":522},"start":{"character":8,"line":522}}},{"kind":1,"range":{"end":{"character":16,"line":528},"start":{"character":6,"line":528}}},{"kind":1,"range":{"end":{"character":32,"line":533},"start":{"character":22,"line":533}}},{"kind":1,"range":{"end":{"character":14,"line":535},"start":{"character":4,"line":535}}},{"kind":1,"range":{"end":{"character":33,"line":543},"start":{"character":23,"line":543}}},{"kind":1,"range":{"end":{"character":35,"line":546},"start":{"character":25,"line":546}}},{"kind":1,"range":{"end":{"character":39,"line":550},"start":{"character":29,"line":550}}},{"kind":1,"range":{"end":{"character":40,"line":561},"start":{"character":30,"line":561}}},{"kind":1,"range":{"end":{"character":35,"line":563},"start":{"character":25,"line":563}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":10}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"id":138,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayBuf`  \n\n---\nType: `byte [4]`  \nValue = `{0, 0, 0, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte displayBuf[] = {0, 0, 0, 0}\n```"},"range":{"end":{"character":17,"line":506},"start":{"character":7,"line":506}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":19}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":139,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":506,"character":45}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"id":140,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `displayBuf`  \n\n---\nType: `byte [4]`  \nValue = `{0, 0, 0, 0}`  \n\n---\n```cpp\n// In MultiFuncShield::write\nbyte displayBuf[] = {0, 0, 0, 0}\n```"},"range":{"end":{"character":51,"line":506},"start":{"character":41,"line":506}}}}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":7}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":141,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":504},"start":{"character":5,"line":504}}}}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":22}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 450

{"id":142,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * text`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::write(const char *text, byte rightJustify = 0)\n```"},"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":22}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":143,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":21}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 234

{"id":144,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":22,"line":504},"start":{"character":20,"line":504}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":22}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":145,"jsonrpc":"2.0","result":[{"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":22}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 450

{"id":146,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `MultiFuncShield::write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * text`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void MultiFuncShield::write(const char *text, byte rightJustify = 0)\n```"},"range":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 783

{"id":147,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"write(const char *text, byte rightJustify)"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 972

{"id":148,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"write","range":{"end":{"character":42,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1466

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":30}}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":14}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":149,"jsonrpc":"2.0","result":[{"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":13}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":150,"jsonrpc":"2.0","result":[{"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":42},"end":{"line":18,"character":42}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":5}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 334

{"id":152,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `write`  \n\n---\n→ `int`  \nParameters:  \n- `const char * text`\n- `byte rightJustify`\n\n---\n```cpp\npublic: int write(const char *text, byte rightJustify)\n```"},"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":2}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 334

{"id":153,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `write`  \n\n---\n→ `int`  \nParameters:  \n- `const char * text`\n- `byte rightJustify`\n\n---\n```cpp\npublic: int write(const char *text, byte rightJustify)\n```"},"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":3}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 334

{"id":154,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `write`  \n\n---\n→ `int`  \nParameters:  \n- `const char * text`\n- `byte rightJustify`\n\n---\n```cpp\npublic: int write(const char *text, byte rightJustify)\n```"},"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}}}
>>>
Content-Length: 507

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":5}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":18,"character":42},"end":{"line":18,"character":42}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 972

{"id":156,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"write","range":{"end":{"character":42,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1466

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":31}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":18,"character":43},"end":{"line":18,"character":43}},"text":"{}"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 972

{"id":157,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"write","range":{"end":{"character":45,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":32}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":44},"end":{"line":18,"character":44}},"context":{"diagnostics":[]}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":18,"character":44},"end":{"line":18,"character":44}},"text":"\n  \n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 971

{"id":159,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"write","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":33}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":2}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":160,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":18},"start":{"character":0,"line":18}}}]}
>>>
Content-Length: 507

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":5}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":161,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 415

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"v"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 972

{"id":162,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"vwrite","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":6,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":6,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":35}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":18,"character":1},"end":{"line":18,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 973

{"id":163,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"vowrite","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":7,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":36}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":2}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":154},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 974

{"id":164,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"voiwrite","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":8,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":37}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":18,"character":3},"end":{"line":18,"character":3}},"text":"d"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 975

{"id":165,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"voidwrite","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":0,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1241

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":9,"line":18},"start":{"character":0,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":38}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 972

{"id":166,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"write","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":39}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"context":{"diagnostics":[]}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":167,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":10}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":168,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":10}},"context":{"diagnostics":[]}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":169,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":10}},"rangeLength":5,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 967

{"id":170,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"f","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":6,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":40}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 968

{"id":171,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"fo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":7,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":41}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":172,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":42}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":2}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":174,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":3}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":175,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":5}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":176,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":18}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":177,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":17}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":178,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":18},"end":{"line":15,"character":18}},"context":{"diagnostics":[]}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":179,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":180,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":43}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":2}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":181,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":19},"start":{"character":2,"line":19}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":44}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":19,"character":3},"end":{"line":19,"character":3}},"text":"/"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":172},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":182,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":45}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"context":{"diagnostics":[]}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":183,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":29}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":184,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":31,"line":18},"start":{"character":27,"line":18}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":33}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":185,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":44,"line":18},"start":{"character":32,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":32},"end":{"line":18,"character":44}},"context":{"diagnostics":[]}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":186,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":44}},"context":{"diagnostics":[]}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":187,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":28}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":188,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"end":{"character":31,"line":18},"start":{"character":27,"line":18}}}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":44}},"rangeLength":17,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":189,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":28,"line":18},"start":{"character":27,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":46}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":27}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":190,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"missing_param","message":"Expected parameter declarator","range":{"end":{"character":27,"line":18},"start":{"character":26,"line":18}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":47}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":18,"character":25},"end":{"line":18,"character":26}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":191,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":48}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":28}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":192,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":25},"end":{"line":18,"character":25}},"context":{"diagnostics":[]}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":193,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":5}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":194,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":4}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":195,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":4}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":196,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}}},{"kind":1,"range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}}},{"kind":1,"range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"context":{"diagnostics":[]}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":197,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":6}},"context":{"diagnostics":[]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":11}},"context":{"diagnostics":[]}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":199,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":7}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":200,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":11}},"rangeLength":9,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":201,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1219

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":3,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":49}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"text":"p"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":202,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fp'","range":{"end":{"character":4,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":50}}Content-Length: 969

{"id":203,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":4}},"text":"p"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":193},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":204,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":204,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1221

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fpp'","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":51}}Content-Length: 969

{"id":205,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fpp'"}]}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":206,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":207,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":208,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fp'","range":{"end":{"character":4,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":52}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 969

{"id":209,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 1219

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":3,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":53}}Content-Length: 969

{"id":210,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 1217

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":54},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 12 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 15 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  MFS.initialize();    // initialize multifunction shield library\n  f(\"0123\");\n  String text = \"0123\";\n  MFS.write(text);\n}\n\nvoid foo(const char *text) {\n  //\n}\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":15,"character":3},"end":{"line":15,"character":3}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":211,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":4,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":55}}Content-Length: 1156

{"id":212,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":4}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":198},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":213,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":213,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1038

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_member_function_in_call","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument","range":{"end":{"character":11,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":56}}Content-Length: 1156

{"id":214,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":5},"end":{"line":15,"character":5}},"context":{"diagnostics":[]}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":215,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":5},"end":{"line":15,"character":5}},"context":{"diagnostics":[]}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":216,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":6}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":217,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":17},"start":{"character":6,"line":17}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":4}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"id":218,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nextern MultiFuncShield MFS\n```"},"range":{"end":{"character":5,"line":17},"start":{"character":2,"line":17}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":5}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":219,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":8,"line":16},"start":{"character":2,"line":16}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":10}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"id":220,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString text = \"0123\"\n```"},"range":{"end":{"character":13,"line":16},"start":{"character":9,"line":16}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":8}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":221,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":8,"line":16},"start":{"character":2,"line":16}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":10}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"id":222,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `class String`  \n\n---\n```cpp\n// In setup\nString text = \"0123\"\n```"},"range":{"end":{"character":13,"line":16},"start":{"character":9,"line":16}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":11}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":223,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":16},"start":{"character":9,"line":16}}},{"kind":1,"range":{"end":{"character":16,"line":17},"start":{"character":12,"line":17}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":9},"end":{"line":16,"character":13}},"context":{"diagnostics":[]}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":224,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":5}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":225,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":5,"line":17},"start":{"character":2,"line":17}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":4}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":226,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":14},"start":{"character":2,"line":14}}},{"kind":1,"range":{"end":{"character":5,"line":17},"start":{"character":2,"line":17}}}]}
>>>
Content-Length: 1131

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"id":227,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":6,"line":17},"start":{"character":2,"line":17}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":228,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":11,"line":17},"start":{"character":2,"line":17}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":17,"character":7}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":229,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `const char * textstring`\n- `byte rightJustify = 0`\n\nWrites to the LED digit display.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void write(const char *textstring, byte rightJustify = 0)\n```"},"range":{"end":{"character":11,"line":17},"start":{"character":6,"line":17}}}}
>>>
Content-Length: 1132

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:87:10:\nnote: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:88:10:\nnote: candidate function not viable: no known conversion from 'String' to 'int' for 1st argument\n\nC:\\Users\\banks\\Documents\\Arduino\\libraries\\MultiFuncShield-Library\\MultiFuncShield.h:89:10:\nnote: candidate function not viable: no known conversion from 'String' to 'float' for 1st argument"}]}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"id":230,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":11,"line":17},"start":{"character":2,"line":17}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":11}},"rangeLength":9,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1156

{"id":231,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":3,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":57}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":17,"character":3},"end":{"line":17,"character":3}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":232,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":4,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":58}}Content-Length: 1156

{"id":233,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":4}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":217},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":234,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":234,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:18:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":59}}Content-Length: 1156

{"id":235,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":236,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":237,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":65}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":238,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":65},"end":{"line":15,"character":0}},"context":{"diagnostics":[]}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":239,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":65}},"context":{"diagnostics":[]}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":240,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":65}},"rangeLength":65,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":241,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":9,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":17},"start":{"character":2,"line":17}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:18:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":60}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":13,"character":43},"end":{"line":14,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":242,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:17:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":61}}Content-Length: 1156

{"id":243,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":13,"character":42},"end":{"line":13,"character":43}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":244,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:17:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":62}}Content-Length: 1156

{"id":245,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":42},"end":{"line":13,"character":42}},"context":{"diagnostics":[]}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":246,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":247,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":40}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":248,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":227},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":42}},"context":{"diagnostics":[]}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":249,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":42}},"context":{"diagnostics":[]}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":250,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":42}},"rangeLength":42,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":251,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:17:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":63}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":12,"character":14},"end":{"line":13,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":252,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":64}}Content-Length: 1156

{"id":253,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[]}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":254,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":255,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 1101

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":65},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 13 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup() {\n  foo(\"0123\");\n  String text = \"0123\";\n  foo(text);\n}\n\nvoid foo(const char *text) {\n  //\n}\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":65}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"context":{"diagnostics":[]}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":256,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":257,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":258,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":66}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"text":"D"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":259,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":67}}Content-Length: 1156

{"id":260,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":19,"character":6},"end":{"line":19,"character":6}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":261,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":68}}Content-Length: 1156

{"id":262,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":19,"character":7},"end":{"line":19,"character":7}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":263,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":69}}Content-Length: 1156

{"id":264,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":8}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":265,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":70}}Content-Length: 1156

{"id":266,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":19,"character":9},"end":{"line":19,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1156

{"id":267,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":71}}Content-Length: 1156

{"id":268,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":269,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":72}}Content-Length: 1156

{"id":270,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":11}},"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":271,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":73}}Content-Length: 1156

{"id":272,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":19,"character":12},"end":{"line":19,"character":12}},"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":273,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":74}}Content-Length: 1156

{"id":274,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"context":{"diagnostics":[]}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":275,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":276,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":1}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":277,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":1},"end":{"line":20,"character":1}},"context":{"diagnostics":[]}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":278,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":20,"character":1},"end":{"line":20,"character":1}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":279,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":75}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":20,"character":1}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":280,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 1156

{"id":281,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 637

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":282,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":283,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":1},"end":{"line":16,"character":1}},"context":{"diagnostics":[]}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":284,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":6}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":285,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":1,"range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":10}},"context":{"diagnostics":[]}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":286,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":10}},"rangeLength":5,"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 1151

{"id":287,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"b","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":6,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":76}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":253},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":288,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":289,"jsonrpc":"2.0"}
<<<
Content-Length: 1152

{"id":288,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"ba","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":7,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":77}}Content-Length: 1152

{"id":289,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"ba","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":7,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 1153

{"id":290,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":78}}Content-Length: 1153

{"id":291,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"context":{"diagnostics":[]}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":292,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 1153

{"id":293,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":10,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":294,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1108

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":79},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar() {\n  foo(\"0123\");\n  String text = \"0123\";\n  foo(text);\n}\n\nvoid foo(const char *text) {\n  // Do stuff\n}\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":1},"end":{"line":20,"character":1}},"context":{"diagnostics":[]}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":295,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 822

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":79}}Content-Length: 1150

{"id":296,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":297,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":298,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":299,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":2}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"id":300,"jsonrpc":"2.0","result":[{"range":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":17}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":301,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":13}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":302,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":13}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"id":303,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `text`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In foo\nconst char *text\n```"},"range":{"end":{"character":14,"line":18},"start":{"character":9,"line":18}}}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":1},"end":{"line":20,"character":1}},"context":{"diagnostics":[]}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":304,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":13,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":305,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":0},"end":{"line":20,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument"}]}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":306,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":9}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":307,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":16,"character":1},"end":{"line":16,"character":1}},"context":{"diagnostics":[]}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":308,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":3}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":309,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":2}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":310,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":2}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 124

{"id":311,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":2}},"context":{"diagnostics":[]}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":312,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":2}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1150

{"id":313,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1195

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'cString'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":9,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":80}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":14,"character":3},"end":{"line":14,"character":3}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":314,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 1197

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'coString'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":10,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":81}}Content-Length: 1150

{"id":315,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":275},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":316,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":316,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1198

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'conString'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":11,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":82}}Content-Length: 1150

{"id":317,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":14,"character":5},"end":{"line":14,"character":5}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":276},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":318,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":319,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":318,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 389

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'consString'","range":{"end":{"character":12,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":83}}Content-Length: 1150

{"id":319,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":6}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":320,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'constString'","range":{"end":{"character":13,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":84}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":14,"character":7},"end":{"line":14,"character":7}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":321,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":85}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":8}},"context":{"diagnostics":[]}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":322,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":323,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":12},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":324,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":5}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":325,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":6}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":326,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":19,"line":14},"start":{"character":15,"line":14}}},{"kind":1,"range":{"end":{"character":10,"line":15},"start":{"character":6,"line":15}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"context":{"diagnostics":[]}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":327,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":19,"character":10}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":328,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":329,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 441

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"typecheck_indirection_requires_pointer","message":"Indirection requires pointer operand ('const String' invalid)","range":{"end":{"character":7,"line":15},"start":{"character":6,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":86}}
>>>
Content-Length: 534

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":7}},"severity":1,"code":"typecheck_indirection_requires_pointer","source":"clang","message":"Indirection requires pointer operand ('const String' invalid)"}]}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":330,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":331,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":87}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"context":{"diagnostics":[]}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":332,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":333,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"text":"$"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":334,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier '$text'","range":{"end":{"character":11,"line":15},"start":{"character":6,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":88}}
>>>
Content-Length: 490

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier '$text'"}]}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":335,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":336,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":337,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":89}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"context":{"diagnostics":[]}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":338,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":339,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 316

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"text":"\u0026"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":340,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String *' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String *' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":90}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":7}},"context":{"diagnostics":[]}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":341,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":342,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":343,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":91}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":6},"end":{"line":15,"character":6}},"context":{"diagnostics":[]}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":344,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":345,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":12}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":346,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":15}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 270

{"id":347,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `text`  \n\n---\nType: `const String`  \n\n---\n```cpp\n// In bar\nconst String text = \"0123\"\n```"},"range":{"end":{"character":19,"line":14},"start":{"character":15,"line":14}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":2}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"id":348,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `foo`  \n\n---\n→ `void`  \nParameters:  \n- `const char * text`\n\n---\n```cpp\nvoid foo(const char *text)\n```"},"range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}}}}
>>>
Content-Length: 644

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":5}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument"}]}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"id":349,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":9}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":350,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":14,"line":14},"start":{"character":8,"line":14}}}}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":9}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":351,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":14},"start":{"character":8,"line":14}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":352,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":21}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":353,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### constructor `String`  \n\n---\n```cpp\n// In String\npublic: String(String &&rval)\n```"},"range":{"end":{"character":21,"line":14},"start":{"character":20,"line":14}}}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":14}},"rangeLength":6,"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":354,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 379

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'c'","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":92}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":9}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":306},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":355,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'ch'","range":{"end":{"character":10,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":93}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":356,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 887

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'cha'; did you mean 'char'? (fix available)","range":{"end":{"character":11,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":16,"line":14},"start":{"character":12,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":94}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":357,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 670

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":17,"line":14},"start":{"character":13,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":95}}Content-Length: 1150

{"id":358,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"context":{"diagnostics":[]}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":359,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":360,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":361,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":14},"start":{"character":13,"line":14}}},{"kind":1,"range":{"end":{"character":10,"line":15},"start":{"character":6,"line":15}}}]}
>>>
Content-Length: 550

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":17}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'"}]}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":362,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":363,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":96}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":364,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":12}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":365,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":366,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":367,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":367,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":97}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":368,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":20}},"id":369,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":369,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":21}},"id":370,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":370,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":25,"line":18},"start":{"character":21,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}},"id":371,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":371,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":372,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":372,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":98}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":22},"end":{"line":18,"character":22}},"context":{"diagnostics":[]}},"id":373,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":373,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1116

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":99},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char * text);\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar() {\n  foo(\"0123\");\n  const char * text = \"0123\";\n  foo(text);\n}\n\nvoid foo(const char * text) {\n  // Do stuff\n}\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":99}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":22}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":374,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":374,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":375,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":100}}Content-Length: 1150

{"id":375,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":19,"character":0}},"rangeLength":29,"text":""}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":324},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":376,"jsonrpc":"2.0"}
<<<
Content-Length: 964

{"id":376,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":101}}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":325},"jsonrpc":"2.0"}Content-Length: 341

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"void foo(const char *text) {\n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":377,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":377,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":102}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":19,"character":0}},"rangeLength":29,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":378,"jsonrpc":"2.0"}
<<<
Content-Length: 964

{"id":378,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":9,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":103}}
>>>
Content-Length: 341

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"text":"void foo(const char *text) {\n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":379,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":379,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":104}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":380,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":380,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":105}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":14}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":381,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":381,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 671

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":17,"line":14},"start":{"character":13,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":106}}
>>>
Content-Length: 334

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":12}},"rangeLength":4,"text":"String"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":382,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":382,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":383,"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":107}}Content-Length: 1150

{"id":383,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":384,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":384,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":385,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":385,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":27,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 1115

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":108},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#include \u003cMultiFuncShield.h\u003e\n\n\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 4 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid bar() {\n  foo(\"0123\");\n  const String text = \"0123\";\n  foo(text);\n}\n\nvoid foo(const char *text) {\n  // Do stuff\n}\n\nvoid loop() {\n\n}\n\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":6,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:9:6: note: candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'const String' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:16:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":108}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":386,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":386,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":387,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":387,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":8}},"id":388,"jsonrpc":"2.0"}
<<<
Content-Length: 240

{"id":388,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":14,"line":14},"start":{"character":8,"line":14}}}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":14}},"rangeLength":6,"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":389,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":389,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'c'","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":109}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":9}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":390,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":390,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'ch'","range":{"end":{"character":10,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":110}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":336},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":391,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":391,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 888

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'cha'; did you mean 'char'? (fix available)","range":{"end":{"character":11,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":16,"line":14},"start":{"character":12,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":111}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":392,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":392,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":393,"jsonrpc":"2.0"}
<<<
Content-Length: 671

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":17,"line":14},"start":{"character":13,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":112}}Content-Length: 1150

{"id":393,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":394,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":394,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":395,"jsonrpc":"2.0"}
<<<
Content-Length: 671

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char' with an lvalue of type 'const char [5]'","range":{"end":{"character":18,"line":14},"start":{"character":14,"line":14}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo' (fix available)","range":{"end":{"character":5,"line":15},"start":{"character":2,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":113}}Content-Length: 1150

{"id":395,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":396,"jsonrpc":"2.0"}
<<<
Content-Length: 1150

{"id":396,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":397,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":114}}Content-Length: 1150

{"id":397,"jsonrpc":"2.0","result":[{"kind":12,"name":"bar","range":{"end":{"character":10,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":8,"line":6},"start":{"character":5,"line":6}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":8,"line":8},"start":{"character":5,"line":8}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"bar","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":8,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":9,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}},"id":398,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":398,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":20}},"id":399,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":399,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":18,"character":21}},"id":400,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":400,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":25,"line":18},"start":{"character":21,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":18,"character":21},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}},"id":401,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":401,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"position":{"line":14,"character":13}},"id":402,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":402,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":25,"character":0}},"context":{"diagnostics":[]}},"id":403,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":403,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 500

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":25,"character":0}},"rangeLength":168,"text":"void setup()\n{\n  Serial.begin(115200);\n  char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server171184855/sketch/LibraryTests.ino.cpp"}},"id":404,"jsonrpc":"2.0"}
<<<
Content-Length: 103

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":404,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":22928,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server905055719\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1084

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 8 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 12 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n  Serial.begin(115200);\n  char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":23,"character":1},"end":{"line":23,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 1147

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":9}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `char *`  \nValue = `&\"0123\"[0]`  \nPassed as text  \n\n---\n```cpp\n// In setup\nchar *message = \"0123\"\n```"},"range":{"end":{"character":13,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 230

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":8}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"id":5,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `char *`  \nValue = `&\"0123\"[0]`  \nPassed as text  \n\n---\n```cpp\n// In setup\nchar *message = \"0123\"\n```"},"range":{"end":{"character":13,"line":13},"start":{"character":6,"line":13}}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":20,"character":11}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":6,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":25,"line":20},"start":{"character":21,"line":20}}},{"kind":2,"range":{"end":{"character":21,"line":22},"start":{"character":17,"line":22}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":14}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":14}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":2}}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":9,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":9}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 1076

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 8 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 12 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n  Serial.begin(115200);\n  char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(char *text)\n{\n  Serial.println(text);\n}\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":2}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":11,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":12,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":20,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":2}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":13,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":9}},"text":"const "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1148

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":20,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":5}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":14}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":5}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"id":16,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":8,"line":11},"start":{"character":2,"line":11}}}}
>>>
Content-Length: 1088

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 8 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 12 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n  Serial.begin(115200);\n  char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":1}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":18,"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":15},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 1148

{"id":18,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":2}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":16},"jsonrpc":"2.0"}Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":2}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":2}},"context":{"diagnostics":[]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":2}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":22,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 441

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'cchar'; did you mean 'char'? (fix available)","range":{"end":{"character":7,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":7}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":12,"character":3},"end":{"line":12,"character":3}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 442

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'cochar'; did you mean 'char'? (fix available)","range":{"end":{"character":8,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 1148

{"id":24,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":4}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'conchar'","range":{"end":{"character":9,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":9}}Content-Length: 1148

{"id":26,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":5}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":27,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 387

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'conschar'","range":{"end":{"character":10,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":28,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 657

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'constchar'; did you mean 'constexpr'? (fix available)","range":{"end":{"character":11,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"},{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":21,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":29,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":12}}Content-Length: 1148

{"id":30,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":22,"character":1}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":32,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 303

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":9,"character":0},"end":{"line":23,"character":1}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":23,"character":1}},"rangeLength":162,"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 589

{"id":34,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 387

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n \n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":14}}
>>>
Content-Length: 502

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":1}},"rangeLength":1,"text":"void setup()\n{\n  Serial.begin(115200);\n  const char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"id":35,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":2}},"selectionRange":{"end":{"character":10,"line":2},"start":{"character":5,"line":2}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":8,"line":13},"start":{"character":5,"line":13}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"id":36,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":2}},"selectionRange":{"end":{"character":10,"line":2},"start":{"character":5,"line":2}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":8,"line":13},"start":{"character":5,"line":13}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'foo'","range":{"end":{"character":5,"line":6},"start":{"character":2,"line":6}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":15}}
>>>
Content-Length: 483

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":16,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'foo'"}]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"id":38,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":7},"start":{"character":0,"line":2}},"selectionRange":{"end":{"character":10,"line":2},"start":{"character":5,"line":2}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":9,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":8,"line":13},"start":{"character":5,"line":13}}}]}
>>>
Content-Length: 236

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":4,"character":11}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":39,"jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":120},"start":{"character":9,"line":120}},"uri":"file:///C:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}]}
>>>
Content-Length: 5704

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include \u003cinttypes.h\u003e\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to \u003e 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) \u003c 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE\u003e256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE\u003e256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}
>>>
Content-Length: 302

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"},"position":{"line":4,"character":13}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"id":41,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":14,"line":4},"start":{"character":9,"line":4}}}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp"}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 594

{"id":42,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":1,"line":8},"start":{"character":0,"line":2}},"selectionRange":{"end":{"character":10,"line":2},"start":{"character":5,"line":2}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":9,"line":10},"start":{"character":5,"line":10}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":8,"line":14},"start":{"character":5,"line":14}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'foo'","range":{"end":{"character":5,"line":7},"start":{"character":2,"line":7}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server905055719/sketch/LibraryTests.ino.cpp","version":16}}






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":22928,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server357765459\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1097

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n\n  \n  Serial.begin(115200);\n  const char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 1147

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 1147

{"id":2,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}
>>>
Content-Length: 414

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 1147

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'i'","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":3}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":11,"character":1},"end":{"line":11,"character":1}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":5,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'in'","range":{"end":{"character":2,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":4}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":6,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":5}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":3}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 1147

{"id":7,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 1103

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 14 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\nint \n\n  Serial.begin(115200);\n  const char * message = \"0123\";\n  foo(message);\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 1147

{"id":9,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 325

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":7},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":8},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":11,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":9}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":12,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":10}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":13,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":11}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int' with an rvalue of type 'void'","range":{"end":{"character":5,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":12}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":15,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int' with an rvalue of type 'void'","range":{"end":{"character":5,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":13}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":16,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":14}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1148

{"id":17,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":15}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":19,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":16}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":20,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'c'","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":17}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":12,"character":1},"end":{"line":12,"character":1}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":21,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'co'","range":{"end":{"character":2,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":18}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":2}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":19},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":22,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 852

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'con'; did you mean 'cos'? (fix available)\n\nc:\\users\\banks\\appdata\\local\\arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7\\bin\\..\\lib\\gcc\\avr\\7.3.0\\..\\..\\..\\..\\avr\\include\\math.h:127:15:\nnote: 'cos' declared here","range":{"end":{"character":3,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":19}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":12,"character":3},"end":{"line":12,"character":3}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 806

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'cons'; did you mean 'const'? (fix available)","range":{"end":{"character":4,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'Serial' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use dot operator on a type","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":20}}Content-Length: 1148

{"id":24,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":4}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 588

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Serial' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use dot operator on a type","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":21}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":5}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":26,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 588

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Serial' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use dot operator on a type","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":22}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":27,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'i'","range":{"end":{"character":7,"line":12},"start":{"character":6,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":23}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":24},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":28,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 586

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'in'","range":{"end":{"character":8,"line":12},"start":{"character":6,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":24}}
>>>
Content-Length: 472

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'in'"}]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":30,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 643

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":25}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":31,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 643

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":26}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"text":"j"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":32,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 645

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":27}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":33,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 645

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":28}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"text":"="}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":34,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 444

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const int' with an rvalue of type 'void'","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":29}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":35,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 444

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const int' with an rvalue of type 'void'","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":30}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":36,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":31}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":38,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":32}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":23},"end":{"line":14,"character":23}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":31}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":41,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":38},"jsonrpc":"2.0"}Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":14,"character":23},"end":{"line":15,"character":27}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":31},"end":{"line":15,"character":31}},"context":{"diagnostics":[]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":15,"character":31},"end":{"line":15,"character":31}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":44,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":33}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":32}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":32}},"text":"+"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":46,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":34,"line":15},"start":{"character":33,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":34}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":15,"character":33},"end":{"line":15,"character":33}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":47,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":35}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":15,"character":34},"end":{"line":15,"character":34}},"text":"j"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":48,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":36}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":35},"end":{"line":15,"character":35}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":3}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":51,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":9}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":52,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":8},"end":{"line":15,"character":12}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 237

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":10}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":4}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 253

{"id":56,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `i`  \n\n---\nType: `int`  \nValue = `1`  \n\n---\n```cpp\n// In setup\nint i = 1\n```"},"range":{"end":{"character":5,"line":11},"start":{"character":4,"line":11}}}}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":4}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"id":57,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":5,"line":11},"start":{"character":4,"line":11}}},{"kind":2,"range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":59,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 571

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":6,"line":11},"start":{"character":5,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":37}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"char"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":60,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":10,"line":11},"start":{"character":9,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":38}}Content-Length: 1148

{"id":61,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 519

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":8}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'int' declaration specifier"}]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":63,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":64,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 789

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":11,"line":11},"start":{"character":10,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":39}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":65,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 789

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":12,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":40}}Content-Length: 1148

{"id":66,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":67,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 789

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":13,"line":11},"start":{"character":12,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":41}}Content-Length: 1148

{"id":68,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":11}},"text":"m"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":69,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":12,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":42}}Content-Length: 1148

{"id":70,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":71,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":13,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":43}}Content-Length: 1148

{"id":72,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":11,"character":13},"end":{"line":11,"character":13}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":73,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":14,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":44}}Content-Length: 1148

{"id":74,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":75,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":15,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":45}}Content-Length: 1148

{"id":76,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":77,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":16,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":46}}Content-Length: 1148

{"id":78,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 533

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":16}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'"}]}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":79,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":80,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":81,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":17,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":47}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":68},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":82,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":82,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1992

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":18,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'int *'\n\nLibraryTests.ino.cpp:12:12: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'int *'","range":{"end":{"character":18,"line":11},"start":{"character":11,"line":11}},"severity":3},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:8:6: note: candidate function not viable: no known conversion from 'int *' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'int *' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:17:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":48}}Content-Length: 1148

{"id":83,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 779

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":18}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'"},{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":18}},"severity":3,"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'int *'"}]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":85,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 243

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":1}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":86,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":3}},"context":{"diagnostics":[]}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":87,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":1}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":88,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":3}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":89,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1167

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'char *' with an rvalue of type 'int'","range":{"end":{"character":15,"line":11},"start":{"character":8,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:9: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":15,"line":11},"start":{"character":8,"line":11}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":49}}
>>>
Content-Length: 519

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":8}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'int' declaration specifier"}]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":91,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":74},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":75},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":92,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1167

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'char *' with an rvalue of type 'int'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":50}}
>>>
Content-Length: 231

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":1}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":93,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":94,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"context":{"diagnostics":[]}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":17}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":97,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":18}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":98,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":99,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":16}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"id":100,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `char *`  \n\n---\n```cpp\n// In setup\nchar *message = <recovery - expr>(1)\n```"},"range":{"end":{"character":16,"line":11},"start":{"character":15,"line":11}}}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"text":"\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":101,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'char *' with an rvalue of type 'int'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":20,"line":11},"start":{"character":18,"line":11}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":51}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":20}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 543

{"id":102,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":20,"line":11},"start":{"character":18,"line":11}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp":[{"newText":";","range":{"end":{"character":18,"line":11},"start":{"character":18,"line":11}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":18}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":103,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":104,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"context":{"diagnostics":[]}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":17}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":107,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"text":"\""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":108,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 939

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":52}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":110,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":14}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":111,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}}},{"kind":2,"range":{"end":{"character":13,"line":16},"start":{"character":6,"line":16}}}]}
>>>
Content-Length: 552

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":14}},"severity":3,"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'"}]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 551

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":14}},"severity":3,"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'"}]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":14}},"rangeLength":7,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":114,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":53}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":115,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":54}}Content-Length: 1149

{"id":116,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":117,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":55}}Content-Length: 1149

{"id":118,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"context":{"diagnostics":[]}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":119,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":120,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":10}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"id":121,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}}},{"kind":2,"range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"context":{"diagnostics":[]}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":122,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":9}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":123,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"context":{"diagnostics":[]}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":124,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":9}},"context":{"diagnostics":[]}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":125,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":9}},"rangeLength":3,"text":"c"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":126,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 785

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'c'","range":{"end":{"character":7,"line":12},"start":{"character":6,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":13,"line":12},"start":{"character":12,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":56}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"text":"h"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":104},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":127,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":127,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 786

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'ch'","range":{"end":{"character":8,"line":12},"start":{"character":6,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":14,"line":12},"start":{"character":13,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":57}}Content-Length: 1149

{"id":128,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":129,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 833

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'cha'; did you mean 'char'? (fix available)","range":{"end":{"character":9,"line":12},"start":{"character":6,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":58}}Content-Length: 1149

{"id":130,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":131,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":16,"line":12},"start":{"character":15,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":59}}Content-Length: 1149

{"id":132,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":133,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":17,"line":12},"start":{"character":16,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":60}}Content-Length: 1149

{"id":134,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"text":"*"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":135,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":18,"line":12},"start":{"character":17,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_invalid_operands","message":"Invalid operands to binary expression ('const char [5]' and 'const char *')","range":{"end":{"character":33,"line":15},"start":{"character":32,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":61}}Content-Length: 1149

{"id":136,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":137,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":19,"line":12},"start":{"character":18,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_invalid_operands","message":"Invalid operands to binary expression ('const char [5]' and 'const char *')","range":{"end":{"character":33,"line":15},"start":{"character":32,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":62}}Content-Length: 1149

{"id":138,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}},"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":139,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 825

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":16,"line":12},"start":{"character":15,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":63}}Content-Length: 1149

{"id":140,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":141,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 825

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":17,"line":12},"start":{"character":16,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":64}}Content-Length: 1149

{"id":142,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":143,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 825

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":18,"line":12},"start":{"character":17,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":65}}Content-Length: 1149

{"id":144,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":145,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 800

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":21,"line":12},"start":{"character":20,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":66}}Content-Length: 1149

{"id":146,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":148,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":149,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 800

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":20,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":67}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":151,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":17}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":153,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":0}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":154,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":0}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":155,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":10}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":157,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":16}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":158,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}]}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":20}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":159,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":20},"end":{"line":12,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"}]}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":160,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":161,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":68}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":162,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 800

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":20,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":69}}Content-Length: 1149

{"id":163,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":12,"character":20},"end":{"line":12,"character":20}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":164,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 801

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":21,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":70}}Content-Length: 1149

{"id":165,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":12,"character":21},"end":{"line":12,"character":21}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":166,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":71}}Content-Length: 1149

{"id":167,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":22},"end":{"line":12,"character":22}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":169,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":11}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":171,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *message = \"0123\" + <recovery - expr>()\n```"},"range":{"end":{"character":13,"line":16},"start":{"character":6,"line":16}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":23},"end":{"line":12,"character":23}},"context":{"diagnostics":[]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":172,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":12,"character":23}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":23}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":7}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":175,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":8}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":176,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":10}},"context":{"diagnostics":[]}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":177,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":0}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":178,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":4}},"context":{"diagnostics":[]}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":179,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":0}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":180,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":6}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":181,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":4}},"rangeLength":4,"text":"s"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":182,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 562

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 's'","range":{"end":{"character":1,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":72}}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":11,"character":1},"end":{"line":11,"character":1}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":183,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 563

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'st'","range":{"end":{"character":2,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":73}}Content-Length: 1149

{"id":184,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":145},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":185,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":185,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 564

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'str'","range":{"end":{"character":3,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":74}}Content-Length: 1149

{"id":186,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":3}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":187,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 565

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'stri'","range":{"end":{"character":4,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":75}}Content-Length: 1149

{"id":188,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":189,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 566

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'strin'","range":{"end":{"character":5,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":76}}Content-Length: 1149

{"id":190,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":191,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 1472

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'string'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'String *' with an lvalue of type 'const char [2]'","range":{"end":{"character":12,"line":11},"start":{"character":9,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const char *' with an lvalue of type 'String *'","range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'String *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":77}}Content-Length: 1149

{"id":192,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 676

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'string'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here"}]}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 727

{"id":193,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'string'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp":[{"newText":"String","range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'string' to 'String'"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":13}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"id":194,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `bar`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *bar = <recovery - expr>(foo)\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":195,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":12}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":196,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `foo`  \n\n---\nType: `String *`  \n\n---\n```cpp\n// In setup\nString *foo = <recovery - expr>(\"1\")\n```"},"range":{"end":{"character":12,"line":11},"start":{"character":9,"line":11}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":11}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"id":197,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `foo`  \n\n---\nType: `String *`  \n\n---\n```cpp\n// In setup\nString *foo = <recovery - expr>(\"1\")\n```"},"range":{"end":{"character":12,"line":11},"start":{"character":9,"line":11}}}}
>>>
Content-Length: 546

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":12}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'String *' with an lvalue of type 'const char [2]'"}]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":2}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":199,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `String`  \n\n---\nThe string class  \n\n---\n```cpp\nclass String {}\n```"},"range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}}}}
>>>
Content-Length: 676

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'string'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here"}]}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 727

{"id":200,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"unknown_typename_suggest","message":"Unknown type name 'string'; did you mean 'String'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\WString.h:45:7:\nnote: 'String' declared here","range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp":[{"newText":"String","range":{"end":{"character":6,"line":11},"start":{"character":0,"line":11}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'string' to 'String'"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":201,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *message = \"0123\" + <recovery - expr>()\n```"},"range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}}}}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":202,"jsonrpc":"2.0","result":[{"range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":203,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *message = \"0123\" + <recovery - expr>()\n```"},"range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}}}}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":6}},"rangeLength":6,"text":"char"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":204,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":78}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":205,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *message = \"0123\" + <recovery - expr>()\n```"},"range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}}}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":206,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":19}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":207,"jsonrpc":"2.0","result":[{"range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":4}},"context":{"diagnostics":[]}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":11}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":209,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":14}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"id":210,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `bar`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *bar = foo\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":15}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"id":211,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `bar`  \n\n---\nType: `const char *`  \n\n---\n```cpp\n// In setup\nconst char *bar = foo\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":15}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 126

{"id":212,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"context":{"diagnostics":[]}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":213,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":20}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"id":214,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `foo`  \n\n---\nType: `char *`  \nValue = `&\"1\"[0]`  \n\n---\n```cpp\n// In setup\nchar *foo = \"1\"\n```"},"range":{"end":{"character":22,"line":12},"start":{"character":19,"line":12}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":20}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"id":215,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `foo`  \n\n---\nType: `char *`  \nValue = `&\"1\"[0]`  \n\n---\n```cpp\n// In setup\nchar *foo = \"1\"\n```"},"range":{"end":{"character":22,"line":12},"start":{"character":19,"line":12}}}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":216,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"text":"[]"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":217,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 819

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"array_init_not_init_list","message":"Array initializer must be an initializer list","range":{"end":{"character":16,"line":12},"start":{"character":13,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":79}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":12,"character":17},"end":{"line":12,"character":18}},"rangeLength":1,"text":"]"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":172},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":218,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":218,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 1149

{"id":219,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":18},"end":{"line":12,"character":18}},"context":{"diagnostics":[]}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":220,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":21}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"id":221,"jsonrpc":"2.0","result":[{"range":{"end":{"character":10,"line":11},"start":{"character":7,"line":11}},"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":18}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":222,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":81}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":223,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":224,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":15,"character":34}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":225,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 489

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":15,"character":34},"end":{"line":15,"character":35}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":34},"end":{"line":15,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'j'"}]}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"id":226,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":19}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"id":227,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `foo`  \n\n---\nType: `char *`  \nValue = `&\"1\"[0]`  \n\n---\n```cpp\n// In setup\nchar *foo = \"1\"\n```"},"range":{"end":{"character":22,"line":12},"start":{"character":19,"line":12}}}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":22}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":228,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":82}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":229,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 800

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":20,"line":12},"start":{"character":19,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":83}}Content-Length: 1149

{"id":230,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 64

{"method":"$/cancelRequest","params":{"id":182},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":231,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"text":" j"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":232,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 825

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":18,"line":12},"start":{"character":17,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":84}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":16}},"rangeLength":4,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":233,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":18,"line":12},"start":{"character":17,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_invalid_operands","message":"Invalid operands to binary expression ('const char [5]' and 'const char *')","range":{"end":{"character":33,"line":15},"start":{"character":32,"line":15}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":85}}Content-Length: 1149

{"id":234,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":12}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":235,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":16,"line":12},"start":{"character":15,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":86}}Content-Length: 1149

{"id":236,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":10}},"rangeLength":4,"text":"int"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":237,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 617

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"typecheck_call_not_function","message":"Called object type 'char *' is not a function or function pointer","range":{"end":{"character":6,"line":16},"start":{"character":5,"line":16}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":87}}Content-Length: 1149

{"id":238,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 334

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":10}},"rangeLength":3,"text":"message"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":239,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 939

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":88}}Content-Length: 1149

{"id":240,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":18}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":241,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'char *' with an rvalue of type 'int'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":20,"line":11},"start":{"character":18,"line":11}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'j'","range":{"end":{"character":35,"line":15},"start":{"character":34,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":89}}Content-Length: 1149

{"id":242,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":19}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":243,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 1167

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'char *' with an rvalue of type 'int'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'char *'\n\nLibraryTests.ino.cpp:12:8: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'char *'","range":{"end":{"character":14,"line":11},"start":{"character":7,"line":11}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":90}}Content-Length: 1149

{"id":244,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"int "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":245,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 1992

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int *' with an rvalue of type 'int'","range":{"end":{"character":18,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"},{"code":"redefinition_different_type","message":"Redefinition of 'message' with a different type: 'const char *' vs 'int *'\n\nLibraryTests.ino.cpp:12:12: note: previous definition is here","range":{"end":{"character":22,"line":15},"start":{"character":15,"line":15}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nLibraryTests.ino.cpp:16:16: error: redefinition of 'message' with a different type: 'const char *' vs 'int *'","range":{"end":{"character":18,"line":11},"start":{"character":11,"line":11}},"severity":3},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:8:6: note: candidate function not viable: no known conversion from 'int *' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":16},"start":{"character":2,"line":16}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: no known conversion from 'int *' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:17:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":91}}Content-Length: 1149

{"id":246,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":18}},"rangeLength":7,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":247,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 789

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":13,"line":11},"start":{"character":12,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":92}}Content-Length: 1149

{"id":248,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":249,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 789

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":12,"line":11},"start":{"character":11,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":93}}Content-Length: 1149

{"id":250,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":10}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":251,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":8,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":10,"line":11},"start":{"character":9,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":94}}Content-Length: 1149

{"id":252,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 326

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":8}},"rangeLength":4,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":253,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 571

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":6,"line":11},"start":{"character":5,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'i'","range":{"end":{"character":15,"line":12},"start":{"character":14,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":95}}Content-Length: 1149

{"id":254,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":255,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":96}}Content-Length: 1149

{"id":256,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":15,"character":33},"end":{"line":15,"character":35}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":257,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":34,"line":15},"start":{"character":33,"line":15}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":97}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":15,"character":31},"end":{"line":15,"character":33}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":258,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":98}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":16}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":259,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 444

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'const int' with an rvalue of type 'void'","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":99}}
>>>
Content-Length: 329

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":13}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":260,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 646

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":11,"line":12},"start":{"character":10,"line":12}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":100}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":11}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":261,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 644

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"default_init_const","message":"Default initialization of an object of const type 'const int' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":101}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":9}},"rangeLength":4,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":262,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":262,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":9,"line":19},"start":{"character":5,"line":19}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":23}},"selectionRange":{"end":{"character":8,"line":23},"start":{"character":5,"line":23}}}]}Content-Length: 589

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'Serial' (fix available)","range":{"end":{"character":8,"line":14},"start":{"character":2,"line":14}},"severity":1,"source":"clang"},{"code":"invalid_operator_on_type","message":"Cannot use dot operator on a type","range":{"end":{"character":9,"line":14},"start":{"character":8,"line":14}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":102}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":12,"character":5}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":263,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":263,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":103}}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":10}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":264,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":264,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 437

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"init_conversion_failed","message":"Cannot initialize a variable of type 'int' with an rvalue of type 'void'","range":{"end":{"character":5,"line":11},"start":{"character":4,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":104}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"context":{"diagnostics":[]}},"id":265,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":265,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":7}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":266,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":266,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":105}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":267,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":267,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":106}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"o"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":268,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":268,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":8,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":107}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":5}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":269,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":269,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":9,"line":13},"start":{"character":8,"line":13}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":108}}
>>>
Content-Length: 417

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"text":"  "},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":3}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":270,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":270,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":20},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":9,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":8,"line":22},"start":{"character":5,"line":22}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":110}}
>>>
Content-Length: 417

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":12,"character":2}},"rangeLength":3,"text":""},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":271,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":271,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":15},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":9,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":8,"line":21},"start":{"character":5,"line":21}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":112}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":11,"character":2}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":272,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":272,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":113}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"context":{"diagnostics":[]}},"id":273,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":273,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":26}},"id":274,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":274,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 238

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":20}},"id":275,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":275,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":17}},"id":276,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":276,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":20}},"id":277,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":277,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":21}},"id":278,"jsonrpc":"2.0"}
<<<
Content-Length: 328

{"id":278,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `begin`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long baud`\n\n---\n```cpp\n// In HardwareSerial\npublic: void begin(unsigned long baud)\n```"},"range":{"end":{"character":22,"line":11},"start":{"character":21,"line":11}}}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":23}},"id":279,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":279,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 244

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":4}},"id":280,"jsonrpc":"2.0"}
<<<
Content-Length: 214

{"id":280,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":22,"line":12},"start":{"character":15,"line":12}}},{"kind":2,"range":{"end":{"character":13,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":7}},"context":{"diagnostics":[]}},"id":281,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":281,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":7}},"rangeLength":5,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":282,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":282,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":114}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":283,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":283,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":115}}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":16}},"id":284,"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"id":284,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `char *`  \nValue = `&\"0123\"[0]`  \n\n---\n```cpp\n// In setup\nchar *message = \"0123\"\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":9,"line":12}}}}
>>>
Content-Length: 245

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":16}},"id":285,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":285,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":12},"start":{"character":9,"line":12}}},{"kind":2,"range":{"end":{"character":13,"line":13},"start":{"character":6,"line":13}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}},"id":286,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":286,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":10}},"id":287,"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"id":287,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `message`  \n\n---\nType: `char *`  \nValue = `&\"0123\"[0]`  \n\n---\n```cpp\n// In setup\nchar *message = \"0123\"\n```"},"range":{"end":{"character":16,"line":12},"start":{"character":9,"line":12}}}}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"text":"[]"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":288,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":288,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 1064

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"array_init_not_init_list","message":"Array initializer must be an initializer list","range":{"end":{"character":16,"line":12},"start":{"character":9,"line":12}},"severity":1,"source":"clang"},{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'foo'\n\nLibraryTests.ino.cpp:8:6: note: candidate function not viable: cannot convert argument of incomplete type 'char *[]' to 'const char *' for 1st argument","range":{"end":{"character":5,"line":13},"start":{"character":2,"line":13}},"severity":1,"source":"clang"},{"message":"Candidate function not viable: cannot convert argument of incomplete type 'char *[]' to 'const char *' for 1st argument\n\nLibraryTests.ino.cpp:14:3: error: no matching function for call to 'foo'","range":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}},"severity":3}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":116}}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":12,"character":17},"end":{"line":12,"character":18}},"rangeLength":1,"text":"]"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":227},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":289,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":290,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":289,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 1149

{"id":290,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":18},"end":{"line":12,"character":18}},"context":{"diagnostics":[]}},"id":291,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":291,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":16,"character":8}},"id":292,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":292,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `loop`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid loop()\n```"},"range":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}}}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":6}},"id":293,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":293,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"context":{"diagnostics":[]}},"id":294,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":294,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":12,"character":6}},"id":295,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":295,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":296,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":296,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":118}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":297,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":297,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":14},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":18},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":8,"line":20},"start":{"character":5,"line":20}}}]}Content-Length: 213

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":119}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"context":{"diagnostics":[]}},"id":298,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":298,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":23},"end":{"line":11,"character":23}},"context":{"diagnostics":[]}},"id":299,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":299,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 233

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":13,"character":14}},"id":300,"jsonrpc":"2.0"}
<<<
Content-Length: 284

{"id":300,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `foo`  \n\n---\n→ `void`  \nParameters:  \n- `const char * text`\n\n---\n```cpp\nvoid foo(const char *text)\n```"},"range":{"end":{"character":15,"line":13},"start":{"character":14,"line":13}}}}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":2},"end":{"line":13,"character":15}},"context":{"diagnostics":[]}},"id":301,"jsonrpc":"2.0"}
<<<
Content-Length: 396

{"id":301,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","selection":{"end":{"character":15,"line":13},"start":{"character":2,"line":11}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":2}},"id":302,"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"id":302,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":8,"line":11},"start":{"character":2,"line":11}}}}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":13,"character":15}},"rangeLength":64,"text":"M"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":303,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":303,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":3}},"text":"F"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":241},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":304,"jsonrpc":"2.0"}
<<<
Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'M'","range":{"end":{"character":3,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":120}}Content-Length: 1149

{"id":304,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":305,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MF'","range":{"end":{"character":4,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":121}}Content-Length: 1149

{"id":305,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":306,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":306,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":307,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":122}}Content-Length: 1149

{"id":307,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'MFS'"}]}},"id":308,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":308,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":309,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":309,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":123},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":6},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":310,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":310,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":311,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":311,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 572

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":123}}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"context":{"diagnostics":[]}},"id":312,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":312,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":313,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":313,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":314,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":314,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":124}}
>>>
Content-Length: 265

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":7},"context":{"triggerKind":1}},"id":315,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":315,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":316,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":316,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"context":{"diagnostics":[]}},"id":317,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":317,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":125},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":318,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":318,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":125}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":126},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":251},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":319,"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":320,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":319,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":126}}Content-Length: 1149

{"id":320,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"context":{"diagnostics":[]}},"id":321,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":321,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":322,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":322,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":323,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":323,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":127}}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":324,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":324,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":325,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":128}}Content-Length: 1149

{"id":325,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":129},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":326,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":326,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":327,"jsonrpc":"2.0"}
<<<
Content-Length: 572

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":129}}Content-Length: 1149

{"id":327,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 327

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":130},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":328,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":328,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":329,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":130}}Content-Length: 1149

{"id":329,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'MFS'"}]}},"id":330,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":330,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":331,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":331,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":332,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":332,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":504,"character":18}},"id":333,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":333,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":20,"line":504},"start":{"character":5,"line":504}}}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":41}},"id":334,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":334,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":24,"character":40}},"id":335,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":335,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":18}},"id":336,"jsonrpc":"2.0"}
<<<
Content-Length: 256

{"id":336,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nMultiFuncShield MFS\n```"},"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}}}
>>>
Content-Length: 238

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":18}},"id":337,"jsonrpc":"2.0"}
<<<
Content-Length: 213

{"id":337,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":1,"range":{"end":{"character":5,"line":954},"start":{"character":2,"line":954}}}]}
>>>
Content-Length: 231

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":18}},"id":338,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"id":338,"jsonrpc":"2.0","result":[{"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}]}
>>>
Content-Length: 226

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":17}},"id":339,"jsonrpc":"2.0"}
<<<
Content-Length: 256

{"id":339,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `MFS`  \n\n---\nType: `class MultiFuncShield`  \n\n---\n```cpp\nMultiFuncShield MFS\n```"},"range":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}}}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":6}},"id":340,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"id":340,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 181

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 189

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":6}},"id":341,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":341,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### class `MultiFuncShield`  \n\n---\n```cpp\nclass MultiFuncShield {}\n```"},"range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}}}}
>>>
Content-Length: 237

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":7}},"id":342,"jsonrpc":"2.0"}
<<<
Content-Length: 2647

{"id":342,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}}},{"kind":1,"range":{"end":{"character":20,"line":105},"start":{"character":5,"line":105}}},{"kind":1,"range":{"end":{"character":20,"line":115},"start":{"character":5,"line":115}}},{"kind":1,"range":{"end":{"character":28,"line":128},"start":{"character":13,"line":128}}},{"kind":1,"range":{"end":{"character":20,"line":184},"start":{"character":5,"line":184}}},{"kind":1,"range":{"end":{"character":19,"line":197},"start":{"character":4,"line":197}}},{"kind":1,"range":{"end":{"character":20,"line":251},"start":{"character":5,"line":251}}},{"kind":1,"range":{"end":{"character":20,"line":272},"start":{"character":5,"line":272}}},{"kind":1,"range":{"end":{"character":28,"line":278},"start":{"character":13,"line":278}}},{"kind":1,"range":{"end":{"character":29,"line":291},"start":{"character":14,"line":291}}},{"kind":1,"range":{"end":{"character":20,"line":304},"start":{"character":5,"line":304}}},{"kind":1,"range":{"end":{"character":20,"line":314},"start":{"character":5,"line":314}}},{"kind":1,"range":{"end":{"character":20,"line":323},"start":{"character":5,"line":323}}},{"kind":1,"range":{"end":{"character":20,"line":340},"start":{"character":5,"line":340}}},{"kind":1,"range":{"end":{"character":20,"line":361},"start":{"character":5,"line":361}}},{"kind":1,"range":{"end":{"character":20,"line":388},"start":{"character":5,"line":388}}},{"kind":1,"range":{"end":{"character":20,"line":413},"start":{"character":5,"line":413}}},{"kind":1,"range":{"end":{"character":20,"line":429},"start":{"character":5,"line":429}}},{"kind":1,"range":{"end":{"character":20,"line":442},"start":{"character":5,"line":442}}},{"kind":1,"range":{"end":{"character":20,"line":449},"start":{"character":5,"line":449}}},{"kind":1,"range":{"end":{"character":20,"line":489},"start":{"character":5,"line":489}}},{"kind":1,"range":{"end":{"character":20,"line":504},"start":{"character":5,"line":504}}},{"kind":1,"range":{"end":{"character":20,"line":570},"start":{"character":5,"line":570}}},{"kind":1,"range":{"end":{"character":20,"line":584},"start":{"character":5,"line":584}}},{"kind":1,"range":{"end":{"character":29,"line":597},"start":{"character":14,"line":597}}},{"kind":1,"range":{"end":{"character":20,"line":609},"start":{"character":5,"line":609}}},{"kind":1,"range":{"end":{"character":20,"line":617},"start":{"character":5,"line":617}}},{"kind":1,"range":{"end":{"character":20,"line":905},"start":{"character":5,"line":905}}},{"kind":1,"range":{"end":{"character":20,"line":918},"start":{"character":5,"line":918}}}]}
>>>
Content-Length: 230

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"},"position":{"line":6,"character":7}},"id":343,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"id":343,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}},"uri":"file:///C:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}]}
>>>
Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 196

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"}},"id":344,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 15044

{"id":344,"jsonrpc":"2.0","result":[{"children":[{"kind":8,"name":"userInterrupt","range":{"end":{"character":34,"line":68},"start":{"character":4,"line":68}},"selectionRange":{"end":{"character":24,"line":68},"start":{"character":11,"line":68}}},{"kind":6,"name":"initialize","range":{"end":{"character":21,"line":71},"start":{"character":4,"line":71}},"selectionRange":{"end":{"character":19,"line":71},"start":{"character":9,"line":71}}},{"kind":6,"name":"isrCallBack","range":{"end":{"character":22,"line":74},"start":{"character":4,"line":74}},"selectionRange":{"end":{"character":20,"line":74},"start":{"character":9,"line":74}}},{"kind":6,"name":"setTimer","range":{"end":{"character":45,"line":77},"start":{"character":4,"line":77}},"selectionRange":{"end":{"character":17,"line":77},"start":{"character":9,"line":77}}},{"kind":6,"name":"getTimer","range":{"end":{"character":28,"line":80},"start":{"character":4,"line":80}},"selectionRange":{"end":{"character":26,"line":80},"start":{"character":18,"line":80}}},{"kind":6,"name":"wait","range":{"end":{"character":40,"line":83},"start":{"character":4,"line":83}},"selectionRange":{"end":{"character":13,"line":83},"start":{"character":9,"line":83}}},{"kind":6,"name":"write","range":{"end":{"character":60,"line":86},"start":{"character":4,"line":86}},"selectionRange":{"end":{"character":14,"line":86},"start":{"character":9,"line":86}}},{"kind":6,"name":"write","range":{"end":{"character":27,"line":87},"start":{"character":4,"line":87}},"selectionRange":{"end":{"character":14,"line":87},"start":{"character":9,"line":87}}},{"kind":6,"name":"write","range":{"end":{"character":52,"line":88},"start":{"character":4,"line":88}},"selectionRange":{"end":{"character":14,"line":88},"start":{"character":9,"line":88}}},{"kind":6,"name":"manualDisplayRefresh","range":{"end":{"character":31,"line":92},"start":{"character":4,"line":92}},"selectionRange":{"end":{"character":29,"line":92},"start":{"character":9,"line":92}}},{"kind":6,"name":"blinkDisplay","range":{"end":{"character":21,"line":97},"start":{"character":4,"line":95}},"selectionRange":{"end":{"character":21,"line":95},"start":{"character":9,"line":95}}},{"kind":6,"name":"setDisplayBrightness","range":{"end":{"character":41,"line":99},"start":{"character":4,"line":99}},"selectionRange":{"end":{"character":29,"line":99},"start":{"character":9,"line":99}}},{"kind":6,"name":"writeLeds","range":{"end":{"character":20,"line":104},"start":{"character":4,"line":102}},"selectionRange":{"end":{"character":18,"line":102},"start":{"character":9,"line":102}}},{"kind":6,"name":"blinkLeds","range":{"end":{"character":20,"line":109},"start":{"character":4,"line":107}},"selectionRange":{"end":{"character":18,"line":107},"start":{"character":9,"line":107}}},{"kind":6,"name":"beep","range":{"end":{"character":169,"line":112},"start":{"character":4,"line":112}},"selectionRange":{"end":{"character":13,"line":112},"start":{"character":9,"line":112}}},{"kind":6,"name":"setBeepOffPeriod","range":{"end":{"character":49,"line":115},"start":{"character":4,"line":115}},"selectionRange":{"end":{"character":25,"line":115},"start":{"character":9,"line":115}}},{"kind":6,"name":"queueButton","range":{"end":{"character":34,"line":118},"start":{"character":4,"line":118}},"selectionRange":{"end":{"character":20,"line":118},"start":{"character":9,"line":118}}},{"kind":6,"name":"getButton","range":{"end":{"character":20,"line":121},"start":{"character":4,"line":121}},"selectionRange":{"end":{"character":18,"line":121},"start":{"character":9,"line":121}}},{"kind":6,"name":"manualButtonHandler","range":{"end":{"character":30,"line":125},"start":{"character":4,"line":125}},"selectionRange":{"end":{"character":28,"line":125},"start":{"character":9,"line":125}}},{"kind":6,"name":"initPulseInCounter","range":{"end":{"character":29,"line":131},"start":{"character":4,"line":128}},"selectionRange":{"end":{"character":27,"line":128},"start":{"character":9,"line":128}}},{"kind":6,"name":"disablePulseInCounter","range":{"end":{"character":32,"line":133},"start":{"character":4,"line":133}},"selectionRange":{"end":{"character":30,"line":133},"start":{"character":9,"line":133}}},{"kind":6,"name":"getPulseInPeriod","range":{"end":{"character":35,"line":136},"start":{"character":4,"line":136}},"selectionRange":{"end":{"character":33,"line":136},"start":{"character":17,"line":136}}},{"kind":6,"name":"getPulseInTotalCount","range":{"end":{"character":40,"line":139},"start":{"character":4,"line":139}},"selectionRange":{"end":{"character":38,"line":139},"start":{"character":18,"line":139}}},{"kind":6,"name":"resetPulseInTotalCount","range":{"end":{"character":33,"line":142},"start":{"character":4,"line":142}},"selectionRange":{"end":{"character":31,"line":142},"start":{"character":9,"line":142}}},{"kind":6,"name":"setPulseInTimeOut","range":{"end":{"character":48,"line":145},"start":{"character":4,"line":145}},"selectionRange":{"end":{"character":26,"line":145},"start":{"character":9,"line":145}}},{"kind":6,"name":"initSonar","range":{"end":{"character":51,"line":148},"start":{"character":4,"line":148}},"selectionRange":{"end":{"character":18,"line":148},"start":{"character":9,"line":148}}},{"kind":6,"name":"getSonarDataCm","range":{"end":{"character":62,"line":151},"start":{"character":4,"line":151}},"selectionRange":{"end":{"character":31,"line":151},"start":{"character":17,"line":151}}},{"kind":6,"name":"initLM35","range":{"end":{"character":50,"line":154},"start":{"character":4,"line":154}},"selectionRange":{"end":{"character":17,"line":154},"start":{"character":9,"line":154}}},{"kind":6,"name":"getLM35Data","range":{"end":{"character":21,"line":157},"start":{"character":4,"line":157}},"selectionRange":{"end":{"character":19,"line":157},"start":{"character":8,"line":157}}},{"kind":8,"name":"timerReadInProgress","range":{"end":{"character":41,"line":160},"start":{"character":4,"line":160}},"selectionRange":{"end":{"character":37,"line":160},"start":{"character":18,"line":160}}},{"kind":8,"name":"timerWriteInProgress","range":{"end":{"character":42,"line":161},"start":{"character":4,"line":161}},"selectionRange":{"end":{"character":38,"line":161},"start":{"character":18,"line":161}}},{"kind":8,"name":"buttonBuffer","range":{"end":{"character":48,"line":165},"start":{"character":4,"line":165}},"selectionRange":{"end":{"character":30,"line":165},"start":{"character":18,"line":165}}},{"kind":8,"name":"buttonBufferCount","range":{"end":{"character":39,"line":166},"start":{"character":4,"line":166}},"selectionRange":{"end":{"character":35,"line":166},"start":{"character":18,"line":166}}},{"kind":8,"name":"button_write_pos","range":{"end":{"character":38,"line":167},"start":{"character":4,"line":167}},"selectionRange":{"end":{"character":34,"line":167},"start":{"character":18,"line":167}}},{"kind":8,"name":"button_read_pos","range":{"end":{"character":37,"line":168},"start":{"character":4,"line":168}},"selectionRange":{"end":{"character":33,"line":168},"start":{"character":18,"line":168}}},{"kind":8,"name":"buttonSampleIntervalCounter","range":{"end":{"character":47,"line":170},"start":{"character":4,"line":170}},"selectionRange":{"end":{"character":44,"line":170},"start":{"character":17,"line":170}}},{"kind":8,"name":"buttonState","range":{"end":{"character":44,"line":171},"start":{"character":4,"line":171}},"selectionRange":{"end":{"character":20,"line":171},"start":{"character":9,"line":171}}},{"kind":8,"name":"buttonPressTime","range":{"end":{"character":56,"line":172},"start":{"character":4,"line":172}},"selectionRange":{"end":{"character":32,"line":172},"start":{"character":17,"line":172}}},{"kind":8,"name":"timer_volatile","range":{"end":{"character":45,"line":174},"start":{"character":4,"line":174}},"selectionRange":{"end":{"character":41,"line":174},"start":{"character":27,"line":174}}},{"kind":8,"name":"timer_safe","range":{"end":{"character":41,"line":175},"start":{"character":4,"line":175}},"selectionRange":{"end":{"character":37,"line":175},"start":{"character":27,"line":175}}},{"kind":8,"name":"beeperModifyInProgress","range":{"end":{"character":44,"line":177},"start":{"character":4,"line":177}},"selectionRange":{"end":{"character":40,"line":177},"start":{"character":18,"line":177}}},{"kind":8,"name":"beeperState","range":{"end":{"character":32,"line":178},"start":{"character":4,"line":178}},"selectionRange":{"end":{"character":29,"line":178},"start":{"character":18,"line":178}}},{"kind":8,"name":"beeperOnPeriodReloadValue","range":{"end":{"character":54,"line":179},"start":{"character":4,"line":179}},"selectionRange":{"end":{"character":51,"line":179},"start":{"character":26,"line":179}}},{"kind":8,"name":"beeperOffPeriodReloadValue","range":{"end":{"character":55,"line":180},"start":{"character":4,"line":180}},"selectionRange":{"end":{"character":52,"line":180},"start":{"character":26,"line":180}}},{"kind":8,"name":"beeperPeriodCounter","range":{"end":{"character":49,"line":181},"start":{"character":4,"line":181}},"selectionRange":{"end":{"character":45,"line":181},"start":{"character":26,"line":181}}},{"kind":8,"name":"beeperCycleReloadValue","range":{"end":{"character":44,"line":182},"start":{"character":4,"line":182}},"selectionRange":{"end":{"character":40,"line":182},"start":{"character":18,"line":182}}},{"kind":8,"name":"beeperCycleCounter","range":{"end":{"character":39,"line":183},"start":{"character":4,"line":183}},"selectionRange":{"end":{"character":36,"line":183},"start":{"character":18,"line":183}}},{"kind":8,"name":"beeperLoopCycleCounter","range":{"end":{"character":51,"line":184},"start":{"character":4,"line":184}},"selectionRange":{"end":{"character":48,"line":184},"start":{"character":26,"line":184}}},{"kind":8,"name":"beeperLoopDelayPeriodReloadValue","range":{"end":{"character":61,"line":185},"start":{"character":4,"line":185}},"selectionRange":{"end":{"character":58,"line":185},"start":{"character":26,"line":185}}},{"kind":8,"name":"displayIdx","range":{"end":{"character":23,"line":187},"start":{"character":4,"line":187}},"selectionRange":{"end":{"character":19,"line":187},"start":{"character":9,"line":187}}},{"kind":8,"name":"blinkEnabled","range":{"end":{"character":25,"line":188},"start":{"character":4,"line":188}},"selectionRange":{"end":{"character":21,"line":188},"start":{"character":9,"line":188}}},{"kind":8,"name":"blinkState","range":{"end":{"character":23,"line":189},"start":{"character":4,"line":189}},"selectionRange":{"end":{"character":19,"line":189},"start":{"character":9,"line":189}}},{"kind":8,"name":"blinkCounter","range":{"end":{"character":25,"line":190},"start":{"character":4,"line":190}},"selectionRange":{"end":{"character":21,"line":190},"start":{"character":9,"line":190}}},{"kind":8,"name":"ledState","range":{"end":{"character":20,"line":192},"start":{"character":4,"line":192}},"selectionRange":{"end":{"character":17,"line":192},"start":{"character":9,"line":192}}},{"kind":8,"name":"ledBlinkEnabled","range":{"end":{"character":27,"line":193},"start":{"character":4,"line":193}},"selectionRange":{"end":{"character":24,"line":193},"start":{"character":9,"line":193}}},{"kind":8,"name":"ledOutput","range":{"end":{"character":20,"line":194},"start":{"character":4,"line":194}},"selectionRange":{"end":{"character":18,"line":194},"start":{"character":9,"line":194}}},{"kind":8,"name":"pulseInEnabled","range":{"end":{"character":40,"line":196},"start":{"character":4,"line":196}},"selectionRange":{"end":{"character":32,"line":196},"start":{"character":18,"line":196}}},{"kind":8,"name":"pulseInReadInProgress","range":{"end":{"character":42,"line":197},"start":{"character":4,"line":197}},"selectionRange":{"end":{"character":39,"line":197},"start":{"character":18,"line":197}}},{"kind":8,"name":"pulseInWriteInProgress","range":{"end":{"character":43,"line":198},"start":{"character":4,"line":198}},"selectionRange":{"end":{"character":40,"line":198},"start":{"character":18,"line":198}}},{"kind":8,"name":"pulseInTimeOut","range":{"end":{"character":47,"line":200},"start":{"character":4,"line":200}},"selectionRange":{"end":{"character":40,"line":200},"start":{"character":26,"line":200}}},{"kind":8,"name":"pulseInPin","range":{"end":{"character":43,"line":201},"start":{"character":4,"line":201}},"selectionRange":{"end":{"character":28,"line":201},"start":{"character":18,"line":201}}},{"kind":8,"name":"pulseInPeriodCounter","range":{"end":{"character":53,"line":202},"start":{"character":4,"line":202}},"selectionRange":{"end":{"character":46,"line":202},"start":{"character":26,"line":202}}},{"kind":8,"name":"pulseInTrigger","range":{"end":{"character":38,"line":203},"start":{"character":4,"line":203}},"selectionRange":{"end":{"character":32,"line":203},"start":{"character":18,"line":203}}},{"kind":8,"name":"pulseInPeriod_volatile","range":{"end":{"character":51,"line":204},"start":{"character":4,"line":204}},"selectionRange":{"end":{"character":48,"line":204},"start":{"character":26,"line":204}}},{"kind":8,"name":"pulseInPeriod_safe","range":{"end":{"character":47,"line":205},"start":{"character":4,"line":205}},"selectionRange":{"end":{"character":44,"line":205},"start":{"character":26,"line":205}}},{"kind":8,"name":"pulseInState","range":{"end":{"character":33,"line":206},"start":{"character":4,"line":206}},"selectionRange":{"end":{"character":30,"line":206},"start":{"character":18,"line":206}}},{"kind":8,"name":"pulseInTotalCount_volatile","range":{"end":{"character":57,"line":207},"start":{"character":4,"line":207}},"selectionRange":{"end":{"character":53,"line":207},"start":{"character":27,"line":207}}},{"kind":8,"name":"pulseInTotalCount_safe","range":{"end":{"character":53,"line":208},"start":{"character":4,"line":208}},"selectionRange":{"end":{"character":49,"line":208},"start":{"character":27,"line":208}}},{"kind":8,"name":"sonarSmoothingLevel","range":{"end":{"character":49,"line":210},"start":{"character":4,"line":210}},"selectionRange":{"end":{"character":28,"line":210},"start":{"character":9,"line":210}}},{"kind":8,"name":"lm35SmoothingLevel","range":{"end":{"character":48,"line":211},"start":{"character":4,"line":211}},"selectionRange":{"end":{"character":27,"line":211},"start":{"character":9,"line":211}}}],"kind":5,"name":"MultiFuncShield","range":{"end":{"character":1,"line":212},"start":{"character":0,"line":63}},"selectionRange":{"end":{"character":21,"line":63},"start":{"character":6,"line":63}}},{"kind":13,"name":"MFS","range":{"end":{"character":26,"line":214},"start":{"character":0,"line":214}},"selectionRange":{"end":{"character":26,"line":214},"start":{"character":23,"line":214}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":60,"line":217},"start":{"character":0,"line":217}},"selectionRange":{"end":{"character":20,"line":217},"start":{"character":11,"line":217}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":92,"line":220},"start":{"character":0,"line":220}},"selectionRange":{"end":{"character":20,"line":220},"start":{"character":11,"line":220}}}]}
>>>
Content-Length: 225

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h"},"position":{"line":71,"character":11}},"id":345,"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"id":345,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `initialize`  \n\n---\n→ `void`  \nInitializes this instance, but interrupt based features are not available.  \n\n---\n```cpp\n// In MultiFuncShield\npublic: void initialize()\n```"},"range":{"end":{"character":19,"line":71},"start":{"character":9,"line":71}}}}
>>>
Content-Length: 198

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp"}},"id":346,"jsonrpc":"2.0"}
<<<
Content-Length: 13264

{"id":346,"jsonrpc":"2.0","result":[{"kind":13,"name":"MFS","range":{"end":{"character":19,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":19,"line":6},"start":{"character":16,"line":6}}},{"kind":13,"name":"LED","range":{"end":{"character":63,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":14,"line":10},"start":{"character":11,"line":10}}},{"kind":13,"name":"SEGMENT_MAP_DIGIT","range":{"end":{"character":84,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":28,"line":13},"start":{"character":11,"line":13}}},{"kind":13,"name":"SEGMENT_MAP_ALPHA","range":{"end":{"character":163,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":28,"line":15},"start":{"character":11,"line":15}}},{"kind":13,"name":"SEGMENT_SELECT","range":{"end":{"character":51,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":25,"line":18},"start":{"character":11,"line":18}}},{"kind":13,"name":"DISPLAY_OVERFLOW_ERROR","range":{"end":{"character":39,"line":19},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":33,"line":19},"start":{"character":11,"line":19}}},{"kind":13,"name":"BLINK_ON_COUNT","range":{"end":{"character":30,"line":21},"start":{"character":0,"line":21}},"selectionRange":{"end":{"character":25,"line":21},"start":{"character":11,"line":21}}},{"kind":13,"name":"BLINK_OFF_COUNT","range":{"end":{"character":31,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":26,"line":22},"start":{"character":11,"line":22}}},{"kind":13,"name":"displayMemory","range":{"end":{"character":50,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":27,"line":24},"start":{"character":14,"line":24}}},{"kind":13,"name":"displayTimerScaler","range":{"end":{"character":62,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":32,"line":28},"start":{"character":14,"line":28}}},{"kind":13,"name":"displayBrightness","range":{"end":{"character":35,"line":29},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":31,"line":29},"start":{"character":14,"line":29}}},{"kind":13,"name":"sonarData","range":{"end":{"character":16,"line":33},"start":{"character":0,"line":33}},"selectionRange":{"end":{"character":13,"line":33},"start":{"character":4,"line":33}}},{"kind":13,"name":"sonarDataIndex","range":{"end":{"character":23,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":19,"line":34},"start":{"character":5,"line":34}}},{"kind":13,"name":"lm35Data","range":{"end":{"character":15,"line":38},"start":{"character":0,"line":38}},"selectionRange":{"end":{"character":12,"line":38},"start":{"character":4,"line":38}}},{"kind":13,"name":"lm35DataIndex","range":{"end":{"character":22,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":18,"line":39},"start":{"character":5,"line":39}}},{"kind":12,"name":"isrWrapper","range":{"end":{"character":18,"line":42},"start":{"character":0,"line":42}},"selectionRange":{"end":{"character":15,"line":42},"start":{"character":5,"line":42}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":50,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":24,"line":43},"start":{"character":5,"line":43}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":37,"line":44},"start":{"character":0,"line":44}},"selectionRange":{"end":{"character":24,"line":44},"start":{"character":5,"line":44}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":29,"line":45},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":16,"line":45},"start":{"character":5,"line":45}}},{"kind":12,"name":"readButton","range":{"end":{"character":31,"line":46},"start":{"character":0,"line":46}},"selectionRange":{"end":{"character":15,"line":46},"start":{"character":5,"line":46}}},{"kind":12,"name":"writeLed","range":{"end":{"character":38,"line":47},"start":{"character":0,"line":47}},"selectionRange":{"end":{"character":13,"line":47},"start":{"character":5,"line":47}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":85,"line":49},"start":{"character":0,"line":49}},"selectionRange":{"end":{"character":13,"line":49},"start":{"character":4,"line":49}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":53,"line":50},"start":{"character":0,"line":50}},"selectionRange":{"end":{"character":13,"line":50},"start":{"character":4,"line":50}}},{"kind":13,"name":"pulseInBit","range":{"end":{"character":18,"line":53},"start":{"character":0,"line":53}},"selectionRange":{"end":{"character":18,"line":53},"start":{"character":8,"line":53}}},{"kind":13,"name":"pulseInPort","range":{"end":{"character":19,"line":54},"start":{"character":0,"line":54}},"selectionRange":{"end":{"character":19,"line":54},"start":{"character":8,"line":54}}},{"kind":13,"name":"buttonPort","range":{"end":{"character":21,"line":57},"start":{"character":0,"line":57}},"selectionRange":{"end":{"character":18,"line":57},"start":{"character":8,"line":57}}},{"kind":13,"name":"buttonBit","range":{"end":{"character":20,"line":58},"start":{"character":0,"line":58}},"selectionRange":{"end":{"character":17,"line":58},"start":{"character":8,"line":58}}},{"kind":12,"name":"initShield","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":61}},"selectionRange":{"end":{"character":15,"line":61},"start":{"character":5,"line":61}}},{"kind":6,"name":"MultiFuncShield::initialize","range":{"end":{"character":1,"line":112},"start":{"character":0,"line":105}},"selectionRange":{"end":{"character":32,"line":105},"start":{"character":22,"line":105}}},{"kind":6,"name":"MultiFuncShield::initSonar","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":115}},"selectionRange":{"end":{"character":31,"line":115},"start":{"character":22,"line":115}}},{"kind":6,"name":"MultiFuncShield::getSonarDataCm","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":128}},"selectionRange":{"end":{"character":44,"line":128},"start":{"character":30,"line":128}}},{"kind":6,"name":"MultiFuncShield::initLM35","range":{"end":{"character":1,"line":193},"start":{"character":0,"line":184}},"selectionRange":{"end":{"character":30,"line":184},"start":{"character":22,"line":184}}},{"kind":6,"name":"MultiFuncShield::getLM35Data","range":{"end":{"character":1,"line":247},"start":{"character":0,"line":197}},"selectionRange":{"end":{"character":32,"line":197},"start":{"character":21,"line":197}}},{"kind":6,"name":"MultiFuncShield::initPulseInCounter","range":{"end":{"character":1,"line":270},"start":{"character":0,"line":251}},"selectionRange":{"end":{"character":40,"line":251},"start":{"character":22,"line":251}}},{"kind":6,"name":"MultiFuncShield::disablePulseInCounter","range":{"end":{"character":1,"line":275},"start":{"character":0,"line":272}},"selectionRange":{"end":{"character":43,"line":272},"start":{"character":22,"line":272}}},{"kind":6,"name":"MultiFuncShield::getPulseInPeriod","range":{"end":{"character":1,"line":287},"start":{"character":0,"line":278}},"selectionRange":{"end":{"character":46,"line":278},"start":{"character":30,"line":278}}},{"kind":6,"name":"MultiFuncShield::getPulseInTotalCount","range":{"end":{"character":1,"line":300},"start":{"character":0,"line":291}},"selectionRange":{"end":{"character":51,"line":291},"start":{"character":31,"line":291}}},{"kind":6,"name":"MultiFuncShield::resetPulseInTotalCount","range":{"end":{"character":1,"line":310},"start":{"character":0,"line":304}},"selectionRange":{"end":{"character":44,"line":304},"start":{"character":22,"line":304}}},{"kind":6,"name":"MultiFuncShield::setPulseInTimeOut","range":{"end":{"character":1,"line":319},"start":{"character":0,"line":314}},"selectionRange":{"end":{"character":39,"line":314},"start":{"character":22,"line":314}}},{"kind":6,"name":"MultiFuncShield::queueButton","range":{"end":{"character":1,"line":336},"start":{"character":0,"line":323}},"selectionRange":{"end":{"character":33,"line":323},"start":{"character":22,"line":323}}},{"kind":6,"name":"MultiFuncShield::getButton","range":{"end":{"character":1,"line":357},"start":{"character":0,"line":340}},"selectionRange":{"end":{"character":31,"line":340},"start":{"character":22,"line":340}}},{"kind":6,"name":"MultiFuncShield::beep","range":{"end":{"character":1,"line":384},"start":{"character":0,"line":361}},"selectionRange":{"end":{"character":26,"line":361},"start":{"character":22,"line":361}}},{"kind":6,"name":"MultiFuncShield::setBeepOffPeriod","range":{"end":{"character":1,"line":402},"start":{"character":0,"line":388}},"selectionRange":{"end":{"character":38,"line":388},"start":{"character":22,"line":388}}},{"kind":6,"name":"MultiFuncShield::writeLeds","range":{"end":{"character":1,"line":425},"start":{"character":0,"line":413}},"selectionRange":{"end":{"character":31,"line":413},"start":{"character":22,"line":413}}},{"kind":6,"name":"MultiFuncShield::blinkLeds","range":{"end":{"character":1,"line":439},"start":{"character":0,"line":429}},"selectionRange":{"end":{"character":31,"line":429},"start":{"character":22,"line":429}}},{"kind":6,"name":"MultiFuncShield::setDisplayBrightness","range":{"end":{"character":1,"line":445},"start":{"character":0,"line":442}},"selectionRange":{"end":{"character":42,"line":442},"start":{"character":22,"line":442}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":485},"start":{"character":0,"line":449}},"selectionRange":{"end":{"character":27,"line":449},"start":{"character":22,"line":449}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":500},"start":{"character":0,"line":489}},"selectionRange":{"end":{"character":27,"line":489},"start":{"character":22,"line":489}}},{"kind":6,"name":"MultiFuncShield::write","range":{"end":{"character":1,"line":566},"start":{"character":0,"line":504}},"selectionRange":{"end":{"character":27,"line":504},"start":{"character":22,"line":504}}},{"kind":6,"name":"MultiFuncShield::blinkDisplay","range":{"end":{"character":1,"line":580},"start":{"character":0,"line":570}},"selectionRange":{"end":{"character":34,"line":570},"start":{"character":22,"line":570}}},{"kind":6,"name":"MultiFuncShield::setTimer","range":{"end":{"character":1,"line":593},"start":{"character":0,"line":584}},"selectionRange":{"end":{"character":30,"line":584},"start":{"character":22,"line":584}}},{"kind":6,"name":"MultiFuncShield::getTimer","range":{"end":{"character":1,"line":605},"start":{"character":0,"line":597}},"selectionRange":{"end":{"character":39,"line":597},"start":{"character":31,"line":597}}},{"kind":6,"name":"MultiFuncShield::wait","range":{"end":{"character":1,"line":613},"start":{"character":0,"line":609}},"selectionRange":{"end":{"character":26,"line":609},"start":{"character":22,"line":609}}},{"kind":6,"name":"MultiFuncShield::isrCallBack","range":{"end":{"character":1,"line":901},"start":{"character":0,"line":617}},"selectionRange":{"end":{"character":33,"line":617},"start":{"character":22,"line":617}}},{"kind":6,"name":"MultiFuncShield::manualDisplayRefresh","range":{"end":{"character":1,"line":914},"start":{"character":0,"line":905}},"selectionRange":{"end":{"character":42,"line":905},"start":{"character":22,"line":905}}},{"kind":6,"name":"MultiFuncShield::manualButtonHandler","range":{"end":{"character":1,"line":943},"start":{"character":0,"line":918}},"selectionRange":{"end":{"character":41,"line":918},"start":{"character":22,"line":918}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"__vector_14","range":{"end":{"character":1,"line":955},"start":{"character":0,"line":952}},"selectionRange":{"end":{"character":6,"line":952},"start":{"character":0,"line":952}}},{"kind":12,"name":"AsciiToSegmentValue","range":{"end":{"character":1,"line":994},"start":{"character":0,"line":958}},"selectionRange":{"end":{"character":24,"line":958},"start":{"character":5,"line":958}}},{"kind":12,"name":"MedianOf5","range":{"end":{"character":1,"line":1049},"start":{"character":0,"line":997}},"selectionRange":{"end":{"character":13,"line":997},"start":{"character":4,"line":997}}},{"kind":12,"name":"MedianOf9","range":{"end":{"character":1,"line":1184},"start":{"character":0,"line":1054}},"selectionRange":{"end":{"character":13,"line":1054},"start":{"character":4,"line":1054}}},{"kind":12,"name":"WriteValueToSegment","range":{"end":{"character":3,"line":1208},"start":{"character":2,"line":1191}},"selectionRange":{"end":{"character":26,"line":1191},"start":{"character":7,"line":1191}}},{"kind":12,"name":"writeBeeper","range":{"end":{"character":3,"line":1213},"start":{"character":2,"line":1210}},"selectionRange":{"end":{"character":18,"line":1210},"start":{"character":7,"line":1210}}},{"kind":12,"name":"writeLed","range":{"end":{"character":3,"line":1232},"start":{"character":2,"line":1215}},"selectionRange":{"end":{"character":15,"line":1215},"start":{"character":7,"line":1215}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":347,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":347,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 232

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":4}},"id":348,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":348,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 487

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'MFS'"}]}},"id":349,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":349,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":131},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 288

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":6},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":350,"jsonrpc":"2.0"}
<<<
Content-Length: 69

{"id":350,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":351,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":351,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 572

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":131}}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":132},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":352,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":352,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":353,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":132}}Content-Length: 1149

{"id":353,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":133},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":354,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":354,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":355,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":133}}Content-Length: 1149

{"id":355,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":134},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":356,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":356,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":357,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":134}}Content-Length: 1149

{"id":357,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 312

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":135},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":358,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":358,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":359,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":135}}Content-Length: 1149

{"id":359,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":136},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":360,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":360,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":361,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":136}}Content-Length: 1149

{"id":361,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":137},"contentChanges":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":11}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":362,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":362,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":363,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":137}}Content-Length: 1149

{"id":363,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":138},"contentChanges":[{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":364,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":364,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":365,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":138}}Content-Length: 1149

{"id":365,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":139},"contentChanges":[{"range":{"start":{"line":11,"character":13},"end":{"line":11,"character":13}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":366,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":366,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":367,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":139}}Content-Length: 1149

{"id":367,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"context":{"diagnostics":[]}},"id":368,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":368,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":369,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":369,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":140},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"text":"z"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":370,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":370,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":140}}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":141},"contentChanges":[{"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":371,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":371,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":372,"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":141}}Content-Length: 1149

{"id":372,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}},"id":373,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":373,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":374,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":374,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":142},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":375,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":375,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":142}}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":17}},"id":376,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":376,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":377,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":377,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 330

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":143},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":18}},"rangeLength":1,"text":")"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":378,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":378,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 241

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":18}},"id":379,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":379,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}},"id":380,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":380,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":144},"contentChanges":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":381,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":381,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":144}}
>>>
Content-Length: 307

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[]}},"id":382,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":382,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":383,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":383,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 305

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"context":{"diagnostics":[]}},"id":384,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":384,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":145},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 204

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp"}},"id":385,"jsonrpc":"2.0"}
<<<
Content-Length: 1149

{"id":385,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":13},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":17},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":9,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":22},"start":{"character":0,"line":19}},"selectionRange":{"end":{"character":8,"line":19},"start":{"character":5,"line":19}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":12},"start":{"character":2,"line":12}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server357765459/sketch/LibraryTests.ino.cpp","version":145}}






Started logging.

>>>
Content-Length: 2163

{"method":"initialize","params":{"processId":22928,"rootPath":"C:\\Users\\banks\\AppData\\Local\\Temp\\arduino-language-server523564859\\sketch","rootUri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch","clientInfo":{"name":"vscode","version":"1.53.2"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1033

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 6 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n  MFS.initialize();\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}
>>>
Content-Length: 34867

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","languageId":"cpp","version":1,"text":"#include \"MultiFuncShield.h\"\r\n\r\n#define BUTTON_SAMPLE_INTERVAL_SCALE  20\r\n#define BUTTON_SAMPLE_INTERVAL  (1000 / BUTTON_SAMPLE_INTERVAL_SCALE)\r\n\r\n\r\nMultiFuncShield MFS;\r\n\r\n// Display specific variables\r\n\r\nconst byte LED[] = {LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};\r\n\r\n/* Segment byte maps for numbers 0 to 9 */\r\nconst byte SEGMENT_MAP_DIGIT[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0X80,0X90};\r\n/* Segment byte maps for alpha a-z */\r\nconst byte SEGMENT_MAP_ALPHA[] = {136, 131, 167, 161, 134, 142, 144, 139 ,207, 241, 182, 199, 182, 171, 163, 140, 152, 175, 146, 135, 227, 182, 182, 182, 145, 182};\r\n\r\n/* Byte maps to select digit 1 to 4 */\r\nconst byte SEGMENT_SELECT[] = {0xF1,0xF2,0xF4,0xF8};\r\nconst char DISPLAY_OVERFLOW_ERROR = 'E';\r\n\r\nconst byte BLINK_ON_COUNT = 65;\r\nconst byte BLINK_OFF_COUNT = 20;\r\n\r\nvolatile byte displayMemory[4] = {255,255,255,255};\r\n\r\n#define\tDISPLAY_TIMER_SCALER_RELOAD\t4\r\n\r\nvolatile byte displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\nvolatile byte displayBrightness = 0;\r\n\r\n// Sonar ranger specific variables\r\n\r\nint sonarData[9];\r\nbyte sonarDataIndex = 0;\r\n\r\n// LM35 specific variables\r\n\r\nint lm35Data[8];\r\nbyte lm35DataIndex = 0;\r\n\r\n// Misc methods and functions.\r\nvoid isrWrapper ();\r\nvoid WriteValueToSegment(byte Segment, byte Value);\r\nbyte AsciiToSegmentValue (byte ascii);\r\nvoid writeBeeper (byte value);\r\nbyte readButton (byte btnIndex);\r\nvoid writeLed(byte ledIdx, byte value);\r\n\r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// Pulse in counter port specifics.\r\nuint8_t pulseInBit;\r\nuint8_t pulseInPort;\r\n\r\n// button port specfics\r\nuint8_t buttonPort[3];\r\nuint8_t buttonBit[3];\r\n\r\n\r\nvoid initShield()\r\n{\r\n    /* Set each LED pin to outputs */\r\n  pinMode(LED[0], OUTPUT);\r\n  pinMode(LED[1], OUTPUT);\r\n  pinMode(LED[2], OUTPUT);\r\n  pinMode(LED[3], OUTPUT);\r\n  \r\n  /* Turn all the LED's off */\r\n  digitalWrite(LED[0], HIGH);\r\n  digitalWrite(LED[1], HIGH);\r\n  digitalWrite(LED[2], HIGH);\r\n  digitalWrite(LED[3], HIGH);\r\n\r\n  /* Set Segment display DIO pins to outputs */\r\n  pinMode(LATCH_PIN,OUTPUT);\r\n  pinMode(CLK_PIN,OUTPUT);\r\n  pinMode(DATA_PIN,OUTPUT); \r\n  \r\n  WriteValueToSegment(0,255);\r\n  \r\n  /* Set the buzzer pin to an output and turn the buzzer off */\r\n  pinMode(BEEPER_PIN, OUTPUT);\r\n  digitalWrite(BEEPER_PIN, HIGH);\r\n\r\n  /* Set button pins to input */\r\n  pinMode(A1, INPUT_PULLUP);\r\n  pinMode(A2, INPUT_PULLUP);\r\n  pinMode(A3, INPUT_PULLUP);\r\n  \r\n  int idx=0;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_1_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_1_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_2_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_2_PIN);\r\n  idx++;\r\n  buttonPort[idx] = digitalPinToPort(BUTTON_3_PIN);\r\n  buttonBit[idx] = digitalPinToBitMask(BUTTON_3_PIN);\r\n\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n\r\nvoid MultiFuncShield::initialize()\r\n{\r\n  initShield();\r\n\r\n  // piggy back on to timer0, which is already set to approx 1khz.\r\n  OCR0A = 0xAF;\r\n  TIMSK0 |= _BV(OCIE0A);\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initSonar(byte level)\r\n{\r\n  sonarSmoothingLevel = level;\r\n  sonarDataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 9; i++)\r\n  {\r\n    sonarData[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getSonarDataCm(byte triggerPin, byte echoPin)\r\n{\r\n  uint8_t bit = digitalPinToBitMask(echoPin);\r\n  uint8_t port = digitalPinToPort(echoPin);\r\n  uint8_t stateMask = (HIGH ? bit : 0); \r\n  \r\n  noInterrupts();\r\n  digitalWrite(triggerPin, LOW); //Low, high and low level take a short time to TrigPin pulse\r\n  delayMicroseconds(2);\r\n  digitalWrite(triggerPin, HIGH);\r\n  delayMicroseconds(10);\r\n  digitalWrite(triggerPin, LOW);\r\n  interrupts();\r\n \r\n  // wait for any previous pulse to end\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  // wait for the pulse to start\r\n  while ((*portInputRegister(port) \u0026 bit) != stateMask) ; \r\n\r\n  unsigned long timeStart = micros();\r\n  // wait for the pulse to stop\r\n  while ((*portInputRegister(port) \u0026 bit) == stateMask) ; \r\n\r\n  sonarData [sonarDataIndex] = ((micros() - timeStart) * 141) \u003e\u003e 13;  // (value * 1.00) / 58\r\n  \r\n  int medianReading;\r\n  \r\n  if (sonarSmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    medianReading  = sonarData [sonarDataIndex];\r\n  }\r\n  else if (sonarSmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 5)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf5(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4]);\r\n  }\r\n  else\r\n  {\r\n      sonarDataIndex++;\r\n      if (sonarDataIndex \u003e= 9)\r\n      {\r\n        sonarDataIndex = 0;\r\n      }\r\n      medianReading = MedianOf9(sonarData[0], sonarData[1], sonarData[2], sonarData[3], sonarData[4], sonarData[5], sonarData[6], sonarData[7], sonarData[8]);\r\n  }\r\n  \r\n  return medianReading;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initLM35(byte level)\r\n{\r\n  lm35SmoothingLevel = level;\r\n  lm35DataIndex = 0;\r\n  \r\n  for (int i=0; i \u003c 8; i++)\r\n  {\r\n    lm35Data[i] = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MultiFuncShield::getLM35Data()\r\n{\r\n  \r\n  lm35Data [lm35DataIndex] = analogRead(LM35_PIN);\r\n  \r\n  int reading =0;\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    reading  = lm35Data [lm35DataIndex];\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 4)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n     \r\n      for (int i=0; i\u003c4; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  else\r\n  {\r\n      lm35DataIndex++;\r\n      if (lm35DataIndex \u003e= 8)\r\n      {\r\n        lm35DataIndex = 0;\r\n      }\r\n\r\n      for (int i=0; i\u003c8; i++)\r\n      {\r\n        reading = reading + lm35Data[i];\r\n      }\r\n  }\r\n  \r\n  if (lm35SmoothingLevel == SMOOTHING_NONE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 8;;\r\n  }\r\n  else if (lm35SmoothingLevel == SMOOTHING_MODERATE)\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 10;\r\n  }\r\n  else\r\n  {\r\n    return ((unsigned long)1250 * reading) \u003e\u003e 11;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::initPulseInCounter(byte pin, unsigned int timeOut, byte trigger)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n\r\n  pulseInBit = digitalPinToBitMask(pin);\r\n  pulseInPort = digitalPinToPort(pin);\r\n  \r\n  pulseInTimeOut = timeOut;\r\n  pulseInPin = pin;\r\n  pulseInPeriodCounter =timeOut;\r\n  pulseInPeriod_volatile =0;\r\n  pulseInPeriod_safe =0;\r\n  pulseInState =0;\r\n  pulseInTrigger = trigger;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  \r\n  pulseInWriteInProgress = 0;\r\n  pulseInEnabled = true;\r\n}\r\n\r\nvoid MultiFuncShield::disablePulseInCounter ()\r\n{\r\n  pulseInEnabled = false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned int MultiFuncShield::getPulseInPeriod()\r\n{\r\n  unsigned int period;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  period = pulseInPeriod_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return period;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getPulseInTotalCount()\r\n{\r\n  unsigned long count;\r\n  \r\n  pulseInReadInProgress = 1;\r\n  count = pulseInTotalCount_safe;\r\n  pulseInReadInProgress =0;\r\n  \r\n  return count;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::resetPulseInTotalCount()\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTotalCount_volatile = 0;\r\n  pulseInTotalCount_safe = 0;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setPulseInTimeOut(unsigned int timeOut)\r\n{\r\n  pulseInWriteInProgress = 1;\r\n  pulseInTimeOut = timeOut;\r\n  pulseInWriteInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::queueButton (byte button)\r\n{\r\n  if (buttonBufferCount \u003c= sizeof (buttonBuffer))\r\n  {\r\n    buttonBuffer [button_write_pos] = button;\r\n    buttonBufferCount++;\r\n    button_write_pos++;\r\n    \r\n    if (button_write_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_write_pos = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte MultiFuncShield::getButton ()\r\n{\r\n  byte button = 0;\r\n  \r\n  if (buttonBufferCount \u003e 0)\r\n  {\r\n    button = buttonBuffer [button_read_pos];\r\n    buttonBufferCount--;\r\n    button_read_pos++;\r\n    \r\n    if (button_read_pos \u003e= sizeof (buttonBuffer))\r\n    {\r\n      button_read_pos = 0;\r\n    }\r\n  }\r\n  \r\n  return button;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::beep(unsigned int onPeriod, unsigned int offPeriod, byte cycles, unsigned int loopCycles, unsigned int loopDelayPeriod)\r\n{\r\n  cycles = cycles == 0 ? 1 : cycles;\r\n\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (onPeriod == 0)\r\n  {\r\n    digitalWrite(BEEPER_PIN, 1);  // turn off beeper immediately\r\n  }\r\n  \r\n  beeperState = 0;\r\n  beeperOnPeriodReloadValue = onPeriod * 10;\r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperPeriodCounter = onPeriod * 10;\r\n  \r\n  beeperCycleReloadValue = cycles;\r\n  beeperCycleCounter = cycles;\r\n  \r\n  beeperLoopCycleCounter = loopCycles;\r\n  beeperLoopDelayPeriodReloadValue = loopDelayPeriod * 10;\r\n  \r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setBeepOffPeriod(unsigned int offPeriod)\r\n{\r\n  beeperModifyInProgress = 1;  // must do this first before changing volatile fields.\r\n  \r\n  if (beeperState == 1)\r\n  {\r\n    if (offPeriod * 10 \u003c beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter = offPeriod * 10;\r\n    }\r\n  }\r\n  \r\n  beeperOffPeriodReloadValue = offPeriod * 10;\r\n  beeperModifyInProgress = 0; // must do this last.\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void MultiFuncShield::setLedControlMask(byte controlMask)\r\n//{\r\n//  ledControlMask = controlMask;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::writeLeds(byte leds, byte lit)\r\n{\r\n  if (lit)\r\n  {\r\n    ledState = ledState | leds;\r\n    //ledControlMask = ledControlMask | leds;\r\n  }\r\n  else\r\n  {\r\n    ledState = ledState \u0026 (255 - leds);\r\n    //ledControlMask = ledControlMask \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkLeds(byte leds, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled | leds;\r\n  }\r\n  else\r\n  {\r\n    ledBlinkEnabled = ledBlinkEnabled \u0026 (255 - leds);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setDisplayBrightness(byte level)\r\n{\r\n  displayBrightness = level \u003e= DISPLAY_TIMER_SCALER_RELOAD ? DISPLAY_TIMER_SCALER_RELOAD-1 : level;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(int integer)\r\n{\r\n  char displayText[5] = {' ',' ',' ',' ',0};\r\n  \r\n  if (integer \u003e 9999 || integer \u003c -999)\r\n  {\r\n    displayText[3] = DISPLAY_OVERFLOW_ERROR;\r\n    write(displayText);\r\n  }\r\n  else if (integer == 0)\r\n  {\r\n    displayText[3] = '0';\r\n    write (displayText);\r\n  }\r\n  else\r\n  {\r\n    byte sign = 0;\r\n    if (integer \u003c 0)\r\n    {\r\n      sign = 1;\r\n      integer = integer * -1;\r\n    }\r\n    \r\n    byte idx = 3;\r\n    for (; idx \u003e=0 \u0026\u0026 integer !=0; integer /= 10, idx--)\r\n    {\r\n      displayText[idx]=(integer % 10) + '0';\r\n    }\r\n    \r\n    if (sign)\r\n    {\r\n      displayText[idx] = '-';\r\n    }\r\n    \r\n    write (displayText);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(float number, byte decimalPlaces)\r\n{\r\n  char outstr[7];\r\n  dtostrf(number, 4, decimalPlaces, outstr);\r\n \r\n  if (strlen(outstr) \u003e 5)\r\n  {\r\n    outstr[0] = DISPLAY_OVERFLOW_ERROR;\r\n    outstr[1] = 0;\r\n  }\r\n  write(outstr,1);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::write(const char *text, byte rightJustify)\r\n{\r\n  byte displayBuf[] = {0,0,0,0}, *pBuf = displayBuf;\r\n  \r\n  byte idx =0;\r\n  \r\n  for (; *text != 0 \u0026\u0026 idx \u003c sizeof(displayBuf); text++)\r\n  {\r\n    byte offset = 0;\r\n    \r\n    if (*text == '.')\r\n    {\r\n      if (idx \u003e 0)\r\n      {\r\n        displayBuf[idx-1] = displayBuf[idx-1] \u0026 127;\r\n      }\r\n      else\r\n      {\r\n        displayBuf[idx] = AsciiToSegmentValue(*text);\r\n        idx++;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      displayBuf[idx] = AsciiToSegmentValue(*text);\r\n      idx++;\r\n    }\r\n  }\r\n  \r\n  for (; idx \u003c sizeof(displayBuf); idx++)\r\n  {\r\n    displayBuf[idx] = 255;\r\n  }\r\n  \r\n  // Copy display buffer to display memory\r\n  \r\n  if (rightJustify)\r\n  {\r\n    // right justify\r\n    int i_src = sizeof(displayBuf)-1;\r\n    int i_dst = sizeof(displayMemory)-1;\r\n    \r\n    for (; i_src \u003e= 0 \u0026\u0026 displayBuf[i_src] == 255; i_src--) ;\r\n      \r\n    for (; i_src \u003e= 0 \u0026\u0026 i_dst \u003e= 0; i_src--, i_dst--)\r\n    {\r\n      displayMemory[i_dst] = displayBuf[i_src];\r\n    }\r\n    \r\n    for (; i_dst \u003e= 0; i_dst--)\r\n    {\r\n      displayMemory[i_dst] = 255;\r\n    }\r\n  }\r\n  // left justify\r\n  else\r\n  {\r\n    for (int i =0; i \u003c sizeof(displayBuf); i++)\r\n    {\r\n      displayMemory[i] = displayBuf[i];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::blinkDisplay(byte digits, byte enabled)\r\n{\r\n  if (enabled)\r\n  {\r\n    blinkEnabled = blinkEnabled | digits;\r\n  }\r\n  else\r\n  {\r\n    blinkEnabled = blinkEnabled \u0026 (255 - digits);\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::setTimer(unsigned long thousandths)\r\n{\r\n  timerWriteInProgress = 1;\r\n  timer_volatile = thousandths;\r\n  timerWriteInProgress = 0;\r\n  \r\n  timerReadInProgress = 1;\r\n  timer_safe = thousandths;\r\n  timerReadInProgress = 0;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nunsigned long MultiFuncShield::getTimer()\r\n{\r\n  unsigned long timer;\r\n  timerReadInProgress = 1;\r\n  timer = timer_safe;\r\n  timerReadInProgress = 0;\r\n\r\n  return timer;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::wait(unsigned long thousandths)\r\n{\r\n  setTimer(thousandths);\r\n  while (getTimer()) __asm__(\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\"\"nop\\n\\t\");\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::isrCallBack()\r\n{\r\n  byte displayEnabled = 1;\r\n  \r\n  displayTimerScaler--;\r\n  \r\n  if (displayTimerScaler == 0)\r\n  {\r\n    displayTimerScaler = DISPLAY_TIMER_SCALER_RELOAD;\r\n    \r\n    // Global bink control\r\n    if (blinkEnabled || ledBlinkEnabled)\r\n    {\r\n      blinkCounter++;\r\n      if (blinkState)\r\n      {\r\n        displayEnabled = 1;\r\n        if (blinkCounter \u003e BLINK_ON_COUNT)\r\n        {\r\n          blinkState = 0;\r\n          blinkCounter = 0;\r\n          displayEnabled = 0;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        displayEnabled = 0;\r\n        if (blinkCounter \u003e BLINK_OFF_COUNT)\r\n        {\r\n          blinkState = 1;\r\n          blinkCounter = 0;\r\n          displayEnabled = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    // Digit display blink control\r\n    if (blinkEnabled \u0026 (1 \u003c\u003c displayIdx))\r\n    {\r\n      if (displayEnabled)\r\n      {\r\n        WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n      }\r\n      else\r\n      {\r\n        WriteValueToSegment(displayIdx, 255);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n    }\r\n    \r\n    displayIdx++;\r\n    if (displayIdx \u003e sizeof(displayMemory)-1)\r\n    {\r\n      displayIdx = 0;\r\n    }\r\n    \r\n  \r\n    // LED output and blink control.\r\n    \r\n    byte ledOutputNew = (ledState \u0026 (displayEnabled ? 255 : 0) \u0026 ledBlinkEnabled) | (ledState \u0026 ~ledBlinkEnabled);\r\n    \r\n    if (ledOutputNew != ledOutput)\r\n    {\r\n      for (byte ledIdx = 0; ledIdx \u003c 4; ledIdx++)\r\n      {\r\n        if ((ledOutputNew ^ ledOutput) \u0026 (1 \u003c\u003c ledIdx))    // only set LED if its state has changed\r\n        {\r\n          if (ledBlinkEnabled \u0026 (1 \u003c\u003c ledIdx))\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(displayEnabled \u0026\u0026 ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n          else\r\n          {\r\n            //digitalWrite(LED[ledIdx], !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n            writeLed(ledIdx, !(ledState \u0026 (1 \u003c\u003c ledIdx)));\r\n          }\r\n        }\r\n      }\r\n      ledOutput = ledOutputNew;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // Handle display brightness\r\n    if (displayTimerScaler == displayBrightness)\r\n    {\r\n      WriteValueToSegment(displayIdx == 0 ? 3 : displayIdx-1, 255);\r\n    }\r\n  }\r\n\r\n  // Beeper control.\r\n  \r\n  if (!beeperModifyInProgress \u0026\u0026 beeperOnPeriodReloadValue)\r\n  {    \r\n    if (beeperPeriodCounter == 0)\r\n    {\r\n      switch (beeperState)\r\n      {\r\n        case 0:  // on period\r\n              if (beeperOffPeriodReloadValue)\r\n              {\r\n                beeperPeriodCounter = beeperOffPeriodReloadValue;\r\n                beeperState = 1;\r\n                break;\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 1:  // off period\r\n              beeperCycleCounter--;\r\n              if (beeperCycleCounter)\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n                break;\r\n              }\r\n              else\r\n              {\r\n                beeperCycleCounter = beeperCycleReloadValue;\r\n                beeperPeriodCounter = beeperLoopDelayPeriodReloadValue;\r\n                beeperState = 2;\r\n                \r\n                if (beeperLoopDelayPeriodReloadValue)\r\n                {  \r\n                  break;\r\n                }\r\n              }\r\n              // Fall thru to next state immediately.\r\n        case 2:  // loop cycle delay period\r\n              if (beeperLoopCycleCounter == 0)  // loop beeper indefinitely\r\n              {\r\n                beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                beeperState = 0;\r\n              }\r\n              else\r\n              {\r\n                beeperLoopCycleCounter--;\r\n                if (beeperLoopCycleCounter == 0)\r\n                {          \r\n                  beeperOnPeriodReloadValue = 0;    // beeper activity has now ended.\r\n                  //digitalWrite(BEEPER_PIN, 1);\r\n                  writeBeeper(1);\r\n                }\r\n                else\r\n                {\r\n                  beeperPeriodCounter = beeperOnPeriodReloadValue;\r\n                  beeperState = 0;\r\n                }\r\n              }\r\n              break;\r\n      }\r\n    }\r\n    \r\n    if (beeperPeriodCounter)\r\n    {\r\n      beeperPeriodCounter--;\r\n    }\r\n    \r\n    if (beeperState == 0)\r\n    {\r\n      // beep on\r\n      //digitalWrite(BEEPER_PIN, 0);\r\n      writeBeeper(0);\r\n    }\r\n    else\r\n    {\r\n      // beep off\r\n      //digitalWrite(BEEPER_PIN, 1);\r\n      writeBeeper(1);\r\n    }\r\n  }\r\n   \r\n\r\n  // Bump button sample interval counter\r\n  \r\n  if (buttonSampleIntervalCounter++ \u003e= BUTTON_SAMPLE_INTERVAL)\r\n  {\r\n    buttonSampleIntervalCounter =0;\r\n    \r\n    byte btnStateNow;\r\n    \r\n    for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n    {\r\n      //btnStateNow = !digitalRead(buttonPins[i]);\r\n      //btnStateNow = !readButton(i);\r\n      btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n      \r\n      // If button state has changed, action the change.\r\n      if (buttonState[i] != btnStateNow)\r\n      {\r\n        // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n        if (btnStateNow)\r\n        {\r\n          queueButton((i+1) | BUTTON_PRESSED_IND);\r\n        }\r\n        else\r\n        {\r\n          // otherwise button state has changed to up, queue SHORT or LONG RELEASE state to buffer, and reset pressed time counter.\r\n          if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL))\r\n          {\r\n            queueButton((i+1) | BUTTON_LONG_RELEASE_IND);\r\n          }\r\n          else\r\n          {\r\n            queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n          }\r\n          buttonPressTime[i] = 0;\r\n        }\r\n        buttonState[i] = btnStateNow;\r\n      }\r\n\r\n      // if button state pressed, increment pressed time counter. Queue LONG PRESS to buffer, if button is held long.  \r\n      if (btnStateNow)\r\n      {\r\n        if (buttonPressTime[i] \u003e (1000 / BUTTON_SAMPLE_INTERVAL) \u0026\u0026 (buttonPressTime[i] \u0026 3) == 0)\r\n        {\r\n          queueButton((i+1) | BUTTON_LONG_PRESSED_IND);\r\n        }\r\n        \r\n        if (buttonPressTime[i] \u003c 65535)\r\n        {\r\n          buttonPressTime[i]++;\r\n        }\r\n      }\r\n    }    \r\n  }\r\n\r\n  // Pulse in processing\r\n  \r\n  if (pulseInEnabled \u0026\u0026 !pulseInWriteInProgress)\r\n  {\r\n    //byte pulseInStateNow = digitalRead(pulseInPin);\r\n    byte pulseInStateNow = (*portInputRegister(pulseInPort) \u0026 pulseInBit ? 1 : 0);\r\n    \r\n    // Has the state of the pulse changed?\r\n    if ((pulseInState != pulseInStateNow) \u0026\u0026 (pulseInStateNow == pulseInTrigger))\r\n    {\r\n      pulseInTotalCount_volatile++;\r\n      \r\n      pulseInPeriod_volatile = (pulseInPeriodCounter \u003e= pulseInTimeOut ? 0 : pulseInPeriodCounter);\r\n      pulseInPeriodCounter = 0;\r\n    }\r\n    else\r\n    {\r\n      if (pulseInPeriodCounter \u003c pulseInTimeOut)\r\n      {\r\n        pulseInPeriodCounter++;\r\n      }\r\n      else\r\n      {\r\n        pulseInPeriod_volatile = 0;\r\n      }\r\n    }\r\n\r\n    if (!pulseInReadInProgress)\r\n    {\r\n      pulseInPeriod_safe = pulseInPeriod_volatile;\r\n      pulseInTotalCount_safe = pulseInTotalCount_volatile;\r\n    }\r\n      \r\n    if (pulseInState != pulseInStateNow)\r\n    {\r\n      pulseInState = pulseInStateNow;\r\n    }\r\n  }\r\n\r\n  // Bump the count down timer.\r\n  if (timer_volatile \u0026\u0026 !timerWriteInProgress)\r\n  {\r\n    timer_volatile--;\r\n  }\r\n  \r\n  if (!timerReadInProgress)\r\n  {\r\n    timer_safe = timer_volatile;\r\n  }\r\n  \r\n  if (userInterrupt)\r\n  {\r\n    userInterrupt();\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualDisplayRefresh()\r\n{\r\n  WriteValueToSegment(displayIdx, displayMemory[displayIdx]);\r\n  \r\n  displayIdx++;\r\n  if (displayIdx \u003e sizeof(displayMemory)-1)\r\n  {\r\n    displayIdx = 0;\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nvoid MultiFuncShield::manualButtonHandler()\r\n{\r\n  byte btnStateNow;\r\n  \r\n  for (int i=0; i \u003c BUTTON_COUNT; i++)\r\n  {\r\n    //btnStateNow = !digitalRead(buttonPins[i]);\r\n    btnStateNow = !(*portInputRegister(buttonPort[i]) \u0026 buttonBit[i]);\r\n    // If button state has changed, action the change.\r\n\r\n    if (buttonState[i] != btnStateNow)\r\n    {\r\n      // if button state changes to pressed, queue SHORT PRESS to buffer.\r\n      if (btnStateNow)\r\n      {\r\n        queueButton((i+1) | BUTTON_PRESSED_IND);\r\n      }\r\n      else\r\n      {\r\n        // otherwise button state has changed to up, queue SHORT RELEASE state to buffer.\r\n        queueButton((i+1) | BUTTON_SHORT_RELEASE_IND);\r\n      }\r\n      buttonState[i] = btnStateNow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n//void isrWrapper ()\r\n//{\r\n//  MFS.isrCallBack();\r\n//}\r\n\r\nSIGNAL(TIMER0_COMPA_vect)\r\n{\r\n  MFS.isrCallBack();\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nbyte AsciiToSegmentValue (byte ascii)\r\n{\r\n  byte segmentValue = 182;\r\n  \r\n  if (ascii \u003e= '0' \u0026\u0026 ascii \u003c= '9')\r\n  {\r\n    segmentValue = SEGMENT_MAP_DIGIT[ascii - '0'];\r\n  }\r\n  else if (ascii \u003e= 'a' \u0026\u0026 ascii \u003c='z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'a'];\r\n  }\r\n  else if (ascii \u003e= 'A' \u0026\u0026 ascii \u003c='Z')\r\n  {\r\n    segmentValue = SEGMENT_MAP_ALPHA[ascii - 'A'];\r\n  }\r\n  else\r\n  {\r\n    switch (ascii)\r\n    {\r\n      case '-':\r\n        segmentValue = 191;\r\n        break;\r\n      case '.':\r\n        segmentValue = 127;\r\n        break;\r\n      case '_':\r\n        segmentValue = 247;\r\n        break;\r\n      case ' ':\r\n        segmentValue = 255;\r\n        break;\r\n    }\r\n  }\r\n  \r\n  return segmentValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\nint MedianOf5(int s0, int s1, int s2, int s3, int s4)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s3)\r\n  {\r\n    s3 = s0;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    s1 = s4;\r\n  }\r\n  \r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s2 = s3;\r\n  }\r\n\r\n  return s2;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// Find the median value, given nine data samples. \r\nint MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8)\r\n{\r\n  int tmp;\r\n\r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s0 \u003e s1)\r\n  {\r\n    tmp = s0;\r\n    s0 = s1;\r\n    s1 = tmp;\r\n  }\r\n  if (s3 \u003e s4)\r\n  {\r\n    tmp = s3;\r\n    s3 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s6 \u003e s7)\r\n  {\r\n    tmp = s6;\r\n    s6 = s7;\r\n    s7 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s2)\r\n  {\r\n    tmp = s1;\r\n    s1 = s2;\r\n    s2 = tmp;\r\n  }\r\n  if (s4 \u003e s5)\r\n  {\r\n    tmp = s4;\r\n    s4 = s5;\r\n    s5 = tmp;\r\n  }\r\n  if (s7 \u003e s8)\r\n  {\r\n    tmp = s7;\r\n    s7 = s8;\r\n    s8 = tmp;\r\n  }\r\n  \r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  if (s4 \u003e s7)\r\n  {\r\n    tmp = s4;\r\n    s4 = s7;\r\n    s7 = tmp;\r\n  }\r\n  if (s5 \u003e s8)\r\n  {\r\n    s5 = s8;\r\n  }\r\n  if (s0 \u003e s3)\r\n  {\r\n    tmp = s0;\r\n    s3 = tmp;\r\n  }\r\n  \r\n  if (s1 \u003e s4)\r\n  {\r\n    tmp = s1;\r\n    s1 = s4;\r\n    s4 = tmp;\r\n  }\r\n  if (s2 \u003e s5)\r\n  {\r\n    s2 = s5;\r\n  }\r\n  if (s3 \u003e s6)\r\n  {\r\n    tmp = s3;\r\n    s3 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s4 \u003e s7)\r\n  {\r\n    s4 = s7;\r\n  }\r\n  if (s1 \u003e s3)\r\n  {\r\n    s3 = s1;\r\n  }\r\n  \r\n  if (s2 \u003e s6)\r\n  {\r\n    tmp = s2;\r\n    s2 = s6;\r\n    s6 = tmp;\r\n  }\r\n  \r\n  if (s2 \u003e s3)\r\n  {\r\n    s3 = s2;\r\n  }\r\n  if (s4 \u003e s6)\r\n  {\r\n    s4 = s6;\r\n  }\r\n  \r\n  if (s3 \u003e s4)\r\n  {\r\n    s4 = s3;\r\n  }\r\n  return s4;\r\n}\r\n\r\n/* ---------------------------------------------------------------------- */\r\n\r\n#if defined(__AVR_ATmega328P__)      // Uno\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 0, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTD, 7);\r\n      bitClear(PORTD, 7);          \r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 3, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 3, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 2, value);\r\n      break;\r\n      }\r\n  }\r\n\r\n#elif defined(__AVR_ATmega32U4__)   // Leonardo\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTD, 4);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTB, 4, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTE, 6);\r\n      bitClear(PORTE, 6);\r\n    } \r\n\r\n    bitSet(PORTD, 4);\r\n  }\r\n  \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTD, 0, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTC, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTD, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n      }\r\n  }\r\n  \r\n#elif defined(__AVR_ATmega2560__) // Mega 2560\r\n\r\n/* Write a value to one of the 4 digits of the display */\r\n/*\r\nvoid WriteValueToSegment(byte Segment, byte Value)\r\n{\r\n  digitalWrite(LATCH_PIN,LOW);\r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, Value); \r\n  shiftOut(DATA_PIN, CLK_PIN, MSBFIRST, SEGMENT_SELECT[Segment] );\r\n  digitalWrite(LATCH_PIN,HIGH);\r\n}\r\n*/\r\n\r\n  /* Write a value to one of the 4 digits of the display */\r\n  void WriteValueToSegment(byte Segment, byte Value)\r\n  {\r\n    bitClear(PORTG, 5);\r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(Value \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);\r\n    } \r\n\r\n    for (uint8_t i = 0; i \u003c 8; i++)  {\r\n      bitWrite(PORTH, 5, !!(SEGMENT_SELECT[Segment] \u0026 (1 \u003c\u003c (7 - i))));\r\n      bitSet(PORTH, 4);\r\n      bitClear(PORTH, 4);          \r\n    } \r\n\r\n    bitSet(PORTG, 5);\r\n  }\r\n \r\n  void writeBeeper (byte value)\r\n  {\r\n    bitWrite(PORTE, 5, value);\r\n  }\r\n  \r\n  void writeLed(byte ledIdx, byte value)\r\n  {\r\n    switch (ledIdx)\r\n    {\r\n    case 0:\r\n      bitWrite(PORTB, 7, value);\r\n      break;\r\n    case 1:\r\n      bitWrite(PORTB, 6, value);\r\n      break;\r\n    case 2:\r\n      bitWrite(PORTB, 5, value);\r\n      break;\r\n    case 3:\r\n      bitWrite(PORTB, 4, value);\r\n      break;\r\n      }\r\n  }\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 9352

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","languageId":"cpp","version":1,"text":"#ifndef MultiFuncShield_h_\r\n#define MultiFuncShield_h_\r\n\r\n#define MULTI_FUNCTION_SHIELD_LIB_1_3\r\n\r\n#include \"Arduino.h\"\r\n\r\n#define ON  1\r\n#define OFF  0\r\n\r\n#define LED_1_PIN     13\r\n#define LED_2_PIN     12\r\n#define LED_3_PIN     11\r\n#define LED_4_PIN     10\r\n#define POT_PIN       0\r\n#define BEEPER_PIN    3\r\n#define BUTTON_1_PIN  A1\r\n#define BUTTON_2_PIN  A2\r\n#define BUTTON_3_PIN  A3\r\n#define LATCH_PIN     4\r\n#define CLK_PIN       7\r\n#define DATA_PIN      8\r\n#define LM35_PIN      A4\r\n\r\n#define DIGIT_1  1\r\n#define DIGIT_2  2\r\n#define DIGIT_3  4\r\n#define DIGIT_4  8\r\n#define DIGIT_ALL  15\r\n\r\n#define LED_1  1\r\n#define LED_2  2\r\n#define LED_3  4\r\n#define LED_4  8\r\n#define LED_ALL  15\r\n\r\n// button state indicators\r\n#define BUTTON_PRESSED_IND        (0 \u003c\u003c 6)\r\n#define BUTTON_SHORT_RELEASE_IND  (1 \u003c\u003c 6)\r\n#define BUTTON_LONG_PRESSED_IND   (2 \u003c\u003c 6)\r\n#define BUTTON_LONG_RELEASE_IND   (3 \u003c\u003c 6)\r\n\r\n#define BUTTON_1_PRESSED        (1 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_1_SHORT_RELEASE  (1 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_1_LONG_PRESSED   (1 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_1_LONG_RELEASE   (1 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_2_PRESSED        (2 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_2_SHORT_RELEASE  (2 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_2_LONG_PRESSED   (2 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_2_LONG_RELEASE   (2 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_3_PRESSED        (3 |  BUTTON_PRESSED_IND)\r\n#define BUTTON_3_SHORT_RELEASE  (3 |  BUTTON_SHORT_RELEASE_IND)\r\n#define BUTTON_3_LONG_PRESSED   (3 |  BUTTON_LONG_PRESSED_IND)\r\n#define BUTTON_3_LONG_RELEASE   (3 |  BUTTON_LONG_RELEASE_IND)\r\n\r\n#define BUTTON_COUNT            3\r\n#define SMOOTHING_NONE          0\r\n#define SMOOTHING_MODERATE      1\r\n#define SMOOTHING_STRONG        2\r\n\r\n\r\nclass MultiFuncShield\r\n{\r\n\r\n  public:\r\n    // Pointer to user interrupt with frequency of 1khz.\r\n    void (*userInterrupt)() = NULL;\r\n      \r\n    // Initializes this instance, but interrupt based features are not available.\r\n    void initialize();\r\n    \r\n    // For internal use only.\r\n    void isrCallBack();\r\n\r\n    // Initiates a millisecond countdown timer.\r\n    void setTimer (unsigned long thousandths);\r\n\r\n    // Gets the current value of the countdown timer.\r\n    unsigned long getTimer();\r\n\r\n    // Initiates and waits for millisecond countdown timer to reach 0.\r\n    void wait(unsigned long thousandths);\r\n    \r\n    // Writes to the LED digit display.\r\n    void write(const char *textstring, byte rightJustify =0);\r\n    void write(int integer);\r\n    void write(float number, byte decimalPlaces = 1);\r\n    \r\n    // Manually refreshes the Led digit display.\r\n    // Not to be used whilst interrupt based features are available.\r\n    void manualDisplayRefresh();\r\n    \r\n    // Blinks the digits on the LED digit display.\r\n    void blinkDisplay(byte digits,           // use bitwise or, e.g. DIGIT_1 | DIGIT_2\r\n                      byte enabled = ON      // turns on/off the blinking\r\n                    );\r\n\r\n    void setDisplayBrightness(byte level);  // 0 = max, 3 = min\r\n    \r\n    // Turns LEDs on or off.\r\n    void writeLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte lit                  // ON or OFF\r\n                   );\r\n\r\n    // Blinks the LEDs.\r\n    void blinkLeds(byte leds,                // use bitwise or, e.g. LED_1 | LED_2\r\n                   byte enabled = ON         // ON or OFF\r\n                   );\r\n    \r\n    // Engage the beeper, which is managed in the background. Period timing is in 100th of second\r\n    void beep(unsigned int onPeriod = 20, unsigned int offPeriod = 0, byte cycles = 1, unsigned int loopCycles = 1 /* 0=indefinitely */, unsigned int loopDelayPeriod =0);\r\n\r\n    // Use this to set the off period whilst the beeper is engaged,\r\n    void setBeepOffPeriod(unsigned int offPeriod);\r\n\r\n    // Queues a button action to the button queue, e.g BUTTON_1_PRESSED\r\n    void queueButton (byte button);\r\n\r\n    // Pulls a button action from the button queue.\r\n    byte getButton();\r\n\r\n    // Queues button short press and release actions. Long button presses are not supported, and long releases are reported as short releases.\r\n    // Should not be used whilst interrupt based features are available.\r\n    void manualButtonHandler();\r\n    \r\n    // Initializes the pulse counter. Used for counting pulses applied to an input pin. Max pulse frequency 500hz.\r\n    void initPulseInCounter(byte pin = BUTTON_1_PIN,        // input pin\r\n                            unsigned int timeOut = 3000,    // the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n                            byte trigger = LOW              // trigger counter on either rising or falling edge\r\n                            );\r\n\r\n    void disablePulseInCounter();\r\n    \r\n    // Gets the period of the most recent pulse (in milliseconds).\r\n    unsigned int getPulseInPeriod();\r\n\r\n    // Gets the total number pulses counted.\r\n    unsigned long getPulseInTotalCount();\r\n\r\n    // Resets the pulse counter to 0.\r\n    void resetPulseInTotalCount();\r\n\r\n    // Sets the pulse in timeout, which is the number of milliseconds to wait for a pulse, before resetting pulse in period to 0.\r\n    void setPulseInTimeOut(unsigned int timeOut);\r\n\r\n    // Initializes the sonar reading feature. Needs HC-SR04 sonar module.\r\n    void initSonar(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong.\r\n\r\n    // Gets the distance measured in centimeters, using HC-SR04 sonar module.\r\n    unsigned int getSonarDataCm(byte triggerPin, byte echoPin);\r\n\r\n    // Initializes temperature reading feature. Needs LM35 sensor. Must remove jumper J1 from shield.\r\n    void initLM35(byte level = SMOOTHING_MODERATE); // level 0=none, 1=moderate, 2=strong\r\n\r\n    // Gets the temperature reading in 1 tenths of a centigrade.\r\n    int getLM35Data();\r\n    \r\n  private:\r\n    volatile byte timerReadInProgress = 0;\r\n    volatile byte timerWriteInProgress = 0;\r\n    \r\n    //const byte buttonPins[3] = {BUTTON_1_PIN, BUTTON_2_PIN, BUTTON_3_PIN};  // must correspond to button macros above\r\n    \r\n    volatile byte buttonBuffer[BUTTON_COUNT * 2];\r\n    volatile char buttonBufferCount = 0;\r\n    volatile byte button_write_pos = 0;\r\n    volatile byte button_read_pos = 0;\r\n    \r\n    unsigned int buttonSampleIntervalCounter =0;\r\n    byte buttonState[BUTTON_COUNT] = {0,0,0};    // current up or down state\r\n    unsigned int buttonPressTime[BUTTON_COUNT] = {0,0,0};\r\n    \r\n    volatile unsigned long timer_volatile = 0;    // count down timer 1000th of a second resolution.\r\n    volatile unsigned long timer_safe = 0;\r\n    \r\n    volatile byte beeperModifyInProgress = 0;\r\n    volatile byte beeperState =0;  // 0=on period; 1=off period\r\n    volatile unsigned int beeperOnPeriodReloadValue =0;\r\n    volatile unsigned int beeperOffPeriodReloadValue =0;\r\n    volatile unsigned int beeperPeriodCounter = 0;\r\n    volatile byte beeperCycleReloadValue = 0;\r\n    volatile byte beeperCycleCounter =0;\r\n    volatile unsigned int beeperLoopCycleCounter =0;\r\n    volatile unsigned int beeperLoopDelayPeriodReloadValue =0;\r\n    \r\n    byte displayIdx = 0;\r\n    byte blinkEnabled = 0;  // least significant bits mapped to display digits.\r\n    byte blinkState = 0;\r\n    byte blinkCounter = 0;\r\n    \r\n    byte ledState =0;              // least significant bits mapped to LEDs\r\n    byte ledBlinkEnabled =0;       // least significant bits mapped to LEDs\r\n    byte ledOutput=0;              // current led outputs (taking into consideration blink)\r\n\r\n    volatile byte pulseInEnabled = false;\r\n    volatile byte pulseInReadInProgress =0;\r\n    volatile byte pulseInWriteInProgress =0;\r\n    \r\n    volatile unsigned int pulseInTimeOut = 3000;  // time frame for measuring pulse period.\r\n    volatile byte pulseInPin = BUTTON_1_PIN;\r\n    volatile unsigned int pulseInPeriodCounter = 3000;\r\n    volatile byte pulseInTrigger = LOW; // trigger on LOW or HIGH\r\n    volatile unsigned int pulseInPeriod_volatile =0;\r\n    volatile unsigned int pulseInPeriod_safe =0;\r\n    volatile byte pulseInState =0;\r\n    volatile unsigned long pulseInTotalCount_volatile = 0;\r\n    volatile unsigned long pulseInTotalCount_safe = 0;\r\n    \r\n    byte sonarSmoothingLevel = SMOOTHING_MODERATE;\r\n    byte lm35SmoothingLevel = SMOOTHING_MODERATE;\r\n};\r\n\r\nextern MultiFuncShield MFS;\r\n\r\n// returns median of 5 data samples.\r\nextern int MedianOf5(int s0, int s1, int s2, int s3, int s4);\r\n\r\n// returns median of 9 data samples.\r\nextern int MedianOf9(int s0, int s1, int s2, int s3, int s4, int s5, int s6, int s7, int s8);\r\n\r\n#endif\r\n"}},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 393

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":1}}Content-Length: 1147

{"id":1,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 1147

{"id":2,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"text":"S"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":3,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.h","version":1}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/banks/Documents/Arduino/libraries/MultiFuncShield-Library/MultiFuncShield.cpp","version":1}}Content-Length: 1147

{"id":3,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'SMFS'","range":{"end":{"character":6,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":2}}Content-Length: 1147

{"id":4,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":3}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":5,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":5,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'SeMFS'","range":{"end":{"character":7,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":3}}Content-Length: 1147

{"id":6,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":7,"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 1147

{"id":7,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 396

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'SerMFS'","range":{"end":{"character":8,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":4}}Content-Length: 1147

{"id":8,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 202

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":9,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 1147

{"id":9,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'SeriMFS'","range":{"end":{"character":9,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":5}}Content-Length: 1148

{"id":10,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":11,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":11,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 399

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'SeriaMFS'","range":{"end":{"character":10,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":6}}Content-Length: 1148

{"id":12,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"text":"l"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":13,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":13,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 798

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'SerialMFS'; did you mean 'Serial'? (fix available)\n\nC:\\Users\\banks\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\HardwareSerial.h:143:25:\nnote: 'Serial' declared here","range":{"end":{"character":11,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"no_member","message":"No member named 'initialize' in 'HardwareSerial'","range":{"end":{"character":22,"line":11},"start":{"character":12,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":7}}Content-Length: 1148

{"id":14,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 304

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":16,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 310

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"text":"."}]},"jsonrpc":"2.0"}Content-Length: 287

{"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 7848

{"id":17,"jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"detail":"void","filterText":"_rx_complete_irq","insertText":"_rx_complete_irq()","insertTextFormat":2,"kind":2,"label":" _rx_complete_irq()","score":9.6800003051757812,"sortText":"3ee51eb8_rx_complete_irq","textEdit":{"newText":"_rx_complete_irq()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"void","filterText":"_tx_udr_empty_irq","insertText":"_tx_udr_empty_irq()","insertTextFormat":2,"kind":2,"label":" _tx_udr_empty_irq()","score":9.6800003051757812,"sortText":"3ee51eb8_tx_udr_empty_irq","textEdit":{"newText":"_tx_udr_empty_irq()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"int","filterText":"available","insertText":"available()","insertTextFormat":2,"kind":2,"label":" available()","score":9.6800003051757812,"sortText":"3ee51eb8available","textEdit":{"newText":"available()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"int","filterText":"availableForWrite","insertText":"availableForWrite()","insertTextFormat":2,"kind":2,"label":" availableForWrite()","score":9.6800003051757812,"sortText":"3ee51eb8availableForWrite","textEdit":{"newText":"availableForWrite()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[2 overloads]","filterText":"begin","insertText":"begin($0)","insertTextFormat":2,"kind":2,"label":" begin(…)","score":9.6800003051757812,"sortText":"3ee51eb8begin","textEdit":{"newText":"begin($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"void","filterText":"end","insertText":"end()","insertTextFormat":2,"kind":2,"label":" end()","score":9.6800003051757812,"sortText":"3ee51eb8end","textEdit":{"newText":"end()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"void","filterText":"flush","insertText":"flush()","insertTextFormat":2,"kind":2,"label":" flush()","score":9.6800003051757812,"sortText":"3ee51eb8flush","textEdit":{"newText":"flush()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"int","filterText":"peek","insertText":"peek()","insertTextFormat":2,"kind":2,"label":" peek()","score":9.6800003051757812,"sortText":"3ee51eb8peek","textEdit":{"newText":"peek()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"int","filterText":"read","insertText":"read()","insertTextFormat":2,"kind":2,"label":" read()","score":9.6800003051757812,"sortText":"3ee51eb8read","textEdit":{"newText":"read()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[5 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[3 overloads]","filterText":"write","insertText":"write($0)","insertTextFormat":2,"kind":2,"label":" write(…)","score":9.6800003051757812,"sortText":"3ee51eb8write","textEdit":{"newText":"write($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"void","filterText":"clearWriteError","insertText":"clearWriteError()","insertTextFormat":2,"kind":2,"label":" clearWriteError()","score":4.8400001525878906,"sortText":"3f651eb8clearWriteError","textEdit":{"newText":"clearWriteError()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[5 overloads]","filterText":"find","insertText":"find($0)","insertTextFormat":2,"kind":2,"label":" find(…)","score":4.8400001525878906,"sortText":"3f651eb8find","textEdit":{"newText":"find($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[4 overloads]","filterText":"findUntil","insertText":"findUntil($0)","insertTextFormat":2,"kind":2,"label":" findUntil(…)","score":4.8400001525878906,"sortText":"3f651eb8findUntil","textEdit":{"newText":"findUntil($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"unsigned long","filterText":"getTimeout","insertText":"getTimeout()","insertTextFormat":2,"kind":2,"label":" getTimeout()","score":4.8400001525878906,"sortText":"3f651eb8getTimeout","textEdit":{"newText":"getTimeout()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"int","filterText":"getWriteError","insertText":"getWriteError()","insertTextFormat":2,"kind":2,"label":" getWriteError()","score":4.8400001525878906,"sortText":"3f651eb8getWriteError","textEdit":{"newText":"getWriteError()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"float","filterText":"parseFloat","insertText":"parseFloat()","insertTextFormat":2,"kind":2,"label":" parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","score":4.8400001525878906,"sortText":"3f651eb8parseFloat","textEdit":{"newText":"parseFloat()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"long","filterText":"parseInt","insertText":"parseInt()","insertTextFormat":2,"kind":2,"label":" parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","score":4.8400001525878906,"sortText":"3f651eb8parseInt","textEdit":{"newText":"parseInt()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[11 overloads]","filterText":"print","insertText":"print($0)","insertTextFormat":2,"kind":2,"label":" print(…)","score":4.8400001525878906,"sortText":"3f651eb8print","textEdit":{"newText":"print($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[12 overloads]","filterText":"println","insertText":"println($0)","insertTextFormat":2,"kind":2,"label":" println(…)","score":4.8400001525878906,"sortText":"3f651eb8println","textEdit":{"newText":"println($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[2 overloads]","filterText":"readBytes","insertText":"readBytes($0)","insertTextFormat":2,"kind":2,"label":" readBytes(…)","score":4.8400001525878906,"sortText":"3f651eb8readBytes","textEdit":{"newText":"readBytes($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"[2 overloads]","filterText":"readBytesUntil","insertText":"readBytesUntil($0)","insertTextFormat":2,"kind":2,"label":" readBytesUntil(…)","score":4.8400001525878906,"sortText":"3f651eb8readBytesUntil","textEdit":{"newText":"readBytesUntil($0)","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"String","filterText":"readString","insertText":"readString()","insertTextFormat":2,"kind":2,"label":" readString()","score":4.8400001525878906,"sortText":"3f651eb8readString","textEdit":{"newText":"readString()","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"String","filterText":"readStringUntil","insertText":"readStringUntil(${1:char terminator})","insertTextFormat":2,"kind":2,"label":" readStringUntil(char terminator)","score":4.8400001525878906,"sortText":"3f651eb8readStringUntil","textEdit":{"newText":"readStringUntil(${1:char terminator})","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}},{"detail":"void","filterText":"setTimeout","insertText":"setTimeout(${1:unsigned long timeout})","insertTextFormat":2,"kind":2,"label":" setTimeout(unsigned long timeout)","score":4.8400001525878906,"sortText":"3f651eb8setTimeout","textEdit":{"newText":"setTimeout(${1:unsigned long timeout})","range":{"end":{"character":9,"line":11},"start":{"character":9,"line":11}}}}]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":18,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 392

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"no_member","message":"No member named 'MFS' in 'HardwareSerial'","range":{"end":{"character":12,"line":11},"start":{"character":9,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":8}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}
>>>
Content-Length: 1037

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":9},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup();\n#line 6 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid loop();\n#line 10 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid foo(const char *text);\n#line 1 \"C:\\\\Users\\\\banks\\\\Documents\\\\Arduino\\\\Multifunction Shield\\\\LibraryTests\\\\LibraryTests.ino\"\nvoid setup()\n{\n  MFS.initialize();\n}\n\nvoid loop()\n{\n}\n\nvoid foo(const char *text)\n{\n  Serial.println(text);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 311

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 1148

{"id":19,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":10}}Content-Length: 1148

{"id":20,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"text":"e"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":11},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":21,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1148

{"id":21,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":11}}Content-Length: 1148

{"id":22,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":11}},"text":"g"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":12},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":23,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":23,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":12}}Content-Length: 1148

{"id":24,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":13},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":25,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":25,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":13}}Content-Length: 1148

{"id":26,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":11,"character":13},"end":{"line":11,"character":13}},"text":"n"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":14},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":27,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":27,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":14}}Content-Length: 1148

{"id":28,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"text":" "}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":15},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":29,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":29,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":15}}Content-Length: 1148

{"id":30,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 328

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":31,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":16}}Content-Length: 1148

{"id":32,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 314

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"text":"()"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":33,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":17}}Content-Length: 1148

{"id":34,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 240

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"position":{"line":11,"character":15}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":35,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":36,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"text":"9"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":38,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":18}}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"text":"6"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":39,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":19}}Content-Length: 1148

{"id":40,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":41,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":20}}Content-Length: 1148

{"id":42,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"text":"0"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":23},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":43,"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":43,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 394

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":21}}Content-Length: 1148

{"id":44,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":46,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 313

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1148

{"id":48,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}Content-Length: 942

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"pp_file_not_found","message":"'Arduino.h' file not found","range":{"end":{"character":20,"line":0},"start":{"character":9,"line":0}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'MFS'","range":{"end":{"character":5,"line":11},"start":{"character":2,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tialize'","range":{"end":{"character":28,"line":11},"start":{"character":21,"line":11}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Serial'","range":{"end":{"character":8,"line":20},"start":{"character":2,"line":20}},"severity":1,"source":"clang"}],"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":22}}
>>>
Content-Length: 494

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":11,"character":21},"end":{"line":11,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":21},"end":{"line":11,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tialize'"}]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 1148

{"id":50,"jsonrpc":"2.0","result":[{"kind":12,"name":"setup","range":{"end":{"character":12,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":10,"line":3},"start":{"character":5,"line":3}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":9,"line":5},"start":{"character":5,"line":5}}},{"kind":12,"name":"foo","range":{"end":{"character":26,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":8,"line":7},"start":{"character":5,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":10,"line":9},"start":{"character":5,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":16},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"foo","range":{"end":{"character":1,"line":21},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}}]}
>>>
Content-Length: 306

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"},"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"context":{"diagnostics":[]}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"text":"\n  "}]},"jsonrpc":"2.0"}Content-Length: 203

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///C:/Users/banks/AppData/Local/Temp/arduino-language-server523564859/sketch/LibraryTests.ino.cpp"}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 102

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":52,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)
